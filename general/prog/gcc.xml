<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY gcc-download-http  "&gnu-http;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!ENTITY gcc-download-ftp   "&gnu-ftp;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!-- Update this also on the grub-uefi page -->
  <!ENTITY gcc-md5sum         "e0e48554cc6e4f261d55ddee9ab69075">
  <!ENTITY gcc-size           "84 MB">
  <!ENTITY gcc-buildsize      "13 GB (2.9 GB installed with all listed languages; add 1.5 GB for tests)">
  <!ENTITY gcc-time           "13 SBU (add 29 SBU for tests; both with parallelism=8)">
]>

<sect1 id="gcc" xreflabel="GCC-&gcc-version;">
  <?dbhtml filename="gcc.html" ?>


  <title>GCC-&gcc-version;</title>

  <indexterm zone="gcc">
    <primary sortas="a-gcc-5-0">GCC-&gcc-version;</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao "GCC"</title>

    <para>
      The <application>GCC</application> package contains the GNU Compiler
Collection. This page describes the installation of compilers for the
following languages: C, C++, Fortran, Objective C, Objective C++, Go, and
Modula2.  Since C and C++ are installed in LFS, this page is either for
upgrading C and C++, or for installing additional compilers.
    </para>

    <note>
      <para>
        Additional languages, among which D and Ada, are available in the
collection. D and Ada have a binary bootstrap requirement for the first
installation, so their installation is not described here. To install them,
you can proceed along the same lines as below after installing the
corresponding compiler from a binary package, adding <option>ada</option> or
<option>d</option> to the <parameter>--enable-languages</parameter> line.
      </para>
    </note>

    &lfs120_checked;

    <caution>
      <para>
        If you are upgrading <application>GCC</application> from any other version
prior to &gcc-version;, then you must be careful compiling 3rd party kernel
modules. You should ensure that the kernel and all its native modules are
also compiled using the same version of <application>GCC</application> that
you use to build the 3rd party module.  This issue does not affect native
kernel (and kernel modules) updates, as the instructions below are a
complete reinstallation of <application>GCC</application>. If you have
existing 3rd party modules installed, ensure they are recompiled using the
updated version of <application>GCC</application>. As always, never update
the kernel headers from the ones used when <application>Glibc</application>
was compiled during LFS.
      </para>
    </caution>

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&gcc-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&gcc-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &gcc-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &gcc-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &gcc-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &gcc-time;
        </para>
      </listitem>
    </itemizedlist>

    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Optional patch when adding Go to the desired language list:
          <ulink url="&patch-root;/gcc-&gcc-version;-fix_go_version-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
<bridgehead renderas="sect3">Dependências do "GCC"</bridgehead>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="gdb"/>, <xref linkend="valgrind"/> (para os testes) e <ulink
url="https://repo.or.cz/isl.git">ISL</ulink> (para habilitar a otimização
"graphite")
    </para>

    <para condition="html" role="usernotes">
      Editor Notes: <ulink url="&blfs-wiki;/gcc"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação do "GCC"</title>

    <important>
      <para>
        Mesmo se você especificar somente linguagens diferentes de "C" e "C++" para
o comando <command>./configure</command> abaixo, o processo de instalação
substituirá seus compiladores e bibliotecas "C" e "C++" do
<application>GCC</application> existentes. Executar a suíte completa de
teste é recomendado.
      </para>

      <para>
        Não continue com o comando <command>make install</command> até ter certeza
de que a construção foi bem-sucedida. Você pode comparar seus resultados de
teste com aqueles encontrados em <ulink
url="https://gcc.gnu.org/ml/gcc-testresults/"/>. Você também possivelmente
deseje consultar as informações encontradas na seção do
<application>GCC</application> do Capítulo 8 no livro LFS (<ulink
url="&lfs-root;/chapter08/gcc.html"/>).
      </para>
    </important>

    <para>
      As instruções abaixo estão intencionalmente realizando um processo de
<quote>bootstrap</quote>. As instruções iniciais de carregamento são
necessárias para robustez e são altamente recomendadas ao atualizar a versão
dos compiladores. Para desabilitar as instruções iniciais de carregamento de
qualquer maneira, adicione <parameter>--disable-bootstrap</parameter> às
opções <command>./configure</command> abaixo.
    </para>

    <para>
      Instale <application>GCC</application> executando os seguintes comandos:
    </para>

<screen><userinput>case $(uname -m) in
  x86_64)
    sed -i.orig '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
  ;;
esac

mkdir build               &amp;&amp;
cd    build               &amp;&amp;

../configure              \
    --prefix=/usr         \
    --disable-multilib    \
    --with-system-zlib    \
    --enable-default-pie  \
    --enable-default-ssp  \
    --disable-fixincludes \
    --enable-languages=c,c++,fortran,go,objc,obj-c++,m2 &amp;&amp;
make</userinput></screen>

    <para>
      If you have installed additional packages such as
<application>valgrind</application> and <application>gdb</application>, the
<application>gcc</application> part of the test suite will run more tests
than in LFS. Some of those will report FAIL and others XPASS (pass when
expected to FAIL). As of gcc-13.2.0, about 65 FAIL occur in the
<quote>guality</quote> suite, as well as miscellaneous failures throughout
the rest of the test suite.  If all the compilers above are built, there
will be a little over 80 unexpected failures out of over 546,000 tests. To
run the tests, issue:
    </para>

<!-- The command above may error out, so using && may prevent the summary
to be run. -->
<screen><userinput>ulimit -s 32768 &amp;&amp;
make -k check</userinput></screen>


    <para>
      Os testes são muito longos e os resultados possivelmente sejam difíceis de
encontrar nos registros, especialmente se você usar tarefas paralelas com
"make". Você consegue obter um resumo dos testes com:
    </para>

<screen><userinput>../contrib/test_summary</userinput></screen>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

mkdir -pv /usr/share/gdb/auto-load/usr/lib             &amp;&amp;
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib &amp;&amp;

chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/&gcc-version;/include{,-fixed}</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <command>mkdir build; cd build</command>: A documentação do
<application>GCC</application> recomenda construir o pacote em um diretório
de construção dedicado.
    </para>

    <para>
      <parameter>--disable-multilib</parameter>: Esse parâmetro garante que os
arquivos sejam criados para a arquitetura específica do seu computador.
    </para>

    <para>
      <parameter>--with-system-zlib</parameter>: Usa a
<application>zlib</application> do sistema em vez daquela empacotada. A
<application>zlib</application> é usada para comprimir e descomprimir a
linguagem intermediária do <application>GCC</application> em arquivos de
objeto "Link Time Optimization" ("LTO").
    </para>

    <para>
      <parameter>--enable-default-pie</parameter>: Torna a opção
<option>-fpie</option> o padrão ao compilar aplicativos. Juntamente com o
recurso <xref linkend="gASLR"/> habilitado no núcleo, isso derrota alguns
tipos de ataques baseados em esquemas conhecidos de memória.
    </para>

    <para>
      <parameter>--enable-default-ssp</parameter>: Torna a opção
<option>-fstack-protector-strong</option> o padrão ao compilar
aplicativos. <xref linkend="gSSP"/> é uma técnica que evita a alteração do
fluxo do programa por corrompimento da pilha de parâmetros.
    </para>

    <para>
      <parameter>--enable-languages=c,c++,fortran,go,objc,obj-c++,m2</parameter>:
This command identifies which languages to build. You may modify this
command to remove undesired languages.  GCC also supports Ada and D, but
building GCC with Ada (or D) support needs an existing Ada (or D) compiler.
So they are not enabled here.
    </para>

    <para>
      <command>ulimit -s 32768</command>: Esse comando evita que vários testes
fiquem sem espaço na pilha.
    </para>

    <para>
      <command>make -k check</command>: Esse comando executa a suíte de teste sem
parar se quaisquer erros forem encontrados.
    </para>

    <para>
      <command>../contrib/test_summary</command>: Esse comando produzirá um resumo
dos resultados da suíte de teste. Você pode anexar <command>| grep -A7
Summ</command> ao comando para produzir uma versão ainda mais condensada do
resumo. Você possivelmente também deseje redirecionar a saída gerada para um
arquivo para revisão e comparação posterior.
    </para>

    <para>
      <command>mv -v /usr/lib/*gdb.py ...</command>: A etapa de instalação coloca
alguns arquivos usados pelo <application>gdb</application> sob o diretório
<filename class="directory">/usr/lib</filename>. Isso gera mensagens de erro
falsas ao executar o <command>ldconfig</command>. Esse comando move os
arquivos para outro local.
    </para>

    <para>
      <command>chown -v -R root:root /usr/lib/gcc/*linux-gnu/...</command>: Se o
pacote for construído por um(a) usuário(a) diferente de "root", [então]
titularidade da propriedade do diretório <filename
class="directory">include</filename> instalado (e o conteúdo dele) estará
incorreta. Esse comando muda a titularidade da propriedade para o(a)
usuário(a) e grupo <systemitem class="username">root</systemitem>.
    </para>

    <para>
      <!-- from Arch, not tested -->
<option>--enable-host-shared --enable-languages=jit</option>: Build
<systemitem class="library">libgccjit</systemitem>, a library for embedding
GCC inside programs and libraries for generating machine code.  Despite
<quote>JIT</quote> (just-in-time) in the name, the library can be used for
AOT (ahead-of-time) compilation as well.
<option>--enable-host-shared</option> is needed for building <systemitem
class="library">libgccjit</systemitem>, but it significantly slows down
GCC.  So <systemitem class="library">libgccjit</systemitem> should be built
and installed separately, not as a part of the <quote>main</quote> GCC
installation.  If you need this library, configure GCC with these two
options and install the library by running <command>make -C gcc
jit.install-common jit.install-info</command> as the &root; user.  This
library is not used by any BLFS package, nor tested by the BLFS developers.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <para>
      Alguns nomes e descrições de aplicativos e bibliotecas não estão listados
aqui, mas podem ser encontrados na <ulink
url="&lfs-root;/chapter08/gcc.html#contents-gcc">seção do LFS para
"GCC"</ulink>, já que foram inicialmente instalados durante a construção do
LFS.
    </para>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          gccgo, gfortran, gm2, go, and gofmt, hard-linked to architecture specific
names
        </seg>
        <seg>
          libgfortran.{so,a}, libgm2.{so,a} libgo.{so,a}, libgobegin.a,
libgolibbegin.a, libobjc.{so,a}, and numerous other run-time libraries and
executables
        </seg>
        <seg>
          /usr/lib/go
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="gccgo">
        <term><command>gccgo</command></term>
        <listitem>
          <para>
            é um compilador baseado em "GCC" para a linguagem
<application>Go</application>
          </para>
          <indexterm zone="gcc gccgo">
            <primary sortas="b-gccgo">gccgo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gm2">
        <term><command>gm2</command></term>
        <listitem>
          <para>
            is a GCC-based compiler for the <application>Modula-2</application> language
          </para>
          <indexterm zone="gcc gm2">
            <primary sortas="b-gm2">gm2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="go">
        <term><command>go</command></term>
        <listitem>
          <para>
            é uma ferramenta para gerenciar o código-fonte da
<application>Go</application>
          </para>
          <indexterm zone="gcc go">
            <primary sortas="b-go">go</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gofmt">
        <term><command>gofmt</command></term>
        <listitem>
          <para>
            é uma ferramenta para formatar o código-fonte da
<application>Go</application>
          </para>
          <indexterm zone="gcc gofmt">
            <primary sortas="b-gofmt">gofmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="gdc">

        <term><command>gdc</command></term>
        <listitem>
          <para>
            is a GCC-based compiler for the <application>D</application>
            language
          </para>
          <indexterm zone="gcc gdc">
            <primary sortas="b-gdc">gdc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="gfortran">
        <term><command>gfortran</command></term>
        <listitem>
          <para>
            é um compilador baseado em "GCC" para a linguagem
<application>Fortran</application>
          </para>
          <indexterm zone="gcc gfortran">
            <primary sortas="b-gfortran">gfortran</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
