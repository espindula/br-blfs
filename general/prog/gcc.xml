<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY gcc-download-http  "&gnu-http;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!ENTITY gcc-download-ftp   "&gnu-ftp;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!-- Update this also on the grub-uefi page -->
  <!ENTITY gcc-md5sum         "73bafd0af874439dcdb9fc063b6fb069">
  <!ENTITY gcc-size           "81 MB">
  <!ENTITY gcc-buildsize      "10,5 GB (2,4 GB instalado com todas as linguagens listadas; adicionar 1,3 GB
para os testes)">
  <!ENTITY gcc-time           "32 UPC (adicionar 66 UPC para os testes; ambos com paralelismo=4)">
]>

<sect1 id="gcc" xreflabel="GCC-&gcc-version;">
  <?dbhtml filename="gcc.html" ?>


  <title>GCC-&gcc-version;</title>

  <indexterm zone="gcc">
    <primary sortas="a-gcc-5-0">GCC-&gcc-version;</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao "GCC"</title>

    <para>
      O pacote <application>GCC</application> contém a coleção de compiladores
"GNU". Esta página descreve a instalação de compiladores para as seguintes
linguagens: "C", "C++", "Fortran", "Objective C", "Objective C++" e
"Go". Como "C" e "C++" são instalados no LFS, esta página é tanto para
atualizar "C" e "C++" quanto para instalar compiladores adicionais.
    </para>

    <note>
      <para>
        Linguagens adicionais, entre as quais "D" e "ADA", estão disponíveis na
coleção. "D" e "ADA" tem um requisito de instruções iniciais de carregamento
de binário para a primeira instalação, de modo que a instalação deles não é
descrita aqui. Para instalá-los, você pode proceder da mesma forma abaixo
depois de instalar o compilador correspondente a partir de um pacote
binário, adicionando <option>ada</option> ou <option>d</option> à linha
<parameter>--enable-languages</parameter>.
      </para>
    </note>

    &lfs113_checked;

    <caution>
      <para>
        Se você estiver atualizando o <application>GCC</application> a partir de
qualquer outra versão anterior ao &gcc-version;, então você precisa ser
cuidadoso(a) ao compilar módulos de terceiros do núcleo. Você deveria
garantir que o núcleo e todos os módulos nativos dele também sejam
compilados usando a mesma versão do <application>GCC</application> que você
usa para construir o módulo de terceiros. Esse problema não afeta as
atualizações do núcleo nativo (e dos módulos do núcleo), pois as instruções
abaixo são uma reinstalação completa do <application>GCC</application>. Se
você tiver módulos de terceiros instalados, certifique-se de que eles sejam
recompilados usando a versão atualizada do
<application>GCC</application>. Como sempre, nunca atualize os cabeçalhos do
núcleo a partir daqueles usados quando o <application>Glibc</application>
foi compilado durante o LFS.
      </para>

      <para>
        Alguns cabeçalhos do sistema precisam ser corrigidos para serem usados com o
"GCC". Isso é feito durante a instalação do "GCC", e os cabeçalhos
<quote>corrigidos</quote> são instalados em <filename class="directory">
/usr/lib/gcc/&lt;trio da máquina&gt;/&lt;GCC version&gt;/include-fixed
</filename>. Isso é inofensivo se o "GCC" for construído durante o estágio
LFS. Mas se você reinstalar o "GCC" no BLFS, [então] alguns dos pacotes do
BLFS possivelmente sejam <quote>corrigidos</quote>. Se um desses pacotes for
reinstalado posteriormente, [então] os cabeçalhos <quote>corrigidos</quote>
não serão atualizados, o que possivelmente leve a incompatibilidades de
versões. Caso isso aconteça, os cabeçalhos <quote>corrigidos</quote>
precisam ser atualizados executando (como <systemitem
class="username">root</systemitem>): <command> /usr/libexec/gcc/x86_64-pc
-linux-gnu/&gcc-version;/install-tools/mkheaders </command>. O trio da
máquina possivelmente seja diferente em um sistema de 32 bits.
      </para>
    </caution>

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&gcc-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&gcc-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &gcc-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &gcc-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &gcc-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &gcc-time;
        </para>
      </listitem>
    </itemizedlist>

    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch for building against glibc-2.36:
          <ulink url="&patch-root;/gcc-&gcc-version;-glibc_2.36-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
<bridgehead renderas="sect3">Dependências do "GCC"</bridgehead>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="gdb"/>, <xref linkend="valgrind"/> (para os testes) e <ulink
url="https://repo.or.cz/isl.git">ISL</ulink> (para habilitar a otimização
"graphite")
    </para>

    <para condition="html" role="usernotes">
      Observações de Usuário(a): <ulink url="&blfs-wiki;/gcc"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação do "GCC"</title>

    <important>
      <para>
        Mesmo se você especificar somente linguagens diferentes de "C" e "C++" para
o comando <command>./configure</command> abaixo, o processo de instalação
substituirá seus compiladores e bibliotecas "C" e "C++" do
<application>GCC</application> existentes. Executar a suíte completa de
teste é recomendado.
      </para>

      <para>
        Não continue com o comando <command>make install</command> até ter certeza
de que a construção foi bem-sucedida. Você pode comparar seus resultados de
teste com aqueles encontrados em <ulink
url="https://gcc.gnu.org/ml/gcc-testresults/"/>. Você também possivelmente
deseje consultar as informações encontradas na seção do
<application>GCC</application> do Capítulo 8 no livro LFS (<ulink
url="&lfs-root;/chapter08/gcc.html"/>).
      </para>
    </important>

    <para>
      As instruções abaixo estão intencionalmente realizando um processo de
<quote>bootstrap</quote>. As instruções iniciais de carregamento são
necessárias para robustez e são altamente recomendadas ao atualizar a versão
dos compiladores. Para desabilitar as instruções iniciais de carregamento de
qualquer maneira, adicione <parameter>--disable-bootstrap</parameter> às
opções <command>./configure</command> abaixo.
    </para>

    <!--
    <para>

      First fix a problem with glibc-2.36:
    </para>

<screen><userinput>patch -Np1 -i ../gcc-&gcc-version;-glibc_2.36-1.patch</userinput></screen>
-->
<para>
      Instale <application>GCC</application> executando os seguintes comandos:
    </para>

<screen><userinput>case $(uname -m) in
  x86_64)
    sed -i.orig '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
  ;;
esac

mkdir build                                           &amp;&amp;
cd    build                                            &amp;&amp;

../configure                                           \
    --prefix=/usr                                      \
    --disable-multilib                                 \
    --with-system-zlib                                 \
    --enable-default-pie                               \
    --enable-default-ssp                               \
    --enable-languages=c,c++,fortran,go,objc,obj-c++ &amp;&amp;
make</userinput></screen>

    <para>
      Se você tiver instalado pacotes adicionais, como
<application>Valgrind</application> e <application>GDB</application>,
[então] a parte <application>GCC</application> da suíte de teste executará
mais testes que no LFS. Alguns deles informarão "FAIL" e outros "XPASS"
(aprovados quando esperado "FAIL"). A partir do "gcc-12.2.0", cerca de
sessenta (60) "FAIL" ocorrem no conjunto <quote>guality</quote>, bem como
falhas diversas em todo o resto da suíte de teste, quinze dos quais já estão
presentes nos testes "GCC" do LFS. Se todos os compiladores acima forem
construídos, [então] existirão em torno de oitenta (80) falhas inesperadas
em mais que quatrocentos e oitenta e dois mil (482.000) testes. Para
executar os testes, emita:
    </para>

<!-- The command above may error out, so using && may prevent the summary
to be run. -->
<screen><userinput>ulimit -s 32768 &amp;&amp;
make -k check</userinput></screen>


    <para>
      Os testes são muito longos e os resultados possivelmente sejam difíceis de
encontrar nos registros, especialmente se você usar tarefas paralelas com
"make". Você consegue obter um resumo dos testes com:
    </para>

<screen><userinput>../contrib/test_summary</userinput></screen>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

mkdir -pv /usr/share/gdb/auto-load/usr/lib             &amp;&amp;
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib &amp;&amp;

chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/&gcc-version;/include{,-fixed}</userinput></screen>

    <para>
      Alguns pacotes esperam encontrar o pré-processador "C" em <filename
class="directory">/lib</filename> ou possivelmente se refiram ao compilador
"C" sob o nome <command>cc</command>. Os seguintes vinculos simbólicos não
são necessários se você tiver seguido as instruções do LFS, pois eles já
foram criados. Se você não os tiver em seu sistema, [então] emita como o(a)
usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>ln -v -sf ../usr/bin/cpp /lib          &amp;&amp;
ln -v -sf gcc /usr/bin/cc             &amp;&amp;
install -v -dm755 /usr/lib/bfd-plugins &amp;&amp;
ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so /usr/lib/bfd-plugins/</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <command>mkdir build; cd build</command>: A documentação do
<application>GCC</application> recomenda construir o pacote em um diretório
de construção dedicado.
    </para>

    <para>
      <parameter>--disable-multilib</parameter>: Esse parâmetro garante que os
arquivos sejam criados para a arquitetura específica do seu computador.
    </para>

    <para>
      <parameter>--with-system-zlib</parameter>: Usa a
<application>zlib</application> do sistema em vez daquela empacotada. A
<application>zlib</application> é usada para comprimir e descomprimir a
linguagem intermediária do <application>GCC</application> em arquivos de
objeto "Link Time Optimization" ("LTO").
    </para>

    <para>
      <parameter>--enable-default-pie</parameter>: Torna a opção
<option>-fpie</option> o padrão ao compilar aplicativos. Juntamente com o
recurso <xref linkend="gASLR"/> habilitado no núcleo, isso derrota alguns
tipos de ataques baseados em esquemas conhecidos de memória.
    </para>

    <para>
      <parameter>--enable-default-ssp</parameter>: Torna a opção
<option>-fstack-protector-strong</option> o padrão ao compilar
aplicativos. <xref linkend="gSSP"/> é uma técnica que evita a alteração do
fluxo do programa por corrompimento da pilha de parâmetros.
    </para>

    <para>
      <parameter>--enable-languages=c,c++,fortran,go,objc,obj-c++</parameter>:
Esse comando identifica quais linguagens construir. Você possivelmente
modifique esse comando para remover linguagens indesejadas. Outras
linguagens podem ser adicionadas, incluindo "ADA", "D", "BRIG" (adicionar
<parameter>brig</parameter> à lista de linguagens habilitadas), um formato
binário para "Heterogeneous System Architecture Intermediate Language"
("HSAIL") e "JIT" (adicionar <parameter>jit</parameter> à lista de
linguagens habilitadas), uma biblioteca que pode ser vinculada a
interpretadores que desejam gerar código de máquina <quote>em voo</quote> em
tempo de execução. Eles não foram testados pelos(as) desenvolvedores(as) do
BLFS.
    </para>

    <para>
      <command>ulimit -s 32768</command>: Esse comando evita que vários testes
fiquem sem espaço na pilha.
    </para>

    <para>
      <command>make -k check</command>: Esse comando executa a suíte de teste sem
parar se quaisquer erros forem encontrados.
    </para>

    <para>
      <command>../contrib/test_summary</command>: Esse comando produzirá um resumo
dos resultados da suíte de teste. Você pode anexar <command>| grep -A7
Summ</command> ao comando para produzir uma versão ainda mais condensada do
resumo. Você possivelmente também deseje redirecionar a saída gerada para um
arquivo para revisão e comparação posterior.
    </para>

    <para>
      <command>mv -v /usr/lib/*gdb.py ...</command>: A etapa de instalação coloca
alguns arquivos usados pelo <application>gdb</application> sob o diretório
<filename class="directory">/usr/lib</filename>. Isso gera mensagens de erro
falsas ao executar o <command>ldconfig</command>. Esse comando move os
arquivos para outro local.
    </para>

    <para>
      <command>chown -v -R root:root /usr/lib/gcc/*linux-gnu/...</command>: Se o
pacote for construído por um(a) usuário(a) diferente de "root", [então]
titularidade da propriedade do diretório <filename
class="directory">include</filename> instalado (e o conteúdo dele) estará
incorreta. Esse comando muda a titularidade da propriedade para o(a)
usuário(a) e grupo <systemitem class="username">root</systemitem>.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <para>
      Alguns nomes e descrições de aplicativos e bibliotecas não estão listados
aqui, mas podem ser encontrados na <ulink
url="&lfs-root;/chapter08/gcc.html#contents-gcc">seção do LFS para
"GCC"</ulink>, já que foram inicialmente instalados durante a construção do
LFS.
    </para>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          gccgo, gfortran, go e gofmt, rigidamente vinculados a nomes específicos de
arquitetura
        </seg>
        <seg>
          libgfortran.{so,a}, libgo.{so,a}, libgobegin.a, libgolibbegin.a,
libobjc.{so,a} e numerosos(as) outros(as) bibliotecas e executáveis de tempo
de execução
        </seg>
        <seg>
          /usr/lib/go
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="gccgo">
        <term><command>gccgo</command></term>
        <listitem>
          <para>
            é um compilador baseado em "GCC" para a linguagem
<application>Go</application>
          </para>
          <indexterm zone="gcc gccgo">
            <primary sortas="b-gccgo">gccgo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="go">
        <term><command>go</command></term>
        <listitem>
          <para>
            é uma ferramenta para gerenciar o código-fonte da
<application>Go</application>
          </para>
          <indexterm zone="gcc go">
            <primary sortas="b-go">go</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gofmt">
        <term><command>gofmt</command></term>
        <listitem>
          <para>
            é uma ferramenta para formatar o código-fonte da
<application>Go</application>
          </para>
          <indexterm zone="gcc gofmt">
            <primary sortas="b-gofmt">gofmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="gdc">

        <term><command>gdc</command></term>
        <listitem>
          <para>
            is a GCC-based compiler for the <application>D</application>
            language
          </para>
          <indexterm zone="gcc gdc">
            <primary sortas="b-gdc">gdc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="gfortran">
        <term><command>gfortran</command></term>
        <listitem>
          <para>
            é um compilador baseado em "GCC" para a linguagem
<application>Fortran</application>
          </para>
          <indexterm zone="gcc gfortran">
            <primary sortas="b-gfortran">gfortran</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
