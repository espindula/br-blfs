<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ojdk-conf" xreflabel="Configurando o ambiente JAVA">
  <?dbhtml filename="ojdk-conf.html"?>


  <title>Configurando o ambiente JAVA</title>

  <sect2 id="java-profile">
    <title>Configurando o ambiente</title>

    <para>
      Depois que a instalação do pacote estiver completa, a próxima etapa é a de
garantir que o sistema consiga encontrar os arquivos corretamente. Se você
configurar teus &quot;scripts&quot; de login conforme recomendado em
&quot;<xref linkend='postlfs-config-profile'/>&quot;, [então] atualize o
ambiente criando o &quot;script&quot;
&quot;<filename>openjdk.sh</filename>&quot;, como o(a) usuário(a)
&quot;<systemitem class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>cat &gt; /etc/profile.d/openjdk.sh &lt;&lt; "EOF"
<literal># Begin /etc/profile.d/openjdk.sh

# Set JAVA_HOME directory
JAVA_HOME=/opt/jdk

# Adjust PATH
pathappend $JAVA_HOME/bin

# Add to MANPATH
pathappend $JAVA_HOME/man MANPATH

# Auto Java CLASSPATH: Copy jar files to, or create symlinks in, the
# /usr/share/java directory.

AUTO_CLASSPATH_DIR=/usr/share/java

pathprepend . CLASSPATH

for dir in `find ${AUTO_CLASSPATH_DIR} -type d 2>/dev/null`; do
    pathappend $dir CLASSPATH
done

for jar in `find ${AUTO_CLASSPATH_DIR} -name "*.jar" 2>/dev/null`; do
    pathappend $jar CLASSPATH
done

export JAVA_HOME

# By default, Java creates several files in a directory named
# /tmp/hsperfdata_[username]. This directory contains files that are used for
# performance monitoring and profiling, but aren't normally needed on a BLFS
# system. This environment variable disables that feature.
_JAVA_OPTIONS="-XX:-UsePerfData"

export _JAVA_OPTIONS

unset AUTO_CLASSPATH_DIR dir jar _JAVA_OPTIONS

# End /etc/profile.d/openjdk.sh</literal>
EOF</userinput></screen>

    <para>
      Se &quot;<xref linkend="sudo"/>&quot; estiver instalado, [então] o(a)
superusuário(a) deveria ter acesso às variáveis acima. Execute os seguintes
comandos como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>cat &gt; /etc/sudoers.d/java &lt;&lt; "EOF"
<literal>Defaults env_keep += JAVA_HOME
Defaults env_keep += CLASSPATH
Defaults env_keep += _JAVA_OPTIONS</literal>
EOF</userinput></screen>

    <para>
      Para usar &quot;<command>mandb</command>&quot; para incluir as páginas de
manual do &quot;OpenJDK&quot; na base de dados dele, emita como o(a)
usuário(a) &quot;<systemitem class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>cat &gt;&gt; /etc/man_db.conf &lt;&lt; "EOF" &amp;&amp;
<literal># Inicia adição "Java"
MANDATORY_MANPATH     /opt/jdk/man
MANPATH_MAP           /opt/jdk/bin     /opt/jdk/man
MANDB_MAP             /opt/jdk/man     /var/cache/man/jdk
# Termina Java addition</literal>
EOF

mkdir -p /var/cache/man &amp;&amp;
mandb -c /opt/jdk/man</userinput></screen>

  </sect2>

  <sect2 id="ojdk-certs" xreflabel="instalando os Certificados de Autoridade Certificadora da &quot;JVM&quot;">

    <title>Configurando os Certificados de Autoridade Certificadora para
<quote>Java</quote></title>

    <para>
      O &quot;<application>OpenJDK</application>&quot; usa o próprio formato dele
para os certificados de &quot;AC&quot;. Os módulos de segurança do
&quot;Java&quot; usam
&quot;<envar>$JAVA_HOME</envar><filename>/lib/security/cacerts</filename>&quot;
por padrão. Para a finalidade de manter todos os certificados em um lugar,
nós usamos &quot;<filename>/etc/ssl/java/cacerts</filename>&quot;. As
instruções na página &quot;<xref linkend="make-ca"/>&quot; criaram
anteriormente o arquivo localizado em &quot;<filename
class="directory">/etc/ssl/java</filename>&quot;. Configure um link
simbólico no local padrão como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>ln -sfv /etc/pki/tls/java/cacerts /opt/jdk/lib/security/cacerts</userinput></screen>

    <para>
      Use o seguinte comando para verificar se o arquivo
&quot;<filename>cacerts</filename>&quot; foi instalado com sucesso:
    </para>

<screen role="root"><userinput>/opt/jdk/bin/keytool -list -cacerts</userinput></screen>

    <para>
      No &quot;prompt&quot; &quot;<computeroutput>Enter keystore
password:</computeroutput>&quot;, digite
&quot;<userinput>changeit</userinput>&quot; (o padrão) ou simplesmente
pressione a tecla <quote>Enter</quote>. Se o arquivo
&quot;<filename>cacerts</filename>&quot; foi instalado corretamente, [então]
você verá uma lista dos certificados com informações relacionadas a cada
um. Caso contrário, você precisa reinstalá-los.
    </para>

    <para>
      Se instalar posteriormente uma nova &quot;JVM&quot;, [então] você apenas tem
de criar o link simbólico no local padrão para estar apto(a) a usar o
&quot;cacerts&quot;.
    </para>

  </sect2>

</sect1>
