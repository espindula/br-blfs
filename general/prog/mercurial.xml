<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mercurial-download-http "https://www.mercurial-scm.org/release/mercurial-&mercurial-version;.tar.gz">
  <!ENTITY mercurial-download-ftp  "">
  <!ENTITY mercurial-md5sum        "fccff6981f362466b8e9e0fa0de0ddb6">
  <!ENTITY mercurial-size          "7.9 MB">
  <!ENTITY mercurial-buildsize     "115 MB (with docs, add 1.5 GB for tests)">
  <!ENTITY mercurial-time          "0.3 SBU (with docs; add 30 SBU for tests; both using parallelism=4)">
]>

<sect1 id="mercurial" xreflabel="Mercurial-&mercurial-version;">
  <?dbhtml filename="mercurial.html"?>


  <title>Mercurial-&mercurial-version;</title>

  <indexterm zone="mercurial">
    <primary sortas="a-mercurial">mercurial</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao &quot;Mercurial&quot;</title>

    <para>
      <application>Mercurial</application> é uma ferramenta de gerenciamento
distribuído de controle de fonte semelhante ao
<application>Git</application> e ao
<application>Bazaar</application>. <application>Mercurial</application> é
escrita em <application>Python</application> e é usada por projetos como
&quot;Mozilla&quot; para &quot;Firefox&quot; e &quot;Thunderbird&quot;.
    </para>

    &lfs120_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&mercurial-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&mercurial-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &mercurial-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &mercurial-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &mercurial-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &mercurial-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do &quot;Mercurial&quot;</bridgehead>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
    <xref linkend="docutils"/> (exigido para construir a documentação), <xref
linkend="git"/>, <xref linkend="gpgme"/> (com ligações &quot;Python&quot;),
<xref role="runtime" linkend="openssh"/> (tempo de execução, para acessar
repositórios &quot;ssh://...&quot;), <xref linkend="pygments"/>, <xref
linkend="rust"/> (veja-se <filename>rust/README.rst</filename> e
<filename>rust/rhg/README.md</filename>), <xref linkend="subversion"/> (com
ligações &quot;Python&quot;), <ulink
url="https://launchpad.net/bzr">Bazaar</ulink>, <ulink
url="https://www.nongnu.org/cvs/">CVS</ulink>, <ulink
url="https://pypi.python.org/pypi/pyflakes">pyflakes</ulink>, <ulink
url="https://www.pyopenssl.org/en/stable/">pyOpenSSL</ulink> e <ulink
url="https://github.com/google/re2/">re2</ulink>

    </para>


  </sect2>

  <sect2 role="installation">
    <title>Instalação do &quot;Mercurial&quot;</title>
    

    <!-- Rust port is now part of the standard tests -->
<para>
      Construa <application>Mercurial</application> emitindo o seguinte comando:
    </para>

<screen><userinput>make build</userinput></screen>

    <para>
      Para construir a documentação (exige <xref linkend="docutils"/>), emita:
    </para>

<screen remap="doc"><userinput>make doc</userinput></screen>

    <para>
      If you wish to run the tests, the rust tests must be removed as they are
currently broken due to syntax errors. To do this, issue:
    </para>

<screen><userinput>sed -i '138,142d' Makefile</userinput></screen>

    <para>
      Para executar a suíte de teste, emita:
    </para>
<!-- The blacklists have to be checked every release of Mercurial, do a listing
     of tests/blacklists, but do not include the README.
     For 6.4.1 removing the -blacklist entries did not affect the test results
     although blacklists/fsmonitor and blacklists/linux-vfat still exist. -->
<screen remap="test"><userinput>TESTFLAGS="-j<replaceable>&lt;N&gt;</replaceable> --tmpdir tmp" make check</userinput></screen>


    <para>
      <!--
      # Ran 908 tests, 65 skipped, 4 failed.  real  10m37.422s -bdubbs  6 Sep 22.
      # Ran 881 tests,102 skipped, 23 failed.                  -plabs  17 Nov 22.
      # Ran 919 tests, 64 skipped, 23 failed. real  10m25.285s -bdubbs 10 Jan 23.
      # Ran 893 tests,101 skipped,  9 failed. real  29m03.014s -bdubbs  5 Mar 23.
      # Ran 938 tests, 64 skipped,  8 failed. real  32m13.014s -bdubbs 17 Apr 23.
      # Ran 935 tests, 69 skipped,  8 failed. real  26m15.875s -bdubbs 10 Jun 23.
      # Ran 940 tests, 64 skipped,  8 failed. real  omitted    -bdubbs 26 Jun 23.
      # Ran 948 tests, 66 skipped, 0 failed. -pierre 12 Jul 23 (mercurial-6.5).
      -->
where <replaceable>&lt;N&gt;</replaceable> is an integer between one and the
number of ( processor X threads ), inclusive. Several tests fail because
some error messages have changed in Python or some deprecation warnings are
printed that were not present when the test was designed.  In order to
investigate any apparently failing tests, you may use the
<command>run-tests.py</command> script. To see the almost forty switches,
some of them very useful, issue <command>tests/run-tests.py
--help</command>.  Running the following commands, you will execute only the
tests that failed before:
    </para>

<screen remap="test"><userinput>pushd tests &amp;&amp;
  rm -rf tmp &amp;&amp;
  ./run-tests.py --tmpdir tmp test-gpg.t
popd</userinput></screen>

    <para>
      Normalmente, as falhas anteriores serão reproduzíveis. Porém, se você
adicionar a chave <option>--debug</option> antes de
<option>--tmpdir</option> e executar os testes novamente, [então] algumas
falhas possivelmente desapareçam, o que é um problema com a suíte de
teste. Se isso acontecer, [então] não mais existirão falhas, mesmo se você
não passar a chave &quot;--debug&quot; novamente.
    </para>

    <para>
      Uma chave interessante é <option>--time</option>, que gerará uma tabela de
todos os testes executados e respectivos tempos de início, fim, usuário(a),
sistema e real assim que os testes estiverem completos. Observe que essas
chaves possivelmente sejam usadas com <command>make check</command>
incluindo-as na variável de ambiente <envar>TESTFLAGS</envar>.
    </para>

    <para>
      Instale o <application>Mercurial</application> executando o seguinte comando
(como <systemitem class="username">root</systemitem>):
    </para>

<screen role="root"><userinput>make PREFIX=/usr install-bin</userinput></screen>

    <para>
      Se você construiu a documentação, [então] instale-a executando o seguinte
comando (como <systemitem class="username">root</systemitem>):
    </para>

<screen role="root"
        remap="doc"><userinput>make PREFIX=/usr install-doc</userinput></screen>

    <para>
      Depois da instalação, dois testes muito rápidos e simples deveriam executar
corretamente. O primeiro precisa de alguma configuração:
    </para>

<screen><userinput>cat &gt;&gt; ~/.hgrc &lt;&lt; "EOF"
<literal>[ui]
username = <replaceable>&lt;nome_usuário(a)&gt; &lt;usuário(a)@correio&gt;</replaceable></literal>
EOF</userinput></screen>

    <para>
      onde você precisa substituir &lt;nome_usuário(a)&gt; e
&lt;seu@correio-eletrônico&gt; (o correio é opcional e pode ser
omitido). Com a identidade do(a) usuário(a) definida, execute <command>hg
debuginstall</command> e diversas linhas serão exibidas, a última dizendo
&quot;no problems detected&quot;. Outro teste rápido e simples é apenas
<command>hg</command>, que deveria gerar comandos básicos que conseguem ser
usados com <command>hg</command>.
    </para>

  </sect2>



  <!--
  <sect2 role="commands">

    <title>Command Explanations</title>

      <para>
        <command>2to3 -w doc/hgmanpage.py</command>: Since <application>
        Python 3</application> is used with docutils, one file needs to be
        converted in order to be compatible.
      </para>

   </sect2>
-->
<sect2 role="configuration">
    <title>Configurando o &quot;Mercurial&quot;</title>

    <sect3 id="mercurial-config">
      <title>Arquivos de Configuração</title>

      <para>
        <filename>/etc/mercurial/hgrc</filename> e <filename>~/.hgrc</filename>
      </para>

      <indexterm zone="mercurial mercurial-config">
        <primary sortas="e-etc-mercurial-hgrc">/etc/mercurial/hgrc</primary>
      </indexterm>

      <indexterm zone="mercurial mercurial-config">
        <primary sortas="e-AA.hgrc">~/.hgrc</primary>
      </indexterm>

      <para>
        A maioria das extensões está desabilitada por padrão. Execute <command>hg
help extensions</command> se precisar habilitar alguma, por exemplo. ao
investigar falhas de teste. Isso exibirá uma lista de extensões habilitadas
e desabilitadas, bem como mais informações, tais como habilitar ou
desabilitar extensões usando arquivos de configuração.
      </para>

      <para>
        Se você tiver instalado o <xref linkend="make-ca"/> e deseja que o
<application>Mercurial</application> use os certificados, [então] como o(a)
usuário(a) <systemitem class="username">root</systemitem>, emita:
      </para>

<screen role="root"><userinput>install -v -d -m755 /etc/mercurial &amp;&amp;
cat &gt; /etc/mercurial/hgrc &lt;&lt; "EOF"
<literal>[web]
cacerts = /etc/pki/tls/certs/ca-bundle.crt</literal>
EOF</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          hg
        </seg>
        <seg>
          vários módulos internos sob
/usr/lib/python&python3-majorver;/site-packages/mercurial
        </seg>
        <seg>
          /etc/mercurial,
/usr/lib/python&python3-majorver;/site-packages/hgdemandimport,
/usr/lib/python&python3-majorver;/site-packages/hgext,
/usr/lib/python&python3-majorver;/site-packages/hgext3rd,
/usr/lib/python&python3-majorver;/site-packages/mercurial e
/usr/lib/python&python3-majorver;/site-packages/mercurial-&mercurial-version;-py&python3-majorver;.egg-info
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="hg">
        <term><command>hg</command></term>
        <listitem>
          <para>
            é o sistema de controle de versão &quot;mercurial&quot;
          </para>
          <indexterm zone="mercurial hg">
            <primary sortas="b-hg">hg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
