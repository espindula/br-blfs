<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY ojdk-tarball              "jdk-&openjdk-version;-ga.tar.gz">
  <!ENTITY ojdk-repo                 "https://github.com/openjdk/jdk20u">
  <!ENTITY ojdk-download             "&ojdk-repo;/archive/&ojdk-tarball;">

  <!ENTITY anduin-download           "&sources-anduin-http;/OpenJDK/OpenJDK-&openjdk-version;">

  <!ENTITY ojdk-md5sum               "0a6c990bd0a4eee6eee06e89b74cde19">
  <!ENTITY ojdk-size                 "105 MB">

  <!ENTITY jtreg-version             "7.2+1">
  <!ENTITY jtreg-download            "&anduin-download;/jtreg-&jtreg-version;.tar.gz">
  <!ENTITY jtreg-md5sum              "530eb67155e0a399d1a68b2f8584613a">
  <!ENTITY jtreg-size                "8.9 MB">

  <!ENTITY ojdk-bdsize               "3.6 GB (add 800 MB for tests)">
  <!ENTITY ojdk-time                 "4.8 SBU with 4 jobs (add 36 SBU for tests with 4 jobs)">
]>

<sect1 id="openjdk" xreflabel="OpenJDK-&openjdk-version;">
  <?dbhtml filename="openjdk.html" ?>


  <title>OpenJDK-&openjdk-version;</title>

  <indexterm zone="openjdk">
    <primary sortas="a-OpenJDK">OpenJDK</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao <quote>OpenJDK</quote></title>

    <para>
      &quot;<application>OpenJDK</application>&quot; é uma implementação de código
aberto da plataforma &quot;Java Standard Edition&quot; da
&quot;Oracle&quot;. &quot;<application>OpenJDK</application>&quot; é útil
para desenvolver aplicativos &quot;<application>Java</application>&quot; e
fornece um ambiente de tempo de execução completo para executar aplicativos
&quot;<application>Java</application>&quot;.
    </para>

    &lfs120_checked;

    <para>
      &quot;OpenJDK&quot; é código &quot;GPL&quot;, com uma exceção especial feita
para projetos não-livres para usar essas classes nos produtos proprietários
deles. De forma semelhante à &quot;LGPL&quot;, que permite que aplicativos
não-livres se vinculem a bibliotecas fornecidas por logiciário livre, a
<ulink url="https://openjdk.org/legal/gplv2+ce.html">Licença Pública Geral
GNU, versão 2, com a exceção Classpath</ulink> permite que aplicativos de
terceiros usem classes fornecidas por logiciário livre sem a exigência de
que o logiciário de terceiros também seja livre. Tal como acontece com a
&quot;LGPL&quot;, quaisquer modificações feitas nas partes de logiciário
livre de um aplicativo de terceiros também precisam ser disponibilizadas
livremente.
    </para>

    <note>
      <para>
        O fonte do &quot;<application>OpenJDK</application>&quot; inclui uma suíte
de teste de código aberto muito completa usando o equipamento de teste
&quot;<application>JTreg</application>&quot;. As instruções de teste abaixo
permitem testar o &quot;JDK&quot; recém-construído para compatibilidade
razoável com o &quot;JDK&quot; proprietário da &quot;Oracle&quot;. No
entanto, para a finalidade de que uma implementação independente alegue
compatibilidade, ela precisa passar por uma suíte proprietária de teste
&quot;<application>JCK/TCK</application>&quot;. Nenhuma alegação de
compatibilidade, ou mesmo compatibilidade parcial, pode ser feita sem passar
por uma suíte de teste aprovada.
      </para>

      <para>
        Oracle does provide free community access, on a case by case basis, to a
closed toolkit to ensure 100% compatibility with its proprietary JDK.
Neither the binary version provided on the <xref linkend="java"/> page nor
the JVM built with the instructions below have been tested against the
<ulink
url="https://openjdk.java.net/groups/conformance/JckAccess/jck-access.html">
TCK</ulink>. Any version that is built using the instructions given, cannot
claim to be compatible with the proprietary JDK, without the user applying
for, and completing the compatibility tests themselves.
      </para>

      <para>
        With that in mind, the binaries produced using this build method are
regularly tested against the TCK by the members listed on the site above. In
addition to the community license above, an educational, non-commercial
license for the TCK can be obtained <ulink
url="https://www.oracle.com/technetwork/java/index-137188.html">
here</ulink>.
      </para>
    </note>

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&ojdk-download;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url=" "/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &ojdk-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da Transferência: &ojdk-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &ojdk-bdsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &ojdk-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Transferências Adicionais</bridgehead>

    <para>
      <emphasis role="strong">Equipamento opcional de teste</emphasis>
    </para>

    <itemizedlist spacing='compact'>
      <listitem>
        <para>
          <ulink url="&jtreg-download;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &jtreg-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da Transferência: &jtreg-size;
        </para>
      </listitem>
    </itemizedlist>

    <!--
    <bridgehead renderas="sect4">
Required patch</bridgehead>

    <itemizedlist spacing='compact'>
      <listitem>
        <para>
          <ulink url="&patch-root;/openjdk-&openjdk-version;-make_4.3_fix-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
<bridgehead renderas="sect3">Dependências do &quot;OpenJDK&quot;</bridgehead>

    <bridgehead renderas="sect4">Dependências Exigidas</bridgehead>
    <para role="required">
      Um binário existente (<xref linkend="java"/> ou uma versão construída
anterior desse pacote. As instruções abaixo assumem que você está usando
<xref linkend="ojdk-conf"/>), <xref linkend="alsa-lib"/>, <xref
linkend="cpio"/>, <xref linkend="cups"/>, <xref linkend="unzip"/>, <xref
linkend="which"/>, <xref linkend="xorg7-lib"/> e <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas</bridgehead>
    <para role="recommended">
      <xref linkend="make-ca"/>, <xref linkend="giflib"/>, <xref
linkend="harfbuzz"/>, <xref linkend="lcms2"/>, <xref linkend="libjpeg"/>,
<xref linkend="libpng"/>, and <xref linkend="wget"/>
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <!-- not needed now, it seems
      an X Window manager such as <xref linkend="twm"/>
 (for the tests), and
-->
<xref linkend="git"/>, <xref linkend="graphviz"/>, <xref
linkend="mercurial"/>, <ulink url="https://ccache.dev/">ccache</ulink>,
<ulink url="https://pandoc.org/">pandoc</ulink>, and <ulink
url="https://zlib.net/pigz">pigz</ulink>
    </para>


  </sect2>

  <sect2 role="installation">
    <title>Instalação do <quote>OpenJDK</quote></title>

    <para>
      Se você baixou o equipamento opcional de teste, desempacote-o agora:
    </para>

<!--
    <para>

      Apply a patch to allow building with make-4.3:
    </para>

<screen><userinput>patch -p1 -i ../openjdk-&openjdk-version;-make_4.3_fix-1.patch</userinput></screen>

    <para>
      Fix an issue coming from a removed header in glibc-2.32:
    </para>

<screen><userinput>sed -i /sysctl/d \
    src/jdk.incubator.jpackage/unix/native/libapplauncher/PosixPlatform.cpp</userinput></screen>
-->
<screen><userinput>tar -xf ../jtreg-&jtreg-version;.tar.gz</userinput></screen>

    <note>
      <para>
        Antes de continuar, você deveria garantir que sua variável de ambiente
&quot;<envar>PATH</envar>&quot; contenha o local do compilador
&quot;Java&quot; usado para inicializar o
&quot;<application>OpenJDK</application>&quot;. Essa é a única exigência
para o ambiente. Instalações modernas &quot;Java&quot; não precisam de
&quot;<envar>JAVA_HOME</envar>&quot;; e &quot;<envar>CLASSPATH</envar>&quot;
não é usado aqui. Além disso, os(as) desenvolvedores(as) do
&quot;OpenJDK&quot; recomendam desconfigurar
&quot;<envar>JAVA_HOME</envar>&quot;.
      </para>

      <para>
        O sistema de construção não permite a chave &quot;<option>-j</option>&quot;
em &quot;<envar>MAKEFLAGS</envar>&quot;. Veja-se a explicação do comando
para &quot;<option>--with-jobs=</option>&quot; para mais informações
relativas a personalizar a paralelização.
      </para>
    </note>

    <para>
      Configure e construa o pacote com os seguintes comandos:
    </para>

<screen><userinput>unset JAVA_HOME                             &amp;&amp;
bash configure --enable-unlimited-crypto    \
               --disable-warnings-as-errors \
               --with-stdc++lib=dynamic     \
               --with-giflib=system         \
               --with-harfbuzz=system       \
               --with-jtreg=$PWD/jtreg      \
               --with-lcms=system           \
               --with-libjpeg=system        \
               --with-libpng=system         \
               --with-zlib=system           \
               --with-version-build="&openjdk-build;"     \
               --with-version-pre=""        \
               --with-version-opt=""        \
               --with-cacerts-file=/etc/pki/tls/java/cacerts &amp;&amp;
make images</userinput></screen>

    <para>
      Para testar os resultados, você precisará executar o aplicativo
&quot;jtreg&quot;. Você consegue configurar o número de testes simultâneos
adicionando o valor
&quot;<parameter>-conc:<replaceable>&lt;X&gt;</replaceable></parameter>&quot;
no comando abaixo (caso contrário, os testes executarão sequencialmente):
    </para>

<screen remap="test"><userinput>export JT_JAVA=$(echo $PWD/build/*/jdk) &amp;&amp;
jtreg/bin/jtreg -jdk:$JT_JAVA -automatic -ignore:quiet -v1 \
   test/jdk:tier1 test/langtools:tier1 &amp;&amp;
unset JT_JAVA</userinput></screen>

    <para>
      Para mais controle sobre a suíte de teste, revise a documentação disponível
em &quot;<filename>jtreg/doc/jtreg/usage.txt</filename>&quot;. Para revisar
os resultados, vejam-se os arquivos
&quot;<filename>JTreport/test_{jdk,langtools}/text/stats.txt</filename>&quot;
e
&quot;<filename>JTreport/test_{jdk,langtools}/text/summary.txt</filename>&quot;.
Você deveria esperar ver cerca de sessenta (60) falhas e dez (10) erros.
    </para>
    

    <!--
         14.0.1+7:
         for x86_64: passed: 5,836; failed: 42; error: 50
         17.0.2+8:
         for x86_64: passed: 6,238; failed: 48; error: 13
         for i686:   passed: 6,208; failed: 29; error: 6
         18.0.1+10:
         for x86_64: passed: 6,323; failed: 53; error: 14
         for i686:   passed: 6,290; failed: 29; error: 11
         18.0.1.1+2:
         for x86_64: passed: 6,323; failed: 53; error: 14
         for i686:   passed: 6,290; failed: 29; error: 11
         18.0.2+8:
         for x86_64: passed: 6,329; failed: 50; error: 14
         for i686:   passed: 6,289; failed: 31; error: 13
         19.0.1+10:
         for x86_64: passed: 6,423; failed: 58; error: 15
         for i686:   passed: 6,376; failed: 31; error: 12
         19.0.2+7:
         for x86_64: passed: 6,426; failed: 61; error: 14
         for i686:   passed: 6,377; failed: 34; error: 11
         20.0.1+9:
         for x86_64: passed: 6,515; failed: 65; error: 13
         for i686:   passed: 6,520; failed: 60; error: 13
         20.0.2+9:
         for x86_64: passed: 6,515; failed: 65; error: 14
         for i686:   passed: 6,446; failed: 33; error: 12
    -->
<para>
      Instale o pacote com os seguintes comandos como o(a) usuário(a)
&quot;<systemitem class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>install -vdm755 /opt/jdk-&openjdk-version;+&openjdk-build;             &amp;&amp;
cp -Rv build/*/images/jdk/* /opt/jdk-&openjdk-version;+&openjdk-build; &amp;&amp;
chown -R root:root /opt/jdk-&openjdk-version;+&openjdk-build;          &amp;&amp;
for s in 16 24 32 48; do
  install -vDm644 src/java.desktop/unix/classes/sun/awt/X11/java-icon${s}.png \
                 /usr/share/icons/hicolor/${s}x${s}/apps/java.png
done</userinput></screen>

    <note>
      <para>
        Se desejar instalar somente o &quot;Java Runtime Environment&quot;, [então]
você pode substituir &quot;<filename>build/*/images/jre</filename>&quot; no
comando &quot;<command>cp</command>&quot; acima.
      </para>
    </note>

    <para>
      Agora existem dois &quot;SDKs&quot;
&quot;<application>OpenJDK</application>&quot; instalados em &quot;<filename
class="directory">/opt</filename>&quot;. Você deveria decidir qual deles
gostaria de usar como padrão. Normalmente, você optaria pelo recém-instalado
&quot;<application>OpenJDK</application>&quot;. Nesse caso, faça o seguinte
como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>ln -v -nsf jdk-&openjdk-version;+&openjdk-build; /opt/jdk</userinput></screen>

    <para>
      Se desejado, você pode criar arquivos &quot;.desktop&quot; para adicionar
entradas no menu para &quot;<command>java</command>&quot; e
&quot;<command>jconsole</command>&quot;. Os ícones necessários já foram
instalados. Como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>mkdir -pv /usr/share/applications &amp;&amp;

cat &gt; /usr/share/applications/openjdk-java.desktop &lt;&lt; "EOF" &amp;&amp;
<literal>[Desktop Entry]
Name=OpenJDK Java &openjdk-version; Tempo de Execução
Comment=OpenJDK Java &openjdk-version; Tempo de Execução
Exec=/opt/jdk/bin/java -jar
Terminal=false
Type=Application
Icon=java
MimeType=application/x-java-archive;application/java-archive;application/x-jar;
NoDisplay=true</literal>
EOF
cat &gt; /usr/share/applications/openjdk-jconsole.desktop &lt;&lt; "EOF"
<literal>[Desktop Entry]
Name=OpenJDK Java &openjdk-version; Console
Comment=OpenJDK Java &openjdk-version; Console
Keywords=java;console;monitoramento
Exec=/opt/jdk/bin/jconsole
Terminal=false
Type=Application
Icon=java
Categories=Application;System;</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <command>bash configure...</command>: o
&quot;<filename>configure</filename>&quot; do nível superior é um envólucro
em torno daquele do &quot;autotools&quot;. Ele não é executável e precisa
ser executado por intermédio do &quot;<command>bash</command>&quot;.
    </para>

    <!-- Not needed in openjdk-15
    <para>

      <parameter>- -with-extra-cflags=-fcommon</parameter>: Allows building
      with GCC 10.
    </para>
-->
<para>
      <parameter>--enable-unlimited-crypto</parameter>: Devido às limitações no
uso de criptografia em alguns países, existe a possibilidade de limitar o
tamanho das chaves de encriptação e o uso de alguns algoritmos em um arquivo
de política. Essa chave permite enviar um arquivo de política sem
restrições. É responsabilidade do(a) usuário(a) garantir a adequada
aderência à legislação.
    </para>

    <para>
      <parameter>--disable-warnings-as-errors</parameter>: Essa chave desabilita o
uso de &quot;<envar>-Werror</envar>&quot; na construção.
    </para>

    <para>
      <parameter>--with-stdc++lib=dynamic</parameter>: Essa chave força o sistema
de construção a vincular-se a &quot;<filename>libstdc++.so</filename>&quot;
(dinâmica) em vez de &quot;<filename>libstdc++.a</filename>&quot;
(estática).
    </para>

    <para>
      <option>--with-jobs=<replaceable>&lt;X&gt;</replaceable></option>: O
&quot;<parameter>-j</parameter>&quot; passado para &quot;make&quot; não
funciona com &quot;make&quot; como invocado aqui. Por padrão, o sistema de
construção usará o número de &quot;CPUs&quot; – 1.
    </para>

    <para>
      <parameter>--with-jtreg=$PWD/jtreg</parameter>: Essa chave informa ao
&quot;configure&quot; onde encontrar o &quot;jtreg&quot;. Omita se você não
baixou a suíte opcional de teste.
    </para>

    <para>
      <parameter>--with-{giflib,harfbuzz,lcms,libjpeg,libpng,zlib}=system</parameter>:
These switches force the build system to use the system libraries instead of
the bundled versions.
    </para>

    <para>
      <parameter>--with-version-build</parameter>: Atualmente, o sistema de
construção não inclui o número da construção na sequência de caracteres da
versão. Ele tem que ser especificado aqui.
    </para>

    <para>
      <parameter>--with-version-pre</parameter>: Essa chave te permite prefixar a
sequência de caracteres da versão com uma sequência personalizada de
caracteres.
    </para>

    <para>
      <parameter>--with-version-opt</parameter>: Essa chave te permite adicionar
uma descrição opcional da construção à sequência de caracteres de versão.
    </para>

    <para>
      <parameter>--with-cacerts-file=/etc/pki/tls/java/cacerts</parameter>:
Especifica onde encontrar um arquivo
&quot;<filename>cacerts</filename>&quot;,
&quot;<filename>/etc/pki/tls/java/</filename>&quot; em um sistema BLFS. Caso
contrário, um vazio será criado. Você consegue usar o comando
&quot;<command>/usr/sbin/make-ca --force</command>&quot; para gerá-lo,
depois que tenha instalado os binários &quot;Java&quot;.
    </para>

    <para>
      <option>--with-boot-jdk</option>: Essa chave fornece o local do
&quot;<application>JDK</application>&quot; temporário. Ele normalmente não é
necessário se &quot;<command>java</command>&quot; for encontrado no
&quot;<envar>PATH</envar>&quot;.
    </para>

  <!-- Seems to have disappeared
    <para>

      <command>find ... -iname '*.diz' -delete</command>: This command
      removes redundant files.
    </para>
-->
</sect2>

  <sect2 role="configuration"
         id="openjdk-config"
         xreflabel="Configurando o OpenJDK">
    <title>Configurando o OpenJDK</title>

    <sect3>
      <title>Informação de Configuração</title>

      <para>
        Normally, the JAVA environment has been configured after installing the
binary version, and can be used with the just built package as well.  Review
<xref linkend="ojdk-conf"/> in case you want to modify something.
      </para>

      <para>
        Para testar se as páginas de manual estão instaladas corretamente, emita
&quot;<command>source /etc/profile</command>&quot; e &quot;<command>man
java</command>&quot; para exibir a respectiva página de manual.
      </para>

    </sect3>

    <sect3>
      <title>
        Configurando o arquivo de Certificados de Autoridade Certificadora do
<quote>JRE</quote> (<quote>cacerts</quote>)
      </title>

      <para>
        Se você executou as instruções na página &quot;<xref
linkend="make-ca"/>&quot;, [então] você só precisa criar um link simbólico
no local padrão para o arquivo
&quot;<filename>cacerts</filename>&quot;. Como usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
      </para>

<screen role="root"><userinput>ln -sfv /etc/pki/tls/java/cacerts /opt/jdk/lib/security/cacerts</userinput></screen>

      <para>
        Para verificar a instalação, emita:
      </para>

<screen role="root"><userinput>cd /opt/jdk
bin/keytool -list -cacerts</userinput></screen>

    <para>
      No &quot;prompt&quot; &quot;<computeroutput>Enter keystore
password:</computeroutput>&quot;, digite
&quot;<userinput>changeit</userinput>&quot; (o padrão) ou simplesmente
pressione a tecla <quote>Enter</quote>. Se o arquivo
&quot;<filename>cacerts</filename>&quot; foi instalado corretamente, [então]
você verá uma lista dos certificados com informações relacionadas a cada
um. Caso contrário, você precisa reinstalá-los.
    </para>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretório Instalado</segtitle>

      <seglistitem>
        <seg>jar, jarsigner, java, javac, javadoc, javap, jcmd, jconsole, jdb, jdeprscan,
jdeps, jfr, jhsdb, jimage, jinfo, jlink, jmap, jmod, jpackage, jps,
jrunscript, jshell, jstack, jstat, jstatd, jwebserver, keytool, rmiregistry
e serialver</seg>
        <seg>/opt/jdk-&openjdk-version;/lib/*</seg>
        <seg>/opt/jdk-&openjdk-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <!-- Not seen in 17.0.1
      <varlistentry id="jaotc">

        <term><command>jaotc</command></term>
        <listitem>
          <para>
            is an <quote>ahead-of-time</quote> java class compiler
          </para>
          <indexterm zone="openjdk jaotc">
            <primary sortas="b-jaotc">jaotc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
<?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>



      <varlistentry id="jar">
        <term><command>jar</command></term>
        <listitem>
          <para>
            combina múltiplos arquivos em um arquivamento &quot;jar&quot;
          </para>
          <indexterm zone="openjdk jar">
            <primary sortas="b-jar">jar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jarsigner">
        <term><command>jarsigner</command></term>
        <listitem>
          <para>
            assina arquivos &quot;jar&quot; e verifica as assinaturas e a integridade de
um arquivo &quot;jar&quot; assinado
          </para>
          <indexterm zone="openjdk jarsigner">
            <primary sortas="b-jarsigner">jarsigner</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="java-prog">
        <term><command>java</command></term>
        <listitem>
          <para>
            inicia um aplicativo &quot;Java&quot; iniciando um ambiente em tempo de
execução &quot;Java&quot;, carregando uma classe especificada e invocando o
método principal dela
          </para>
          <indexterm zone="openjdk java-prog">
            <primary sortas="b-java-prog">java</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="javac">
        <term><command>javac</command></term>
        <listitem>
          <para>
            lê definições de classe e interface, escritas na linguagem de programação
&quot;Java&quot;, e as compila em arquivos de classe de código de bytes
          </para>
          <indexterm zone="openjdk javac">
            <primary sortas="b-javac">javac</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="javadoc">
        <term><command>javadoc</command></term>
        <listitem>
          <para>
            analisa as declarações e comentários da documentação em um conjunto de
arquivos fonte &quot;Java&quot; e produz um conjunto correspondente de
páginas &quot;HTML&quot; descrevendo as classes, interfaces, construtores,
métodos e campos
          </para>
          <indexterm zone="openjdk javadoc">
            <primary sortas="b-javadoc">javadoc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="javap">
        <term><command>javap</command></term>
        <listitem>
          <para>
            desmonta um arquivo de classe &quot;Java&quot;
          </para>
          <indexterm zone="openjdk javap">
            <primary sortas="b-javap">javap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jcmd">
        <term><command>jcmd</command></term>
        <listitem>
          <para>
            é um utilitário para enviar solicitações de comando de diagnóstico para uma
&quot;Java Virtual Machine&quot; em execução
          </para>
          <indexterm zone="openjdk jcmd">
            <primary sortas="b-jcmd">jcmd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jconsole">
        <term><command>jconsole</command></term>
        <listitem>
          <para>
            é uma ferramenta gráfica de console para monitorar e gerenciar aplicativos
&quot;Java&quot; e máquinas virtuais locais e remotas
          </para>
          <indexterm zone="openjdk jconsole">
            <primary sortas="b-jconsole">jconsole</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jdb">
        <term><command>jdb</command></term>
        <listitem>
          <para>
            é um depurador simples de linha de comando para classes &quot;Java&quot;
          </para>
          <indexterm zone="openjdk jdb">
            <primary sortas="b-jdb">jdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jdeprscan">
        <term><command>jdeprscan</command></term>
        <listitem>
          <para>
            escaneia arquivos de classe ou &quot;jar&quot; em busca de usos de elementos
obsoletos de &quot;API&quot;
          </para>
          <indexterm zone="openjdk jdeprscan">
            <primary sortas="b-jdeprscan">jdeprscan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jdeps">
        <term><command>jdeps</command></term>
        <listitem>
          <para>
            mostra as dependências de nível de pacote ou de nível de classe de arquivos
de classe &quot;Java&quot;
          </para>
          <indexterm zone="openjdk jdeps">
            <primary sortas="b-jdeps">jdeps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jfr">
        <term><command>jfr</command></term>
        <listitem>
          <para>
            é uma ferramenta para trabalhar com arquivos <quote>Flight Recorder</quote>
          </para>
          <indexterm zone="openjdk jfr">
            <primary sortas="b-jfr">jfr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jhsdb">
        <term><command>jhsdb</command></term>
        <listitem>
          <para>
            é uma ferramenta para analisar o conteúdo de um despejo central originário
de uma &quot;Java Virtual Machine&quot; (&quot;JVM&quot;) quebrada
          </para>
          <indexterm zone="openjdk jhsdb">
            <primary sortas="b-jhsdb">jhsdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jimage">
        <term><command>jimage</command></term>
        <listitem>
          <para>
            é usado para listar, extrair, verificar ou obter informações relativas a
módulos no formato &quot;<emphasis>jimage</emphasis>&quot;
          </para>
          <indexterm zone="openjdk jimage">
            <primary sortas="b-jimage">jimage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jinfo">
        <term><command>jinfo</command></term>
        <listitem>
          <para>
            imprime informações de configuração &quot;Java&quot; para um determinado
processo &quot;Java&quot;, arquivo central ou servidor remoto de depuração
          </para>
          <indexterm zone="openjdk jinfo">
            <primary sortas="b-jinfo">jinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <!--
      <varlistentry id="jjs">

        <term><command>jjs</command></term>
        <listitem>
          <para>
            is a command-line tool used to invoke the Nashorn engine. It
            can be used to interpret one or several script files, or to run
            an interactive shell.
          </para>
          <indexterm zone="openjdk jjs">
            <primary sortas="b-jjs">jjs</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
<varlistentry id="jlink">
        <term><command>jlink</command></term>
        <listitem>
          <para>
            é usado para montar e otimizar um conjunto de módulos e as dependências
deles em uma imagem personalizada em tempo de execução
          </para>
          <indexterm zone="openjdk jlink">
            <primary sortas="b-jlink">jlink</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jmap">
        <term><command>jmap</command></term>
        <listitem>
          <para>
            imprime mapas de memória de objetos compartilhados ou detalhes de memória
&quot;heap&quot; de um determinado processo, arquivo central ou um servidor
remoto de depuração
          </para>
          <indexterm zone="openjdk jmap">
            <primary sortas="b-jmap">jmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jmod">
        <term><command>jmod</command></term>
        <listitem>
          <para>
            cria arquivos &quot;JMOD&quot; e lista o conteúdo dos arquivos existentes
&quot;JMOD&quot;
          </para>
          <indexterm zone="openjdk jmod">
            <primary sortas="b-jmod">jmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jpackage">
        <term><command>jpackage</command></term>
        <listitem>
          <para>
            gera pacotes e imagens de aplicativos &quot;Java&quot;
          </para>
          <indexterm zone="openjdk jpackage">
            <primary sortas="b-jpackage">jpackage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jps">
        <term><command>jps</command></term>
        <listitem>
          <para>
            lista as &quot;JVMs&quot; instrumentadas no sistema alvo
          </para>
          <indexterm zone="openjdk jps">
            <primary sortas="b-jps">jps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jrunscript">
        <term><command>jrunscript</command></term>
        <listitem>
          <para>
            é um &quot;shell&quot; de &quot;script&quot; de linha de comando
          </para>
          <indexterm zone="openjdk jrunscript">
            <primary sortas="b-jrunscript">jrunscript</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jshell">
        <term><command>jshell</command></term>
        <listitem>
          <para>
            é uma ferramenta interativa para aprender a linguagem de programação
&quot;Java&quot; e &quot;prototipar&quot; código &quot;Java&quot;
          </para>
          <indexterm zone="openjdk jshell">
            <primary sortas="b-jshell">jshell</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jstack">
        <term><command>jstack</command></term>
        <listitem>
          <para>
            imprime rastreamentos de pilha &quot;Java&quot; de camadas &quot;Java&quot;
para um determinado processo &quot;Java&quot;, arquivo central ou um
servidor remoto de depuração
          </para>
          <indexterm zone="openjdk jstack">
            <primary sortas="b-jstack">jstack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jstat">
        <term><command>jstat</command></term>
        <listitem>
          <para>
            exibe estatísticas de desempenho para uma &quot;JVM&quot; instrumentada
          </para>
          <indexterm zone="openjdk jstat">
            <primary sortas="b-jstat">jstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jstatd">
        <term><command>jstatd</command></term>
        <listitem>
          <para>
            é um aplicativo de servidor &quot;RMI&quot; que monitora a criação e o
encerramento de &quot;JVMs&quot; instrumentadas
          </para>
          <indexterm zone="openjdk jstatd">
            <primary sortas="b-jstatd">jstatd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="jwebserver">
        <term><command>jwebserver</command></term>
        <listitem>
          <para>
            fornece um servidor mínimo &quot;HTTP&quot;, projetado para ser usado para
prototipagem, testagem e depuração
          </para>
          <indexterm zone="openjdk jwebserver">
            <primary sortas="b-jwebserver">jwebserver</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="keytool">
        <term><command>keytool</command></term>
        <listitem>
          <para>
            é um utilitário de gerenciamento de chaves e certificados
          </para>
          <indexterm zone="openjdk keytool">
            <primary sortas="b-keytool">keytool</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      


      <!--
      <varlistentry id="pack200">

        <term><command>pack200</command></term>
        <listitem>
          <para>
            is a Java application that transforms a jar file into a
            compressed pack200 file using the Java gzip compressor.
          </para>
          <indexterm zone="openjdk pack200">
            <primary sortas="b-pack200">pack200</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rmic">
        <term><command>rmic</command></term>
        <listitem>
          <para>
            generates stub and skeleton class files for remote objects
            from the names of compiled Java classes that contain remote
            object implementations.
          </para>
          <indexterm zone="openjdk rmic">
            <primary sortas="b-rmic">rmic</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<!-- Not seen in 17.0.1
      <varlistentry id="rmid">

        <term><command>rmid</command></term>
        <listitem>
          <para>
            starts the activation system daemon
          </para>
          <indexterm zone="openjdk rmid">
            <primary sortas="b-rmid">rmid</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
<varlistentry id="rmiregistry">
        <term><command>rmiregistry</command></term>
        <listitem>
          <para>
            cria e inicia um registro de objeto remoto na porta especificada no
dispositivo atual
          </para>
          <indexterm zone="openjdk rmiregistry">
            <primary sortas="b-rmiregistry">rmiregistry</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="serialver">
        <term><command>serialver</command></term>
        <listitem>
          <para>
            retorna o &quot;serialVersionUID&quot; para uma ou mais classes em um
formato adequado para cópia em uma classe em evolução
          </para>
          <indexterm zone="openjdk serialver">
            <primary sortas="b-serialver">serialver</primary>
          </indexterm>
        </listitem>
      </varlistentry>
<!--
      <varlistentry id="unpack200">

        <term><command>unpack200</command></term>
        <listitem>
          <para>
            is a native implementation that transforms a packed file
            produced by <application>pack200</application> into a jar
            file.
          </para>
          <indexterm zone="openjdk unpack200">
            <primary sortas="b-unpack200">unpack200</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
      
    </variablelist>

  </sect2>

</sect1>
