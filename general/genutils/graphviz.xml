<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY graphviz-download-http "https://gitlab.com/graphviz/graphviz/-/archive/&graphviz-version;/graphviz-&graphviz-version;.tar.bz2">
  <!ENTITY graphviz-download-ftp  "">
  <!ENTITY graphviz-md5sum        "495f7da354be58309d91a2e0d377ae3b">
  <!ENTITY graphviz-size          "26 MB">
  <!ENTITY graphviz-buildsize     "193 MB">
  <!ENTITY graphviz-time          "0.6 SBU (using parallelism=4)">
]>

<sect1 id="graphviz" xreflabel="Graphviz-&graphviz-version;">
  <?dbhtml filename="graphviz.html"?>


  <title>Graphviz-&graphviz-version;</title>

  <indexterm zone="graphviz">
    <primary sortas="a-Graphviz">Graphviz</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução a Graphviz</title>

    <para>
      O pacote <application>Graphviz</application> contém um software de
visualização gráfica. A visualização gráfica é uma forma de representar
informações estruturais como diagramas de gráficos abstratos e redes de
comunicação. O <application>Graphviz</application> tem vários aplicativos
principais de esquemas gráficos. Também tem interfaces gráficas web e
interativas, ferramentas auxiliares, bibliotecas e ligações de linguagem.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&graphviz-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&graphviz-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &graphviz-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &graphviz-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &graphviz-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &graphviz-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do Graphviz</bridgehead>

    <note>
      <para>
        O uso básico do <application>Graphviz</application> não precisa de nenhuma
biblioteca além das encontradas no livro LFS. O mecanismo de renderização
<quote>central</quote> dele permite gerar vários formatos gráficos, tais
como "Postscript", "SVG", "VML", ".fig" e "Tk". Esses formatos podem ser
convertidos para quase qualquer outro formato usando, por exemplo,
ferramentas originárias do <xref role="nodep" linkend="imagemagick"/>. As
dependências abaixo adicionam a capacidade de gerar imagens gráficas em
formato "bitmap", exibir a imagem gráfica na tela, editar um gráfico
visualizando a imagem resultante diretamente ou visualizar gráficos
grandes. Uma vez que <application>Graphviz</application> é uma dependência
de vários outros pacotes neste livro, é sugerido primeiro construí-lo sem
quaisquer dependências, então reconstruí-lo quando você tiver construído
pacotes suficientes para atender às suas necessidades.
      </para>
    </note>

    <bridgehead renderas="sect4">Opcional, para várias saídas de "bitmap"</bridgehead>
    <para role="optional">
      <xref linkend="pango"/>, com <xref linkend="cairo"/>, <xref
linkend="xorg7-lib"/>, <xref linkend="fontconfig"/> e <xref
linkend="libpng"/>, para gerar imagens nos formatos "bitmap SVG",
"postscript", "PNG" e "PDF" ou exibir a imagem na tela. A saída gerada "PNG"
é exigida para construir <xref role="nodep" linkend="gegl"/>
    </para>

    <para role="optional">
      Adicionar <xref linkend="gtk2"/> com <xref linkend="libjpeg"/> adiciona
suporte para formatos "JPEG", "BMP", "TIF" e "ICO" e permite exibir a imagem
em uma janela "GTK+"
    </para>

    <para role="optional">
      <ulink url="https://www.libgd.org/">GD Library</ulink> pode ser usado em vez
de <application>Pango</application>. Ela adiciona a capacidade de gerar
imagens nos formatos "GIF", "VRML" e "GD", mas o
<application>Pango</application> fornece saídas melhores para os outros
formatos e é necessário para exibir imagens
    </para>

    <para role="optional">
      <!-- deprecated <ulink url="http://www.libming.org/">
libming</ulink> (Adobe
      Flash)-->
Outros formatos podem ser adicionados com <xref linkend="libwebp"/> (o
suporte a "WebP" é considerado experimental), <ulink
url="https://openil.sourceforge.net/projects.php">DevIL</ulink>, <ulink
url="https://sourceforge.net/projects/lasi/">libLASi</ulink> e <ulink
url="https://www.freedesktop.org/wiki/Software/glitz">glitz</ulink>

    </para>

    <bridgehead renderas="sect4">Opcional, para carregar imagens gráficas que podem ser exibidas dentro dos
nós de um gráfico</bridgehead>

    <para role="optional">
      <filename class="libraryfile">libgs.so</filename> originária de <xref
linkend="gs"/>, <xref linkend="librsvg"/> e <xref linkend="poppler"/>
    </para>

    <bridgehead renderas="sect4">Opcional, para construir mais ferramentas</bridgehead>

    <para role="optional">
      <xref linkend="freeglut"/> (with <xref linkend="libglade"/>, <ulink
url="https://sourceforge.net/projects/gtkglext/">GtkGLExt</ulink>, and
<ulink url="https://gts.sourceforge.net/">libGTS</ulink>, for building the
<command>smyrna</command> large graph viewer, which is considered
experimental), and <xref linkend="qt5"/> (for building the
<command>gvedit</command> graph editor.)
    </para>

    <bridgehead renderas="sect4">Opcional (para construir ligações de idioma)</bridgehead>
    <para role="optional">
      <xref linkend="swig"/> (<application>SWIG</application> precisa estar
instalado ou nenhuma ligação será construída), <xref linkend="gcc"/> (para o
compilador "go"), <xref linkend="guile"/>, <xref linkend="openjdk"/>, <xref
linkend="lua"/>, <xref linkend="php"/>, <xref linkend="ruby"/>, <xref
linkend="tk"/>, <ulink url="https://iolanguage.org/">Io</ulink>, <ulink
url="https://www.mono-project.com/Main_Page">Mono</ulink>, <ulink
url="https://ocaml.org/">OCaml</ulink> e <ulink
url="https://www.r-project.org/">R</ulink>
    </para>

    <bridgehead renderas="sect4">Opcional (ferramentas de construção)</bridgehead>
    <para role="optional">
      <ulink url="https://github.com/Snaipe/Criterion">Criterion</ulink>
(estrutura essencial de suporte para os testes) e <ulink
url="https://linux.softpedia.com/get/Programming/Debuggers/Electric-Fence-3305.shtml/">Electric
Fence</ulink>
    </para>

    <bridgehead renderas="sect4">Opcional (para construir a documentação "PDF")</bridgehead>
    <para role="optional">
      <xref linkend="gs"/> (para o comando <command>ps2pdf</command>)
    </para>

    <para condition="html" role="usernotes">Observações de Usuário(a): <ulink url="&blfs-wiki;/graphviz"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação do Graphviz</title>

    <para>
      Instale <application>Graphviz</application> executando os seguintes
comandos:
    </para>

<screen><userinput>sed -i '/LIBPOSTFIX="64"/s/64//' configure.ac &amp;&amp;

./autogen.sh             &amp;&amp;
./configure --prefix=/usr \
            --docdir=/usr/share/doc/graphviz-&graphviz-version;</userinput></screen>

    <note>
      <para>
        Um aviso é gerado por <command>autogen.sh</command> porque a árvore de
construção não é um repositório "git". Como resultado, a data da construção
é configurada para zero (0). Para obter uma data significativa na sequência
de caracteres da versão, você pode executar:
      </para>

<screen><userinput>sed -i "s/0/$(date +%Y%m%d)/" builddate.h</userinput></screen>
    </note>

    <para>
      Fixe ou não a data, prossiga para compilar o pacote:
    </para>

<screen><userinput>make</userinput></screen>

    <para>
      Esse pacote não vem com uma suíte de teste que forneça resultados
significativos.
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <command>sed ... configure.ac</command>: Esse comando é necessário para
evitar instalar arquivos em "/usr/lib64".
    </para>
    <para>
      <option>--with-javaincludedir="$JAVA_HOME/include
-I$JAVA_HOME/include/linux"</option>: Se você tiver construído o <xref
linkend="openjdk"/> em "/opt" e desejar construir as ligações "JAVA",
[então] é necessário especificar o local dos arquivos de cabeçalho "JAVA" a
configurar. A chave do "configure" é projetado para somente um diretório,
mas dois diretórios precisam ser incluídos. Isso é possível, no entanto,
usando-se a chave "-I" dentro da variável.
    </para>

    <para>
      <option>--with-webp</option>: Mesmo se <xref linkend="libwebp"/> estiver
instalado, ele não é incluído na construção sem essa opção.
    </para>

    <para>
      <option>--with-smyrna</option>: Mesmo se as dependências necessárias
estiverem instaladas, o visualizador gráfico interativo
<command>smyrna</command> não é construído sem essa opção.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configurando Graphviz</title>

    <sect3 id="graphviz-config">
      <title>Arquivos de Configuração</title>

      <para>
        <filename>/usr/lib/graphviz/config</filename>
      </para>

      <indexterm zone="graphviz graphviz-config">
        <primary sortas="e-usr-share-graphviz-config">/usr/share/graphviz/config</primary>
      </indexterm>

    </sect3>

    <sect3>
      <title>Informação de Configuração</title>

      <para>
        Não há requisitos específicos de configuração para
<application>Graphviz</application>. Você possivelmente considere instalar
os "plug-ins" e ferramentas adicionais disponíveis a partir da página de
download em <ulink url="https://graphviz.org/download/source/"/> para
recursos adicionais. Se "plug-ins" adicionais estiverem instalados, [então]
você pode executar <command>dot -c</command> (como o(a) usuário(a)
<systemitem class="username">root</systemitem>) para atualizar o arquivo
<filename>config</filename> em <filename
class="directory">/usr/lib/graphviz</filename>.
      </para>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          <!--diffimg,-->
acyclic, bcomps, ccomps, circo, cluster, dijkstra, dot, dot2gxl,
dot_builtins, edgepaint, fdp, gc, gml2gv, graphml2gv, gv2gml, gv2gxl,
gvcolor, gvedit, gvgen, gvmap, gvmap.sh, gvpack, gvpr, gxl2dot, gxl2gv,
mm2gv, neato, nop, osage, patchwork, prune, sccmap, sfdp, tred, twopi,
unflatten e vimdot
        </seg>
        <seg>
          libcdt.so, libcgraph.so, libgvc.so, libgvpr.so, liblab_gamut.so,
libpathplan.so, libxdot.so e vários "plug-ins" em /usr/lib/graphviz. Existem
também várias em subdiretórios de
/usr/lib/{lua,perl5,php,python&python3-majorver;,tcl8.6}. Infelizmente,
algumas bibliotecas são duplicadas.
        </seg>
        <seg>
          /usr/include/graphviz, /usr/lib/graphviz, /usr/lib/tcl8.6/graphviz,
/usr/share/doc/graphviz-&graphviz-version; e /usr/share/graphviz
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="acyclic">
        <term><command>acyclic</command></term>
        <listitem>
          <para>
            é um filtro que recebe um gráfico direcionado como entrada e emite uma cópia
do gráfico com arestas suficientes invertidas para tornar o gráfico acíclico
          </para>
          <indexterm zone="graphviz acyclic">
            <primary sortas="b-acyclic">acyclic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bcomps">
        <term><command>bcomps</command></term>
        <listitem>
          <para>
            decompõe gráficos nos componentes bi-conectados deles, imprimindo os
componentes na saída padrão
          </para>
          <indexterm zone="graphviz bcomps">
            <primary sortas="b-bcomps">bcomps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ccomps">
        <term><command>ccomps</command></term>
        <listitem>
          <para>
            decompõe gráficos nos componentes conectados deles, imprimindo os
componentes na saída padrão
          </para>
          <indexterm zone="graphviz ccomps">
            <primary sortas="b-ccomps">ccomps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="circo">
        <term><command>circo</command></term>
        <listitem>
          <para>
            desenha gráficos usando um esquema circular
          </para>
          <indexterm zone="graphviz circo">
            <primary sortas="b-circo">circo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cluster">
        <term><command>cluster</command></term>
        <listitem>
          <para>
            pega um gráfico no formato "DOT" como entrada, encontra aglomerados de nós e
então aumenta o gráfico com essa informação
          </para>
          <indexterm zone="graphviz cluster">
            <primary sortas="b-cluster">cluster</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="diffimg">
        <term><command>diffimg</command></term>
        <listitem>
          <para>
            (precisa de <ulink url="https://www.libgd.org/">GD Library</ulink>) gera uma
imagem onde cada pixel é a diferença entre o pixel correspondente em cada
uma das duas imagens de origem
          </para>
          <indexterm zone="graphviz diffimg">
            <primary sortas="b-diffimg">diffimg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dijkstra">
        <term><command>dijkstra</command></term>
        <listitem>
          <para>
            lê um fluxo de gráficos e para cada um calcula a distância de cada nó a
partir do nó de origem
          </para>
          <indexterm zone="graphviz dijkstra">
            <primary sortas="b-dijkstra">dijkstra</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dot">
        <term><command>dot</command></term>
        <listitem>
          <para>
            desenha gráficos direcionados. Funciona bem em "DAGs" e outros gráficos que
possam ser desenhados como hierarquias. Ele lê arquivos atribuídos gráficos
e escreve desenhos. Por padrão, o ponto de formato da saída gerada é o
arquivo da entrada com coordenadas de esquema anexadas
          </para>
          <indexterm zone="graphviz dot">
            <primary sortas="b-dot">dot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dot2gxl">
        <term><command>dot2gxl</command></term>
        <listitem>
          <para>
            converte entre gráficos representados em "GXL" e na linguagem "DOT". A menos
que um tipo de conversão seja especificado usando um sinalizador,
<command>gxl2dot</command> deduzirá o tipo de conversão a partir do sufixo
do arquivo de entrada; um sufixo <filename class="extension">.dot</filename>
causa uma conversão de "DOT" para "GXL"; e um sufixo <filename
class="extension">.gxl</filename> causa uma conversão de "GXL" para "DOT"
          </para>
          <indexterm zone="graphviz dot2gxl">
            <primary sortas="b-dot2gxl">dot2gxl</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="dotty">

        <term><command>dotty</command></term>
        <listitem>
          <para>
            is a graph editor for the X Window System. It may be run as a
            standalone editor, or as a front end for applications that use
            graphs. It can control multiple windows viewing different graphs
          </para>
          <indexterm zone="graphviz dotty">
            <primary sortas="b-dotty">dotty</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="edgepaint">
        <term><command>edgepaint</command></term>
        <listitem>
          <para>
            realiza a coloração de arestas para eliminar a ambiguidade dos cruzamentos
de arestas
          </para>
          <indexterm zone="graphviz edgepaint">
            <primary sortas="b-edgepaint">edgepaint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fdp">
        <term><command>fdp</command></term>
        <listitem>
          <para>
            desenha gráficos não direcionados usando um modelo
<quote>spring</quote>. Baseia-se em uma abordagem dirigida pela força no
espírito de "Fruchterman" e "Reingold"
          </para>
          <indexterm zone="graphviz fdp">
            <primary sortas="b-fdp">fdp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gc-graphviz">
        <term><command>gc</command></term>
        <listitem>
          <para>
            é um gráfico análogo ao <command>wc</command>, pois imprime na saída padrão
o número de nós, arestas, componentes conectados ou aglomerados contidos nos
arquivos de entrada. Ele também imprime uma contagem total para todos os
gráficos, se mais de um gráfico for fornecido
          </para>
          <indexterm zone="graphviz gc-graphviz">
            <primary sortas="b-gc">gc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gml2gv">
        <term><command>gml2gv</command></term>
        <listitem>
          <para>
            converte um gráfico especificado no formato "GML" em um gráfico no formato
"GV" (anteriormente "DOT")
          </para>
          <indexterm zone="graphviz gml2gv">
            <primary sortas="b-gml2gv">gml2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="graphml2gv">
        <term><command>graphml2gv</command></term>
        <listitem>
          <para>
            converte um gráfico especificado no formato "GRAPHML" em um gráfico no
formato "GV" (anteriormente "DOT")
          </para>
          <indexterm zone="graphviz graphml2gv">
            <primary sortas="b-graphml2gv">graphml2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gv2gml">
        <term><command>gv2gml</command></term>
        <listitem>
          <para>
            converte um gráfico especificado no formato "GV" para um gráfico no formato
"GML"
          </para>
          <indexterm zone="graphviz gv2gml">
            <primary sortas="b-gv2gml">gv2gml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gv2gxl">
        <term><command>gv2gxl</command></term>
        <listitem>
          <para>
            converte um gráfico especificado no formato "GV" para um gráfico no formato
"GXL"
          </para>
          <indexterm zone="graphviz gv2gxl">
            <primary sortas="b-gv2gxl">gv2gxl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvcolor">
        <term><command>gvcolor</command></term>
        <listitem>
          <para>
            é um filtro que configura as cores dos nós a partir dos valores iniciais de
semente. As cores fluem ao longo das bordas a partir da cauda para a cabeça
e são calculadas à média (como vetores "HSB") nos nós
          </para>
          <indexterm zone="graphviz gvcolor">
            <primary sortas="b-gvcolor">gvcolor</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvedit">
        <term><command>gvedit</command></term>
        <listitem>
          <para>
            fornece um editor e visualizador simples de gráficos. Permite que muitos
gráficos sejam visualizados ao mesmo tempo. O texto de cada gráfico é
exibido na própria janela de texto dele
          </para>
          <indexterm zone="graphviz gvedit">
            <primary sortas="b-gvedit">gvedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvgen">
        <term><command>gvgen</command></term>
        <listitem>
          <para>
            gera uma variedade de gráficos abstratos simples e estruturados regularmente
          </para>
          <indexterm zone="graphviz gvgen">
            <primary sortas="b-gvgen">gvgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvmap">
        <term><command>gvmap</command></term>
        <listitem>
          <para>
            toma como entrada um gráfico no formato "DOT", encontra aglomerados de nós e
produz uma renderização do gráfico como um mapa de estilo geográfico, com
aglomerados realçados, no formato "xdot"
          </para>
          <indexterm zone="graphviz gvmap">
            <primary sortas="b-gvmap">gvmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvmap.sh">
        <term><command>gvmap.sh</command></term>
        <listitem>
          <para>
            é uma linha tubular para executar o "gvmap"
          </para>
          <indexterm zone="graphviz gvmap.sh">
            <primary sortas="b-gvmap.sh">gvmap.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvpack">
        <term><command>gvpack</command></term>
        <listitem>
          <para>
            lê um fluxo de gráficos, combina os gráficos em um esquema e produz um
gráfico servindo como a união dos gráficos de entrada
          </para>
          <indexterm zone="graphviz gvpack">
            <primary sortas="b-gvpack">gvpack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvpr">
        <term><command>gvpr</command></term>
        <listitem>
          <para>
            é um editor de fluxo gráfico inspirado no <command>awk</command>. Ele copia
gráficos de entrada para a saída dele, possivelmente transformando a
estrutura e atributos deles, criando novos gráficos ou imprimindo
informações arbitrárias
          </para>
          <indexterm zone="graphviz gvpr">
            <primary sortas="b-gvpr">gvpr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gxl2dot">
        <term><command>gxl2dot</command></term>
        <listitem>
          <para>
            converte entre gráficos representados em "GXL" e na linguagem "DOT". A menos
que um tipo de conversão seja especificado usando um sinalizador,
<command>gxl2dot</command> deduzirá o tipo de conversão a partir do sufixo
do arquivo de entrada; um sufixo <filename class="extension">.dot</filename>
causa uma conversão de "DOT" para "GXL"; e um sufixo <filename
class="extension">.gxl</filename> causa uma conversão de "GXL" para "DOT"
          </para>
          <indexterm zone="graphviz gxl2dot">
            <primary sortas="b-gxl2dot">gxl2dot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gxl2gv">
        <term><command>gxl2gv</command></term>
        <listitem>
          <para>
            converte entre gráficos representados em "GXL" e na linguagem "GV"
          </para>
          <indexterm zone="graphviz gxl2gv">
            <primary sortas="b-gxl2gv">gxl2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="lefty">

        <term><command>lefty</command></term>
        <listitem>
          <para>
            is a two-view graphics editor for technical pictures
          </para>
          <indexterm zone="graphviz lefty">
            <primary sortas="b-lefty">lefty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lneato">
        <term><command>lneato</command></term>
        <listitem>
          <para>
            is a graph editor for the X Window System. It may be run as a
            standalone editor, or as a front end for applications that use
            graphs. It can control multiple windows viewing different graphs
          </para>
          <indexterm zone="graphviz lneato">
            <primary sortas="b-lneato">lneato</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="mm2gv">
        <term><command>mm2gv</command></term>
        <listitem>
          <para>
            converte uma matriz esparsa do formato "Matrix Market" em um gráfico no
formato "GV" (anteriormente "DOT")
          </para>
          <indexterm zone="graphviz mm2gv">
            <primary sortas="b-mm2gv">mm2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="neato">
        <term><command>neato</command></term>
        <listitem>
          <para>
            desenha gráficos não direcionados usando modelos <quote>spring</quote>. Os
arquivos de entrada precisam ser formatados na linguagem gráfica atribuída
<command>dot</command>. Por padrão, a saída gerada de
<command>neato</command> é o gráfico de entrada com coordenadas de esquema
anexadas
          </para>
          <indexterm zone="graphviz neato">
            <primary sortas="b-neato">neato</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nop">
        <term><command>nop</command></term>
        <listitem>
          <para>
            lê um fluxo de gráficos e imprime cada um em formato bem estampado
(canônico) na saída padrão. Se nenhum arquivo for fornecido, [então] ele lê
a partir da entrada padrão
          </para>
          <indexterm zone="graphviz nop">
            <primary sortas="b-nop">nop</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="osage">
        <term><command>osage</command></term>
        <listitem>
          <para>
            desenha gráficos agrupados. Toma qualquer gráfico no formato "DOT" como
entrada
          </para>
          <indexterm zone="graphviz osage">
            <primary sortas="b-osage">osage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="patchwork">
        <term><command>patchwork</command></term>
        <listitem>
          <para>
            desenha gráficos agrupados usando um esquema quadrado de mapa de
árvore. Toma qualquer gráfico no formato "DOT" como entrada
          </para>
          <indexterm zone="graphviz patchwork">
            <primary sortas="b-patchwork">patchwork</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="prune">
        <term><command>prune</command></term>
        <listitem>
          <para>
            lê gráficos direcionados no mesmo formato usado por <command>dot</command> e
remove sub-gráficos enraizados em nós especificados na linha de comando por
meio de opções
          </para>
          <indexterm zone="graphviz prune">
            <primary sortas="b-prune">prune</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sccmap">
        <term><command>sccmap</command></term>
        <listitem>
          <para>
            decompõe dígrafos em componentes fortemente conectados e um mapa auxiliar do
relacionamento entre os componentes. Nesse mapa, cada componente é recolhido
em um nó. Os gráficos resultantes são impressos na saída padrão
          </para>
          <indexterm zone="graphviz sccmap">
            <primary sortas="b-sccmap">sccmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sfdp">
        <term><command>sfdp</command></term>
        <listitem>
          <para>
            desenha gráficos não direcionados usando o modelo <quote>spring</quote>, mas
usa uma abordagem multi escala para produzir esquemas de gráficos grandes em
um tempo razoavelmente curto
          </para>
          <indexterm zone="graphviz sfdp">
            <primary sortas="b-sfdp">sfdp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tred">
        <term><command>tred</command></term>
        <listitem>
          <para>
            calcula a redução transitiva de gráficos direcionados e imprime os gráficos
resultantes na saída padrão. Isso remove as arestas implícitas pela
transitividade. Nós e sub-gráficos não são afetados de outra forma
          </para>
          <indexterm zone="graphviz tred">
            <primary sortas="b-tred">tred</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="twopi">
        <term><command>twopi</command></term>
        <listitem>
          <para>
            desenha gráficos usando um esquema radial. Basicamente, um nó é escolhido
como centro e colocado na origem. Os nós restantes são colocados em uma
sequência de círculos concêntricos centrados na origem, cada um a uma
distância radial fixa a partir do círculo anterior
          </para>
          <indexterm zone="graphviz twopi">
            <primary sortas="b-twopi">twopi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unflatten">
        <term><command>unflatten</command></term>
        <listitem>
          <para>
            é um pré-processador para <command>dot</command> que é usado para melhorar a
proporção dos gráficos com muitas folhas ou nós desconectados. O esquema
usual para tal gráfico geralmente é muito largo ou alto
          </para>
          <indexterm zone="graphviz unflatten">
            <primary sortas="b-unflatten">unflatten</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vimdot">
        <term><command>vimdot</command></term>
        <listitem>
          <para>
            é um script simples que inicia o editor <command>gvim</command> ou o
<command>vim</command> junto com uma janela "GUI" mostrando a saída gerada
do <command>dot</command> do arquivo editado
          </para>
          <indexterm zone="graphviz vimdot">
            <primary sortas="b-vimdot">vimdot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcdt">
        <term><filename class="libraryfile">libcdt.so</filename></term>
        <listitem>
          <para>
            gerencia dicionários em tempo de execução usando tipos padrão de dados de
contêiner: conjunto/multiconjunto não ordenado, conjunto/multiconjunto
ordenado, lista, pilha e fila
          </para>
          <indexterm zone="graphviz libcdt">
            <primary sortas="c-libcdt">libcdt.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcgraph">
        <term><filename class="libraryfile">libcgraph.so</filename></term>
        <listitem>
          <para>
            suporta programação de gráficos, mantendo os gráficos na memória e lendo e
gravando arquivos de gráficos. Os gráficos são compostos de nós, arestas e
sub-gráficos aninhados
          </para>
          <indexterm zone="graphviz libcgraph">
            <primary sortas="c-libcgraph">libcgraph.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgvc">
        <term><filename class="libraryfile">libgvc.so</filename></term>
        <listitem>
          <para>
            fornece um contexto para aplicativos que desejam manipular e renderizar
gráficos. Ele fornece interfaces de análise de linha de comando, código de
renderização comum e um mecanismo de "plug-in" para renderizadores
          </para>
          <indexterm zone="graphviz libgvc">
            <primary sortas="c-libgvc">libgvc.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpathplan">
        <term><filename class="libraryfile">libpathplan.so</filename></term>
        <listitem>
          <para>
            contém funções para encontrar o caminho mais curto entre dois pontos em um
polígono simples
          </para>
          <indexterm zone="graphviz libpathplan">
            <primary sortas="c-libpathplan">libpathplan.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libxdot">
        <term><filename class="libraryfile">libxdot.so</filename></term>
        <listitem>
          <para>
            fornece suporte para analisar e desanalisar operações gráficas especificadas
pela linguagem "xdot"
          </para>
          <indexterm zone="graphviz libxdot">
            <primary sortas="c-libxdot">libxdot.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
