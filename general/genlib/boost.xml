<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY boost-download-http "https://boostorg.jfrog.io/artifactory/main/release/&boost-version;/source/boost_&boost-dl-version;.tar.bz2">
  <!ENTITY boost-download-ftp  "">
  <!ENTITY boost-md5sum        "3276c0637d1be8687740c550237ef999">
  <!ENTITY boost-size          "113 MB">
  <!ENTITY boost-buildsize     "1,1 GB (195 MB instalado)">
  <!ENTITY boost-time          "1,4 UPC (Usando paralelismo=4; adicionar 1,2 UPC para os testes)">
]>



<!-- Editors: Check test failures with python-3.11 -->
<sect1 id="boost" xreflabel="Boost-&boost-version;">
  <?dbhtml filename="boost.html"?>


  <title>Boost-&boost-version;</title>

  <indexterm zone="boost">
    <primary sortas="a-Boost">Boost</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução a Boost</title>

    <para>
      O <application>Boost</application> fornece um conjunto de bibliotecas
gratuitas de fonte C++ portáteis revisadas por pares. Inclui bibliotecas
para álgebra linear, geração de números pseudo-aleatórios, multi
encadeamento, processamento de imagens, expressões regulares e testes de
unidade.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&boost-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&boost-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &boost-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &boost-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &boost-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &boost-time;
        </para>
      </listitem>
    </itemizedlist>
    

    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Recommended patch, required to build <xref linkend="libreoffice"/>:
          <ulink url="&patch-root;/boost-&boost-version;-gcc_10-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
    -->
<bridgehead renderas="sect3">Dependências de Boost</bridgehead>

    <bridgehead renderas="sect4">Recomendada</bridgehead>
    <para role="recommended">
      <xref linkend="which"/>
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="icu"/> e <ulink url="https://www.open-mpi.org/">Open
MPI</ulink>
    </para>

    <para condition="html" role="usernotes">Observações de Usuário(a): <ulink url="&blfs-wiki;/boost"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação de Boost</title>

    <para>
      Uma mudança nesta versão do <application>boost</application> quebra os
poucos pacotes que usam o módulo <application>phoenix</application> quando
compilados com o <application>GCC</application> atual. No BLFS, isso afeta
<xref linkend="libreoffice"/>. Corrija isso com o seguinte comando:
    </para>

<screen><userinput>sed -i '/#include.*phoenix.*tuple.hpp.*/d' \
  boost/phoenix/stl.hpp</userinput></screen>

    <para>
      Esse pacote pode ser construído com vários trabalhos executando em
paralelo. Nas instruções abaixo, <parameter>&lt;N&gt;</parameter> representa
o número de trabalhos. Instale o <application>Boost</application> executando
os seguintes comandos:
    </para>


<screen><userinput>./bootstrap.sh --prefix=/usr --with-python=python3 &amp;&amp;
./b2 stage -j<replaceable>&lt;N&gt;</replaceable> threading=multi link=shared</userinput></screen>

    <para>
      Para executar o teste de regressão do Boost.Build, emita <command>pushd
tools/build/test; python3 test_all.py; popd</command>. Com python-3.10.x,
todos os 168 testes deveriam passar. Com <xref linkend='python3'/>, 20
testes falham por razões indeterminadas.
    </para>

    <para>
      Para executar cada um dos testes de regressão da biblioteca, emita
<command>pushd status; ../b2; popd</command>. Uns poucos testes
possivelmente falhem. Eles tomam um tempo muito longo (mais que 119 UPC em
-j4) e usam uma quantidade muito grande de espaço em disco (46 GB). Você
deveria usar a chave <parameter>-jN</parameter> para acelerá-los.
    </para>

    <note>
      <para>
        O Boost instala muitos diretórios versionados em /usr/lib/cmake. Se uma nova
versão do <application>Boost</application> for instalada sobre uma versão
anterior, [então] os diretórios do cmake mais antigos precisam ser
explicitamente removidos. Para fazer isso, execute como o(a) usuário(a)
<systemitem class="username">root</systemitem>:
      </para>

<screen role="root"><userinput>rm -rf /usr/lib/cmake/[Bb]oost*</userinput></screen>

      <para>
        antes de instalar a nova versão.
      </para>
    </note>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>



<screen role="root"><!-- dev note: ./b2 - -prefix=<DESTDIR>
/usr install threading=multi link=shared -->
<userinput>./b2 install threading=multi link=shared</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <!-- FIXME: remove before 11.3 is we still use 1.81.0 and LO-7.4,
      this alternative is only for people working through the development book.-->
<parameter>sed -i '/#include ...</parameter>: Isso remove a inclusão de
<filename>boost/phoenix/stl/tuple.hpp</filename> dessa biblioteca somente de
cabeçalho, permitindo que aplicativos que a usam se vincularem usando C++
recente. Uma alternativa é a de editar
<filename>/usr/include/boost/phoenix/stl.hpp</filename> se essa versão do
"boost" já tiver sido instalada sem esse <command>sed</command>.
    </para>

    <para>
      <parameter>threading=multi</parameter>: Esse parâmetro garante que
<application>Boost</application> seja construído com suporte a multi
encadeamento.
    </para>

    <para>
      <parameter>link=shared</parameter>: Esse parâmetro garante que somente
bibliotecas compartilhadas sejam criadas, exceto "libboost_exception" e
"libboost_test_exec_monitor" que são criadas como estáticas. A maioria das
pessoas não precisará das bibliotecas estáticas, e a maioria dos aplicativos
que usam o <application>Boost</application> usa somente os cabeçalhos. Omita
esse parâmetro se precisar das bibliotecas estáticas.
    </para>

    <para>
      <parameter>--with-python=python3</parameter>: Essa chave garante que o
"Python3" seja usado se o "Python2" estiver instalado.
    </para>

    <para>
       <option>-jN</option>: Essa chave pode ser adicionada às linhas de comando
<command>b2</command>, para executar até N processos em paralelo.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretório Instalado</segtitle>

      <seglistitem>
        <seg>
          Nenhum
        </seg>
        <seg>
          libboost_atomic.so, libboost_chrono.so, libboost_container.so,
libboost_context.so, libboost_contract.so, libboost_coroutine.so,
libboost_date_time.so, libboost_exception.a, libboost_fiber.so,
libboost_filesystem.so, libboost_graph.so, libboost_iostreams.so,
libboost_json.so, libboost_locale.so, libboost_log_setup.so,
libboost_log.so, libboost_math_c99.so, libboost_math_c99f.so,
libboost_math_c99l.so, libboost_math_tr1.so, libboost_math_tr1f.so,
libboost_math_tr1l.so, libboost_nowide.so, libboost_numpy39.so,
libboost_prg_exec_monitor.so, libboost_program_options.so,
libboost_python3&python3-minor;.so, libboost_random.so, libboost_regex.so,
libboost_serialization.so, libboost_stacktrace_addr2line.so,
libboost_stacktrace_basic.so, libboost_stacktrace_noop.so,
libboost_system.so, libboost_test_exec_monitor.a, libboost_thread.so,
libboost_timer.so, libboost_type_erasure.so,
libboost_unit_test_framework.so, libboost_wave.so e
libboost_wserialization.so
        </seg>
        <seg>
          /usr/include/boost
        </seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

</sect1>
