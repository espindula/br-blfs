<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libpaper-download-http "https://ftp.debian.org/debian/pool/main/libp/libpaper/libpaper_&libpaper-version;.tar.gz">
  <!ENTITY libpaper-download-ftp  "">
  <!ENTITY libpaper-md5sum        "38bc55688c0fc5544edaa5a951a45fbd">
  <!ENTITY libpaper-size          "48 KB">
  <!ENTITY libpaper-buildsize     "3,5 MB">
  <!ENTITY libpaper-time          "menos que 0,1 UPC">
]>

<sect1 id="libpaper" xreflabel="libpaper-&libpaper-version;">
  <?dbhtml filename="libpaper.html"?>


  <title>libpaper-&libpaper-version;</title>

  <indexterm zone="libpaper">
    <primary sortas="a-libpaper">libpaper</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução a libpaper</title>

    <para>
      Esse pacote destina-se a fornecer uma maneira simples para os aplicativos
executarem ações baseadas em um sistema ou tamanho de papel especificado
pelo(a) usuário(a).
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&libpaper-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&libpaper-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &libpaper-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &libpaper-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &libpaper-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &libpaper-time;
        </para>
      </listitem>
    </itemizedlist>

    <para condition="html" role="usernotes">
      Observações de Usuário(a): <ulink url="&blfs-wiki;/libpaper"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação do libpaper</title>

    <para>
      Instale <application>libpaper</application> executando os seguintes
comandos:
    </para>

<screen><userinput>autoreconf -fi                &amp;&amp;
./configure --prefix=/usr     \
            --sysconfdir=/etc \
            --disable-static &amp;&amp;
make</userinput></screen>

    <para>
      Esse pacote não vem com uma suíte de teste.
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
mkdir -vp /etc/libpaper.d</userinput></screen>

     <para>
       O diretório /etc/libpaper.d contém scripts a serem executados depois que o
tamanho do papel tenha sido mudado. Esse pacote não coloca scripts aqui, mas
outros pacotes possivelmente. Se o pacote "fcron" não tiver sido instalado,
[então] crie o script <command>run-parts</command> conforme mostrado na
seção <xref linkend='run-parts'/>.
     </para>


  <!--
cat &gt; /usr/bin/run-parts &lt;&lt; "EOF"
<literal>
#!/bin/sh
# run-parts:  Runs all the scripts found in a directory.
# from Slackware, by Patrick J. Volkerding with ideas borrowed
# from the Red Hat and Debian versions of this utility.

# keep going when something fails
set +e

if [ $# -lt 1 ]; then
  echo "Usage: run-parts &lt;directory&gt;"
  exit 1
fi

if [ ! -d $1 ]; then
  echo "Not a directory: $1"
  echo "Usage: run-parts &lt;directory&gt;"
  exit 1
fi

# There are several types of files that we would like to
# ignore automatically, as they are likely to be backups
# of other scripts:
IGNORE_SUFFIXES="~ ^ , .bak .new .rpmsave .rpmorig .rpmnew .swp"

# Main loop:
for SCRIPT in $1/* ; do
  # If this is not a regular file, skip it:
  if [ ! -f $SCRIPT ]; then
    continue
  fi
  # Determine if this file should be skipped by suffix:
  SKIP=false
  for SUFFIX in $IGNORE_SUFFIXES ; do
    if [ ! "$(basename $SCRIPT $SUFFIX)" = "$(basename $SCRIPT)" ]; then
      SKIP=true
      break
    fi
  done
  if [ "$SKIP" = "true" ]; then
    continue
  fi
  # If we've made it this far, then run the script if it's executable:
  if [ -x $SCRIPT ]; then
    $SCRIPT || echo "$SCRIPT failed."
  fi
done

exit 0</literal>
EOF

chmod -v 755 /usr/bin/run-parts</userinput></screen>
-->
</sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/static-libraries.xml"/>

    <para>
      <command>mkdir -pv /etc/libpaper.d</command>:
<application>libpaper</application> espera que os pacotes instalem arquivos
nesse diretório.
    </para>

  <!--
    <para>

      <command>cat &gt; /usr/bin/run-parts &lt;&lt; "EOF"</command> :
      <filename>paperconfig</filename> is a script which will invoke
      <command>run-parts</command> if <filename
      class="directory">/etc/libpaper.d</filename> exists. No other BLFS
      package installs this, so we create it here.
    </para>
-->
</sect2>

  <sect2 role="configuration">
    <title>Configurando libpaper</title>

    <sect3>
      <title>Informação de Configuração</title>

      <para>
        Crie <filename>/etc/papersize</filename> para configurar o tamanho de papel
padrão do sistema. Emita o seguinte comando como o(a) usuário(a) <systemitem
class="username">root</systemitem> para configurar isso como &apos;A4&apos;
(libpaper prefere a forma minúscula). Você possivelmente queira usar um
tamanho diferente, tal como "carta".
      </para>

<screen role="root"><userinput>cat &gt; /etc/papersize &lt;&lt; "EOF"
<literal>a4</literal>
EOF</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Biblioteca Instalada</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          paperconf, paperconfig e run-parts
        </seg>
        <seg>
          libpaper.so
        </seg>
        <seg>
          /etc/libpaper.d
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="paperconf">
        <term><command>paperconf</command></term>
        <listitem>
          <para>
            imprime informação de configuração de papel
          </para>
          <indexterm zone="libpaper paperconf">
            <primary sortas="b-paperconf">paperconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="paperconfig">
        <term><command>paperconfig</command></term>
        <listitem>
          <para>
            configura o tamanho padrão de papel do sistema
          </para>
          <indexterm zone="libpaper paperconfig">
            <primary sortas="b-paperconfig">paperconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <!--
      <varlistentry id="run-parts">

        <term><command>run-parts</command></term>
        <listitem>
          <para>
            runs all the scripts found in a directory.
          </para>
          <indexterm zone="libpaper run-parts">
            <primary sortas="b-run-parts">run-parts</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
<varlistentry id="libpaper-lib">
        <term><filename class="libraryfile">libpaper.so</filename></term>
        <listitem>
          <para>
            contém funções para interrogar a biblioteca de papéis
          </para>
          <indexterm zone="libpaper libpaper-lib">
            <primary sortas="c-libpaper">libpaper.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
