<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY fop-download-http "https://archive.apache.org/dist/xmlgraphics/fop/source/fop-&fop-version;-src.tar.gz">
  <!ENTITY fop-download-ftp  "">
  <!ENTITY fop-md5sum        "610bfd7797755d744b2c4f61422478cf">
  <!ENTITY fop-size          "22 MB">
  <!ENTITY fop-buildsize     "517 MB (incluindo arquivos baixados para o diretório do(a) usuário(a))">
  <!ENTITY fop-time          "0,6 UPC">

  <!ENTITY pdfbox-version    "2.0.27">
  <!ENTITY pdfbox-download   "https://archive.apache.org/dist/pdfbox/&pdfbox-version;/pdfbox-&pdfbox-version;.jar">
  <!ENTITY pdfbox-md5sum     "ddd46402b1692eed9e5c73b4a94c45d8">
  <!ENTITY pdfbox-size       "2,7 MB">

  <!ENTITY fontbox-download  "https://archive.apache.org/dist/pdfbox/&pdfbox-version;/fontbox-&pdfbox-version;.jar">
  <!ENTITY fontbox-md5sum    "587744efe2a82d3584c2f3969fa4dca0">
  <!ENTITY fontbox-size      "1,5 MB">

  <!ENTITY maven-major        "3">
  <!ENTITY maven-version      "3.8.6">
  <!ENTITY maven-download     "https://archive.apache.org/dist/maven/maven-&maven-major;/&maven-version;/binaries/apache-maven-&maven-version;-bin.tar.gz">
  <!ENTITY maven-md5sum       "0e07de4a7b5c84ebed737a2002f52019">
  <!ENTITY maven-size         "8,3 MB (adicionalmente, cerca de 90 MB são baixados para o diretório de
construção do(a) usuário(a))">

  <!ENTITY offo-download     "&sourceforge-dl;/offo/2.2/offo-hyphenation.zip">
  <!ENTITY offo-md5sum       "bf9c09bf05108ef9661b8f08d91c2336">
  <!ENTITY offo-size         "862 KB">
]>

<sect1 id="fop" xreflabel="fop-&fop-version;">
  <?dbhtml filename="fop.html"?>


  <title>fop-&fop-version;</title>

  <indexterm zone="fop">
    <primary sortas="a-fop">fop</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao fop</title>

    <para>
      O pacote <application>FOP</application> (Formatting Objects Processor)
contém um formatador de impressão controlado por objetos de formatação XSL
(XSL-FO). É uma aplicação <application>Java</application> que lê uma árvore
de objetos de formatação e renderiza as páginas resultantes em uma saída
especificada. Os formatos de saída atualmente suportados incluem PDF, PCL,
PostScript, SVG, XML (representação de árvore de área), impressão, AWT, MIF
e texto ASCII. O alvo de saída principal é PDF.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&fop-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&fop-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &fop-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &fop-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &fop-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &fop-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Transferências Adicionais</bridgehead>
    <itemizedlist spacing="compact">
      <title>Transferências Adicionais Exigidas:</title>
      <listitem>
        <para>
          PDFBox: <simplelist> <member><ulink url="&pdfbox-download;"/></member>
<member>&pdfbox-md5sum;</member> <member>&pdfbox-size;</member>
</simplelist>
        </para>
      </listitem>
      <listitem>
        <para>
          Fontes PDFBox: <simplelist> <member><ulink
url="&fontbox-download;"/></member> <member>&fontbox-md5sum;</member>
<member>&fontbox-size;</member> </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>
          Sistema de construção Maven: <simplelist> <member><ulink
url="&maven-download;"/></member> <member>&maven-md5sum;</member>
<member>&maven-size;</member> </simplelist>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Using the archive above allows finding all versions
    <note>
<para>
      The pdfbox and fontbox packages may not be available at the above
      location.  If not, they can be found at the BLFS files mirror sites.
    </para></note>
-->
<itemizedlist spacing="compact">
      <title>Pacotes recomendados</title>
      <listitem>
        <para>
          Padrões de hifenização Objects for Formatting Objects (OFFO): <simplelist>
<member><ulink url="&offo-download;"/></member>
<member>&offo-md5sum;</member> <member>&offo-size;</member> </simplelist>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do fop</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="apache-ant"/>
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">

      <!-- Included into ant      <xref linkend="junit"/>
 (to run tests),-->
<!--      <xref linkend="maven"/>
 (an alternate build system), not functional
      with fop-2.3          -->
<!-- [pierre 2017-04-29] Note to devs: there are a lot of bundled dependencies.
     Some were listed here, but not all. I am not sure it is possible to
     use system ones. So, I have removed them, and kept only those which
     are not bundled. -->
<xref linkend="x-window-system"/> (para executar testes), <ulink
url="https://jai-tools.blogspot.com/">Ferramentas de E/S de Imagens
JAI</ulink> e <ulink url="https://jeuclid.sourceforge.net/">JEuclid</ulink>

    </para>

    <para condition="html" role="usernotes">Observações de Usuário(a): <ulink url="&blfs-wiki;/fop"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação do fop</title>

    <para>
      Certifique-se de que <envar>$JAVA_HOME</envar> esteja configurada
corretamente antes de iniciar a construção. Para construir as classes de
extensão <application>JIMI SDK</application> e (ou)
<application>XMLUnit</application>, certifique-se de que os arquivos
<filename class='extension'>.jar</filename> correspondentes possam ser
encontrados por intermédio da variável de ambiente <envar>CLASSPATH</envar>.
    </para>

    <sect3>
      <title>Instalando Padrões de Hifenização OFFO</title>

      <para>
        Copie os padrões de hifenização XML para a árvore do fonte do fop executando
os seguintes comandos:
      </para>

<screen><userinput>unzip ../offo-hyphenation.zip &amp;&amp;
cp offo-hyphenation/hyph/* fop/hyph &amp;&amp;
rm -rf offo-hyphenation</userinput></screen>

    </sect3>

    <sect3>
      <title>Instalando um binário temporário Maven</title>

      <para>
        A partir do fop-2.5, o sistema de construção Maven é exigido. Nós usamos o
binário fornecido pelo Apache, que instalamos em um local temporário:
      </para>

<screen><userinput>tar -xf ../apache-maven-&maven-version;-bin.tar.gz -C /tmp</userinput></screen>

    </sect3>

    <sect3>
      <title>Instalando Componentes fop</title>

      <para>
        O comando <command>javadoc</command> fornecido com o OpenJDK 10 e posterior
tornou-se muito mais rigoroso que as versões anteriores em relação à
conformidade dos comentários Javadoc no código-fonte para HTML. A
documentação do FOP não atende a esses padrões, de forma que as verificações
de conformidade tem de ser desabilitadas. Isso pode ser feito com o seguinte
comando:
      </para>

<!-- Seems to have been fixed in 2.6
      <para>

        The stack size set in <filename>build.xml</filename> for building the
        hyphenation patterns is not large enough. Change it by running:
      </para>

<screen><userinput>sed -e '/hyph\.stack/s/512k/1M/' \
    -i fop/build.xml</userinput></screen>
fixed with maven-3.8.4
      <para>
        Fix building with JDK-16 due to an outdated Apache Maven plugin:
      </para>

<screen><userinput remap="pre">sed -i 's/&lt;war.plugin.version&gt;2.2/&lt;war.plugin.version&gt;3.3.1/' pom.xml</userinput></screen>
-->
<screen><userinput>sed -i '\@&lt;/javad@i\
&lt;arg value="-Xdoclint:none"/&gt;\
&lt;arg value="--allow-script-in-comments"/&gt;\
&lt;arg value="--ignore-source-errors"/&gt;' \
    fop/build.xml</userinput></screen>

      <para>
        O arquivo <filename>build.xml</filename> chama uma versão antiga dos
componentes <application>PDFBox</application> que não mais estão
disponíveis. Copie os componentes atualizados do PDFBox para a árvore do
fonte:
      </para>

<screen><userinput>cp ../{pdf,font}box-&pdfbox-version;.jar fop/lib</userinput></screen>

      <para>
        Compile o <application>fop</application> executando os seguintes comandos:
      </para>

<screen><userinput>cd fop &amp;&amp;

LC_ALL=en_US.UTF-8                     \
PATH=$PATH:/tmp/apache-maven-&maven-version;/bin \
ant all javadocs &amp;&amp;

mv build/javadocs .</userinput></screen>

      <para>
        Esse pacote vem com uma suíte de teste, mas a infraestrutura java instalada
neste livro não permite executá-la.
      </para>

      <para>
        Agora, instale o <application>Fop</application> como o(a) usuário(a)
<systemitem class="username">root</systemitem>:
      </para>

<screen role="root"><userinput>install -v -d -m755 -o root -g root          /opt/fop-&fop-version; &amp;&amp;
cp -vR build conf examples fop* javadocs lib /opt/fop-&fop-version; &amp;&amp;
chmod a+x /opt/fop-&fop-version;/fop                                &amp;&amp;
ln -v -sfn fop-&fop-version; /opt/fop</userinput></screen>

      <para>
        A última coisa a fazer é limpar o que fizemos:
      </para>

<screen><userinput>rm -rf /tmp/apache-maven-&maven-version;</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <command>sed -i ... build.xml</command>: Isso adiciona três chaves ao
comando <command>javadoc</command>, evitando que alguns erros ocorram
durante a construção da documentação.
    </para>

    <para>
      <command>export LC_ALL=en_US.UTF-8</command>: o compilador falha se usar uma
localidade ASCII.
    </para>

    <para>
      <command>ant <option>target</option></command>: Isso lê o arquivo
<filename>build.xml</filename> e constrói o alvo: <option>compile </option>
compila os fontes java; <option>jar-main</option> gera arquivos jar;
<option>jar-hyphenation</option> gera os padrões de hifenização para o FOP;
<option>junit</option> executa os testes <application>junit</application>; e
<option>javadocs</option> constrói a documentação. O alvo
<option>all</option> executa tudo do acima.
    </para>

    <para>
      <command>ln -v -sf fop-&fop-version; /opt/fop</command>: Isso é opcional e
cria um link simbólico de conveniência, de forma que
<envar>$FOP_HOME</envar> não tenha que ser mudada cada vez que exista uma
mudança na versão do pacote.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configurando o fop</title>

    <sect3 id="fop-config">
      <title>Arquivos de Configuração</title>

      <para>
        <filename>~/.foprc</filename>
      </para>

      <indexterm zone="fop fop-config">
        <primary sortas="e-AA.foprc">~/.foprc</primary>
      </indexterm>

    </sect3>

    <sect3>
      <title>Informação de Configuração</title>

      <para>
        Usar <application>fop</application> para processar alguns FOs grandes
(incluindo o FO derivado dos fontes XML do BLFS) pode levar a erros de
memória. A menos que você adicione um parâmetro ao comando
<command>java</command> usado no conjunto de comandos sequenciais
<command>fop</command>, você possivelmente receba mensagens semelhantes a
esta mostrada abaixo:
      </para>

      <para>
        <computeroutput> Exception in thread "main" java.lang.OutOfMemoryError: Java
heap space </computeroutput>
      </para>

      <para>
        Para evitar erros como esse, você precisa passar um parâmetro extra para o
comando <command>java</command> usado no conjunto de comandos sequenciais
<command>fop</command>. Isso pode ser feito criando-se um
<filename>~/.foprc</filename> (que é carregado pelo conjunto de comandos
sequenciais <command>fop</command>) e adicionando-se o parâmetro à variável
de ambiente <envar>FOP_OPTS</envar>.
      </para>

      <para>
        O conjunto de comandos sequenciais <command>fop</command> procura por uma
variável de ambiente <envar>FOP_HOME</envar> para localizar as bibliotecas
de classes do <application>fop</application>. Você também pode criar essa
variável usando o arquivo <filename>~/.foprc</filename>. Crie um arquivo
<filename>~/.foprc</filename> usando os seguintes comandos:
      </para>

<screen><userinput>cat &gt; ~/.foprc &lt;&lt; "EOF"
<literal>FOP_OPTS="-Xmx<replaceable>&lt;RAM_Instalada&gt;</replaceable>m"
FOP_HOME="/opt/fop"</literal>
EOF</userinput></screen>

      <para>
        <!--  the URL is broken
        For more information about
        memory issues running <application>
fop</application>, see
        <ulink url="http://xml.apache.org/fop/running.html#memory"/>.
        -->
Substitua <replaceable>&lt;RAM_Instalada&gt;</replaceable> por um número que
represente a quantidade de RAM instalada em teu computador (em
megabytes). Um exemplo seria <userinput>FOP_OPTS="-Xmx768m"</userinput>.
        
      </para>

      <para>
        Para incluir o conjunto de comandos sequenciais <command>fop</command> em
teu caminho, atualize o perfil abrangente a todo o sistema com o seguinte
comando como o(a) usuário(a) <systemitem class="username">root</systemitem>:
      </para>

<screen role="root"><userinput>cat &gt; /etc/profile.d/fop.sh &lt;&lt; "EOF"
<literal># inicia /etc/profile.d/fop.sh

pathappend /opt/fop

# Termina /etc/profile.d/fop.sh</literal>
EOF</userinput></screen>

      <note>
        <para>
          Executar <command>fop</command> pode ser um tanto detalhado. O nível de
registro padrão pode ser mudado de INFO para FINEST, FINER, FINE, CONFIG,
INFO, WARNING, SEVERE, ALL ou OFF. Para fazer isso, edite o
<filename>$JAVA_HOME/jre/lib/logging.properties</filename> e mude as
entradas para <option>.level</option> e
<option>java.util.logging.ConsoleHandler.level</option> para o valor
desejado.
        </para>
      </note>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretório Instalado</segtitle>

      <seglistitem>
        <seg>fop</seg>
        <seg>fop.jar e numerosas classes da biblioteca de suporte localizadas em
<filename class="directory">/opt/fop/{build,lib}</filename>; Os componentes
JAI incluem libmlib_jai.so, jai_codec.jar, jai_core.jar e
mlibwrapper_jai.jar</seg>
        <seg>/opt/fop-&fop-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="fop-prog">
        <term><command>fop</command></term>
        <listitem>
          <para>
            é um conjunto de comandos sequenciais envolucradores para o comando
<command>java</command>, os quais configuram o ambiente do
<application>fop</application> e passam os parâmetros exigidos
          </para>
          <indexterm zone="fop fop-prog">
            <primary sortas="b-fop">fop</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fop.jar">
        <term><filename class="libraryfile">fop.jar</filename></term>
        <listitem>
          <para>
            contém todas as classes <application>Java</application> do
<application>fop</application>
          </para>
          <indexterm zone="fop fop.jar">
            <primary sortas="c-fop.jar">fop.jar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
