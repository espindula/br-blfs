<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY cups-filters-download-http
  "https://www.openprinting.org/download/cups-filters/cups-filters-&cups-filters-version;.tar.xz">
  <!ENTITY cups-filters-download-ftp  "">
  <!ENTITY cups-filters-md5sum        "24bed15110499fd652d65d6baab85ca6">
  <!ENTITY cups-filters-size          "1,4 MB">
  <!ENTITY cups-filters-buildsize     "56 MB (com testes), 16 MB instalado">
  <!ENTITY cups-filters-time          "0,2 UPC (Usando paralelismo=4; com testes)">
]>

<sect1 id="cups-filters" xreflabel="cups-filters-&cups-filters-version;">
  <?dbhtml filename="cups-filters.html"?>


  <title>cups-filters-&cups-filters-version;</title>

  <indexterm zone="cups-filters">
    <primary sortas="a-cups-filters">cups-filters</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao CUPS Filters</title>

    <para>
      O pacote <application>CUPS Filters</application> contém estruturas de
retaguarda, filtros e outros softwares que já fizeram parte da distribuição
principal do <application>CUPS</application>, mas não mais são mantidos pela
Apple Inc.
    </para>

    &lfs120_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&cups-filters-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&cups-filters-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &cups-filters-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &cups-filters-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &cups-filters-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &cups-filters-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch: <ulink
url="&patch-root;/cups-filters-&cups-filters-version;-security_fix-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do CUPS Filters</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="cups"/>, <xref linkend="glib2"/>, <xref linkend="gs"/>, <xref
linkend="lcms2"/>, <xref linkend="poppler"/> e <xref linkend="qpdf"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas</bridgehead>
    <para role="recommended">
      <xref linkend="dejavu-fonts"/> (a construção falha se elas não estiverem
instaladas, embora sejam exigidas somente para os testes), <xref
linkend="libexif"/>, <xref linkend="libjpeg"/>, <xref linkend="libpng"/>,
<xref linkend="libtiff"/> e <xref linkend="mupdf"/> (mutool)
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="avahi"/> (exigido para construir a estrutura de retaguarda
DNSSD do processo de segundo plano <command>cups-browsed</command>, o qual é
necessário para operar algumas impressoras de rede de intercomunicação),
<xref linkend="openldap"/>, <xref linkend="php"/> (o uso disso pode estar
quebrado), <ulink url="https://liblouis.github.io/downloads/">Liblouis
(Braille)</ulink> e <ulink
url="https://liblouis.github.io/downloads/">Liblouisutdml (Braille)</ulink>
    </para>

    <bridgehead renderas="sect4">Controladores opcionais de impressora (tempo de execução)</bridgehead>
    <para role="optional">
      <xref role="runtime" linkend="gutenprint"/> (para impressoras suportadas) ou
outros controladores de impressora, tais como <ulink role="runtime"
url="https://sourceforge.net/projects/hplip/files/hplip/">hplip</ulink>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação do CUPS Filters</title>



    <!--
    <para revision="systemd">

      First, fix the systemd unit file to work with
      <application>CUPS</application> 2.0 and later:
    </para>

<screen revision="systemd"><userinput>sed -i "s:cups.service:org.cups.cupsd.service:g" utils/cups-browsed.service</userinput></screen>
-->
<para>
      First, fix a security vulnerability that can allow for remote code execution
with the 'beh' printer backend:
    </para>

<screen><userinput remap="pre">patch -Np1 -i ../cups-filters-&cups-filters-version;-security_fix-1.patch</userinput></screen>

    <para>
      Instale o <application>CUPS Filters</application> executando os seguintes
comandos:
    </para>

<!-- The test suite still bombs out for me. I'll leave the instructions for it
     here though. I didn't have the Dejavu font installed, but used one of the
     ones installed by X.
     Version 1.16.0: test worked for me with "make check >testlog 2>&1",
     that is, the other way around. I have DejaVu fonts. Pierre L
     With 1.17.2 (and DejaVu) the test output is clean, no need for a log. Ken

     Tests are clean for version 1.21.0 (and version 1.21.5):  - Bruce
     # TOTAL: 6
     # PASS:  6
     real    0m2.504s -->
<screen><userinput>CXXFLAGS="$CXXFLAGS -std=c++17"  \
./configure --prefix=/usr        \
            --sysconfdir=/etc    \
            --localstatedir=/var \
            --without-rcdir      \
            --disable-static     \
            --disable-avahi      \
            --docdir=/usr/share/doc/cups-filters-&cups-filters-version; &amp;&amp;
make</userinput></screen>



    <para>
      <!--<command>
make check &gt;testlog 2&gt;&amp;1</command>.-->
Para testar os resultados, emita: <command>make check</command>. Fontes
DejaVu são necessárias para os testes.
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

    <para revision="systemd">
      Instale a unidade do systemd executando o seguinte comando como o(a)
usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root" revision="systemd"><userinput>install -v -m644 utils/cups-browsed.service /lib/systemd/system/cups-browsed.service</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>




    <!-- please comment this if no patches are currently needed -->
<!--<para>

      <parameter>patch -Np1 -i ../cups-filters-&cups-filters-version;-poppler71-1.patch</parameter>:
      Conditionally apply changes for recent versions of poppler.
    </para>
    Poppler-0.72.0, cups-filters-1.21.5 - no longer needed.-->
<para>
      <envar>CXXFLAGS="$CXXFLAGS -std=c++17"</envar>: This environment variable is
necessary to fix a problem introduced by qpdf-11.3.0.
    </para>

    <para>
      <parameter>--disable-avahi</parameter>: Essa chave é necessária se o
opcional <xref linkend="avahi"/> não estiver instalado. Remova-o se o avahi
estiver instalado e você precisar de recursos de descoberta de impressoras
de rede de intercomunicação.
    </para>

    <para>
      <parameter>--without-rcdir</parameter>: Essa chave desabilita a instalação
do conjunto incluído de comandos sequenciais de inicialização, o qual não é
compatível com o BLFS.
    </para>



    <!-- Those are hard dependencies now
    <para>

      <parameter>- -with-gs-path=/usr/bin/gs</parameter>: This switch
      defines the path to the <application>GhostScript</application>
      binary in case <xref linkend="gs"/> is not installed at build time.
    </para>

    <para>
      <parameter>- -with-pdftops-path=/usr/bin/gs</parameter>: This switch
      defines the path to the <application>GhostScript</application>
      binary in case <xref linkend="gs"/> is not installed at build time.
    </para>
-->
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/static-libraries.xml"/>
    

    <!--
    <para>

      <option>- -enable-ijs</option>: This switch will allow the pdftoijs
      filter, for sending PDFs to an HP InkJet Server, to be built.
    </para>
    -->
<para>
      <option>--with-test-font-path=<replaceable>VALOR</replaceable></option>: Se
você desejar executar os testes, mas não tem o
<filename>/usr/share/fonts/dejavu/DejaVuSans.ttf</filename> padrão, use essa
chave para especificar onde a <filename>DejaVuSans.ttf</filename> (ou talvez
alguma outra fonte TTF de texto - não testada) está localizada.
    </para>


  </sect2>



  <!-- TODO: Write a bootscript for cups-browsed -->
<sect2 role="configuration" revision="systemd">
    <title>Configurando o CUPS Filters</title>

    <sect3 id="cups-filters-init">
      <title>Unidades do systemd</title>

      <para>
        Para iniciar o processo de segundo plano <command>cups-browsed</command> na
inicialização, habilite a unidade do systemd instalada anteriormente
executando o seguinte comando como o(a) usuário(a) <systemitem
class="username">root</systemitem>:
      </para>

      <indexterm zone="cups-filters cups-filters-init">
        <primary sortas="f-cups-browsed">cups-browsed</primary>
      </indexterm>

<screen role="root"><userinput>systemctl enable cups-browsed</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          <!-- and ttfread -->
cups-browsed, driverless, driverless-fax e foomatic-rip
          
        </seg>
        <seg>
          libcupsfilters.so e libfontembed.so
        </seg>
        <seg>
          /usr/include/{cupsfilters,fontembed}, /usr/lib/cups/{backend,driver,filter},
/usr/share/cups/{braille,charsets},
/usr/share/doc/cups-filters-&cups-filters-version; e
/usr/share/ppd/cupsfilters
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="cups-browsed">
        <term><command>cups-browsed</command></term>
        <listitem>
          <para>
            é um processo de segundo plano para navegar nas difusões Bonjour e CUPS de
impressoras CUPS remotas e compartilhadas
          </para>
          <indexterm zone="cups-filters cups-browsed">
            <primary sortas="b-cups-browsed">cups-browsed</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="driverless">
        <term><command>driverless</command></term>
        <listitem>
          <para>
            é um utilitário gerador de PPD para impressão sem controlador
          </para>
          <indexterm zone="cups-filters driverless">
            <primary sortas="b-driverless">driverless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="driverless-fax">
        <term><command>driverless-fax</command></term>
        <listitem>
          <para>
            é um envolucrador para o <command>driverless</command> para dispositivos do
tipo FAX
          </para>
          <indexterm zone="cups-filters driverless-fax">
            <primary sortas="b-driverless-fax">driverless-fax</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="foomatic-rip">
        <term><command>foomatic-rip</command></term>
        <listitem>
          <para>
            é um filtro de impressão/involucrador RIP universal que pode ser usado como
filtro do CUPS ou autônomo para impressão direta e sem aplicativo de
gerenciamento de fila de documentos
          </para>
          <indexterm zone="cups-filters foomatic-rip">
            <primary sortas="b-foomatic-rip">foomatic-rip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcupsfilters">
        <term><filename class="libraryfile">libcupsfilters.so</filename></term>
        <listitem>
          <para>
            contém funções de API do <application>CUPS Filters</application>
          </para>
          <indexterm zone="cups-filters libcupsfilters">
            <primary sortas="c-libcupsfilters">libcupsfilters.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
