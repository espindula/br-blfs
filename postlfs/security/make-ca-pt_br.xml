<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY certhost              "https://hg.mozilla.org/">
  <!ENTITY certpath              "/lib/ckfw/builtins/certdata.txt">
  <!ENTITY make-ca-buildsize     "6.6 MB (with all runtime deps)">
  <!ENTITY make-ca-time          "0.1 SBU (with all runtime deps)">

  <!ENTITY make-ca-download      "https://github.com/lfs-book/make-ca/releases/download/v&make-ca-version;/make-ca-&make-ca-version;.tar.xz">
  <!ENTITY make-ca-size          "32 KB">
  <!ENTITY make-ca-md5sum        "74f1ad16d7a086ac76e0424fd4dfe67b">
]>

<!--

Direitos autorais (Copyright) da versão modificada traduzida para a 
língua portuguesa escrita e falada no Brasil: (c) 2022, 2023 Jamenson 
Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Beyond Linux From Scratch" é 
  classificado pela Free Software Foundation como sendo uma "versão 
  modificada" do mencionado livro.  Em assim sendo, na qualidade de 
  tradutor, produtor da "versão modificada" e titular dos direitos 
  autorais sobre a versão traduzida para a língua portuguesa do livro 
  "Beyond Linux From Scratch", concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este 
  livro "Beyond Linux From Scratch", versão traduzida para a língua 
  portuguesa, sob os termos da Licença de Documentação Livre GNU, versão 
  1.3 ou qualquer versão posterior publicada pela Free Software 
  Foundation; sem Seções Invariantes, sem Textos de Capa Frontal e sem 
  Textos de Quarta Capa.  Uma cópia da licença está incluída na seção 
  intitulada "Licença de Documentação Livre GNU".
  
# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.
  
  Permission is granted to copy, distribute and (or) modify this book 
  "Beyond Linux From Scratch", translated into Brazilian Portuguese, 
  under the terms of the GNU Free Documentation License, Version 1.3 or 
  any later version published by the Free Software Foundation; with no 
  Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A 
  copy of the license is included in the section entitled "GNU Free 
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.

-->

<sect1 id="make-ca" xreflabel="make-ca-&make-ca-version;">
  <?dbhtml filename="make-ca-pt_br.html"?>

  <sect1info>
    <date>$Date$</date>
  </sect1info>

  <title>make-ca-&make-ca-version;</title>
  <indexterm zone="make-ca">
    <primary sortas="a-make-ca">make-ca</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução a make-ca</title>

    <para>

      A Infraestrutura de Chave Pública (ICP) é um método para validar a 
      autenticidade de uma, do contrário, desconhecida entidade ao longo 
      de redes de comunicação não confiáveis.  A ICP funciona 
      estabelecendo uma cadeia de confiança, em vez de confiar em cada 
      anfitrião individual ou entidade explicitamente.  Para a 
      finalidade de um certificado apresentado por uma entidade remota 
      ser acreditado, esse certificado precisa apresentar uma cadeia 
      completa de certificados que possa ser validada usando-se o 
      certificado raiz de uma Autoridade Certificadora (AC) que é 
      acreditada pela máquina local.

    </para>

    <para>

      Estabelecer confiança com uma AC envolve validar coisas como 
      endereço da companhia, propriedade, informação de contato, etc., e 
      assegurar que a AC tenha seguido as melhores práticas, tais como 
      se submeter a auditorias periódicas de segurança por 
      investigadores(as) independentes e manter uma sempre disponível 
      lista de revogação de certificado.  Isso está bem fora do escopo 
      do BLFS (como está para a maior parte das distribuições do Linux).  
      A loja de certificado fornecida aqui é tomada a partir da Fundação 
      Mozilla, que estabeleceu políticas de inclusão muito estritas 
      descritas
<ulink url="https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/">aqui</ulink>.

    </para>

  &lfs111_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&make-ca-download;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &make-ca-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Somas de verificação MD5 da transferência: &make-ca-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &make-ca-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &make-ca-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do make-ca</bridgehead>

    <bridgehead renderas="sect4">Exigido</bridgehead>

    <para role="required">

      <xref linkend="p11-kit"/> (exigido em tempo de execução para gerar 
      lojas de certificado a partir de âncoras confiáveis)

    </para>
    <!-- /usr/bin/trust é necessário para extrair os certificados para /etc/ssl/certs -->

   <bridgehead renderas="sect4">Opcional (tempo de execução)</bridgehead>
    <para role="optional">
      <xref role="runtime" linkend="nss"/> (para gerar um NSSDB compartilhado)
    </para>

    <para condition="html" role="usernotes">Observações de Usuário(a):
    <ulink url='&blfs-wiki;/make-ca'/></para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação do make-ca</title>

    <para>

      O script <application>make-ca</application> baixará e processará 
      os certificados incluídos no arquivo 
      <filename>certdata.txt</filename> para uso como âncoras confiáveis 
      para o módulo de confiança <xref linkend="p11-kit"/>.  
      Adicionalmente, gerará lojas de certificado do sistema usadas 
      pelos aplicativos do BLFS (se os aplicativos recomendados e os 
      opcionais estiverem presentes no sistema).  Quaisquer certificados 
      locais armazenados em <filename>/etc/ssl/local</filename> serão 
      importados para ambos: as âncoras confiáveis; e as as lojas de 
      certificado geradas (substituindo a confiança do Mozilla).  
      Adicionalmente, quaisquer valores de confiança modificados serão 
      copiados a partir das âncoras confiáveis para 
      <filename>/etc/ssl/local</filename> antes de quaisquer 
      atualizações, preservando os valores de confiança personalizados 
      que divergirem do Mozilla quando se usar o utilitário 
      <command>trust</command> oriundo do 
      <application>p11-kit</application> para operar sobre a loja de 
      confiança.

    </para>

    <para>

      Para instalar as várias lojas de certificados, primeiro instale o 
      script <application>make-ca</application> no local correto.  Como 
      o(a) usuário(a) <systemitem class="username">root</systemitem>:

    </para>

<screen role="root"><userinput>make install &amp;&amp;
install -vdm755 /etc/ssl/local</userinput></screen>

   <para>

     Como o(a) usuário(a)
<systemitem class="username">root</systemitem>, depois de instalar o
<xref linkend="p11-kit"/>, baixe o fonte do certificado e apronte para 
     uso do sistema com o seguinte comando:

   </para>

    <note>

      <para>

        Se executar-se o script uma segunda vez com a mesma versão do 
        <filename>certdata.txt</filename>, por exemplo, atualizar as 
        lojas quando o <application>make-ca</application> for 
        atualizado; ou para acrescentar lojas adicionais conforme o 
        software solicitante for instalado, [então] substitua a chave 
        <parameter>-g</parameter> pela chave <parameter>-r</parameter> 
        na linha de comando.  Se empacotando, [então] execute 
        <command>make-ca --help</command> para ver todas as opções de 
        linha de comando disponíveis.

      </para>

    </note>

<screen role="root"><userinput>/usr/sbin/make-ca -g</userinput></screen>

    <para>

      Você deveria atualizar periodicamente a loja com o comando acima, 
      seja manualmente, ou via um
<phrase revision="sysv">trabalho do cron.</phrase>
<phrase revision="systemd">temporizador do systemd.  Um temporizador está instalado em
<filename>/usr/lib/systemd/system/update-pki.timer</filename> que, se habilitado, verificará as atualizações semanalmente.</phrase>
<phrase revision="sysv">Se você tiver instalado o <xref linkend="fcron"/> e completado a seção relativa 
      a trabalhos períodicos, [então] execute</phrase> 
<phrase revision="systemd">Execute</phrase> os seguintes comandos, como 
      o(a) usuário(a) <systemitem class="username">root</systemitem>, 
      para
<phrase revision="sysv">criar um trabalho semanal do cron:</phrase>
<phrase revision="systemd">habilitar o temporizador do systemd:</phrase>

    </para>

<screen role="nodump" revision="sysv"><userinput>cat &gt; /etc/cron.weekly/update-pki.sh &lt;&lt; "EOF" &amp;&amp;
<literal>#!/bin/bash
/usr/sbin/make-ca -g</literal>
EOF
chmod 754 /etc/cron.weekly/update-pki.sh</userinput></screen>

<screen role="root" revision="systemd"><userinput>systemctl enable update-pki.timer</userinput></screen>

  </sect2>

  <sect2 role="configuration" id="make-ca-config">
    <title>Configuring make-ca</title>

    <para>
      For most users, no additional configuration is necessary, however,
      the default <filename>certdata.txt</filename> file provided by make-ca
      is obtained from the mozilla-release branch, and is modified to provide a
      Mercurial revision. This will be the correct version for most systems.
      There are several other variants of the file available for use that might
      be preferred for one reason or another, including the files shipped with
      Mozilla products in this book. RedHat and OpenSUSE, for instance, use the
      version included in <xref linkend="nss"/>. Additional upstream downloads
      are available at the links included in
      <filename>/etc/make-ca.conf.dist</filename>. Simply copy the file to
      <filename>/etc/make-ca.conf</filename> and edit as appropriate.
    </para>

    <indexterm zone="make-ca make-ca-config">
      <primary sortas="e-etc-make-ca-conf">/etc/make-ca.conf</primary>
    </indexterm>

    <bridgehead renderas="sect3">About Trust Arguments</bridgehead>

    <para>
      There are three trust types that are recognized by the
      <application>make-ca</application> script, SSL/TLS, S/Mime, and code
      signing. For <application>OpenSSL</application>, these are
      <parameter>serverAuth</parameter>,
      <parameter>emailProtection</parameter>, and
      <parameter>codeSigning</parameter> respectively. If one of the three
      trust arguments is omitted, the certificate is neither trusted, nor
      rejected for that role. Clients that use
      <application>OpenSSL</application> or <application>NSS</application>
      encountering this certificate will present a warning to the user.
      Clients using
      <application>GnuTLS</application> without
      <application>p11-kit</application> support are not aware of trusted
      certificates. To include this CA into the
      <filename>ca-bundle.crt</filename>,
      <filename>email-ca-bundle.crt</filename>, or
      <filename>objsign-ca-bundle.crt</filename> files
      (the <application>GnuTLS</application> legacy bundles), it must have the
      appropriate trust arguments.
    </para>

    <bridgehead renderas="sect3">Adding Additional CA Certificates</bridgehead>

    <para>
      The <filename class="directory">/etc/ssl/local</filename> directory
      is available to add additional CA certificates to the system trust store.
      This directory is also used to store certificates that were added to or
      modified  in the system trust store by <xref linkend="p11-kit"/> so that
      trust values are maintained across upgrades. Files in this directory must
      be in the <application>OpenSSL</application> trusted certificate format.
      Certificates imported using the <command>trust</command> utility from
      <xref linkend="p11-kit"/> will utilize the x509 Extended Key Usage values
      to assign default trust values for the system anchors.
    </para>

    <para>If you need to override trust values, or otherwise need to create
      an <application>OpenSSL</application> trusted certificate manually
      from a regular PEM encoded file, you need to add trust arguments to the
      <command>openssl</command> command, and create a new certificate. For
      example, using the <ulink url="http://www.cacert.org/">CAcert</ulink>
      roots, if you want to trust both for all three roles, the following
      commands will create appropriate OpenSSL trusted certificates (run as
      the <systemitem class="username">root</systemitem> user after <xref
      linkend="wget"/> is installed):
    </para>

<screen role="nodump"><userinput>wget http://www.cacert.org/certs/root.crt &amp;&amp;
wget http://www.cacert.org/certs/class3.crt &amp;&amp;
openssl x509 -in root.crt -text -fingerprint -setalias "CAcert Class 1 root" \
        -addtrust serverAuth -addtrust emailProtection -addtrust codeSigning \
        > /etc/ssl/local/CAcert_Class_1_root.pem &amp;&amp;
openssl x509 -in class3.crt -text -fingerprint -setalias "CAcert Class 3 root" \
        -addtrust serverAuth -addtrust emailProtection -addtrust codeSigning \
        > /etc/ssl/local/CAcert_Class_3_root.pem &amp;&amp;
/usr/sbin/make-ca -r</userinput></screen>

    <bridgehead renderas="sect3">Overriding Mozilla Trust</bridgehead>

    <para>
      Occasionally, there may be instances where you don't agree with
      Mozilla's inclusion of a particular certificate authority. If you'd like
      to override the default trust of a particular CA, simply create a copy of
      the existing certificate in <filename
      class="directory">/etc/ssl/local</filename> with different trust
      arguments. For example, if you'd like to distrust the
      "Makebelieve_CA_Root" file, run the following commands:
    </para>

<screen role="nodump"><userinput>openssl x509 -in /etc/ssl/certs/Makebelieve_CA_Root.pem \
             -text \
             -fingerprint \
             -setalias "Disabled Makebelieve CA Root" \
             -addreject serverAuth \
             -addreject emailProtection \
             -addreject codeSigning \
       > /etc/ssl/local/Disabled_Makebelieve_CA_Root.pem &amp;&amp;
/usr/sbin/make-ca -r</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>make-ca</seg>
        <seg>/etc/ssl/{certs,local} and
        /etc/pki/{nssdb,anchors,tls/{certs,java}}</seg>
      </seglistitem>
    </segmentedlist>

   <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="make-ca-bin">
        <term><command>make-ca</command></term>
        <listitem>
          <para>
            is a shell script that adapts a current version of
            <filename>certdata.txt</filename>, and prepares it for use
            as the system trust store
          </para>
          <indexterm zone="make-ca make-ca">
            <primary sortas="b-make-ca">make-ca</primary>
          </indexterm>
        </listitem>
      </varlistentry>
   </variablelist>

  </sect2>

</sect1>
