<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

<!--

Direitos autorais (Copyright) da versão modificada traduzida para a 
língua portuguesa escrita e falada no Brasil: (c) 2022, 2023 Jamenson 
Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Beyond Linux From Scratch" é 
  classificado pela Free Software Foundation como sendo uma "versão 
  modificada" do mencionado livro.  Em assim sendo, na qualidade de 
  tradutor, produtor da "versão modificada" e titular dos direitos 
  autorais sobre a versão traduzida para a língua portuguesa do livro 
  "Beyond Linux From Scratch", concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este 
  livro "Beyond Linux From Scratch", versão traduzida para a língua 
  portuguesa, sob os termos da Licença de Documentação Livre GNU, versão 
  1.3 ou qualquer versão posterior publicada pela Free Software 
  Foundation; sem Seções Invariantes, sem Textos de Capa Frontal e sem 
  Textos de Quarta Capa.  Uma cópia da licença está incluída na seção 
  intitulada "Licença de Documentação Livre GNU".
  
# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.
  
  Permission is granted to copy, distribute and (or) modify this book 
  "Beyond Linux From Scratch", translated into Brazilian Portuguese, 
  under the terms of the GNU Free Documentation License, Version 1.3 or 
  any later version published by the Free Software Foundation; with no 
  Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A 
  copy of the license is included in the section entitled "GNU Free 
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.

-->

  <!ENTITY iptables-download-http "http://www.netfilter.org/projects/iptables/files/iptables-&iptables-version;.tar.bz2">
  <!ENTITY iptables-download-ftp  "ftp://ftp.netfilter.org/pub/iptables/iptables-&iptables-version;.tar.bz2">
  <!ENTITY iptables-md5sum        "602ba7e937c72fbb7b1c2b71c3b0004b">
  <!ENTITY iptables-size          "704 KB">
  <!ENTITY iptables-buildsize     "22 MB">
  <!ENTITY iptables-time          "0,1 UPC">
]>

<sect1 id="iptables" xreflabel="iptables-&iptables-version;">
  <?dbhtml filename="iptables-pt_br.html"?>

  <sect1info>
    <date>$Date$</date>
  </sect1info>

  <title>iptables-&iptables-version;</title>

  <indexterm zone="iptables">
    <primary sortas="a-iptables">iptables</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao iptables</title>

    <para>

      O <application>iptables</application> é um aplicativo de linha de 
      comando do espaço do(a) usuário(a) usado para configurar o 
      conjunto de regras de filtragem de pacote do kernel Linux 2.4 e 
      posteriores.

    </para>

    &lfs111_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&iptables-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&iptables-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &iptables-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &iptables-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &iptables-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &iptables-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do iptables</bridgehead>

    <bridgehead renderas="sect4">Opcionais</bridgehead>

    <para role="optional">

<!--      <xref linkend="nftables"/>, -->
      <xref linkend="libpcap"/> (exigido para suporte ao nfsypproxy),
      <ulink url="https://github.com/tadamdam/bpf-utils">bpf-utils</ulink>
      (exigido para suporte ao Berkeley Packet Filter),
      <ulink url="https://netfilter.org/projects/libnfnetlink/">libnfnetlink</ulink>
      (exigido para suporte ao connlabel),
      <ulink url="https://netfilter.org/projects/libnetfilter_conntrack/">libnetfilter_conntrack</ulink>
      (exigido para suporte ao connlabel) e
      <ulink url="https://netfilter.org/projects/nftables/">nftables</ulink>

    </para>

    <para condition="html" role="usernotes">

Observações de Usuário(a): <ulink url="&blfs-wiki;/iptables"/>

    </para>

  </sect2>

  <sect2 role="kernel" id="iptables-kernel">
    <title>Configuração do Kernel</title>

    <para>

      Um firewall no Linux é realizado por meio da interface netfilter.  
      Para usar o <application>iptables</application> para configurar a 
      netfilter, os seguintes parâmetros de configuração do kernel são 
      exigidos:

    </para>

<screen><literal>[*] Networking support  ---&gt;                                          [CONFIG_NET]
      Networking Options  ---&gt;
        [*] Network packet filtering framework (Netfilter) ---&gt;       [CONFIG_NETFILTER]
          [*] Advanced netfilter configuration                        [CONFIG_NETFILTER_ADVANCED]
          Core Netfilter Configuration ---&gt;
            &lt;*/M&gt; Netfilter connection tracking support               [CONFIG_NF_CONNTRACK]
            &lt;*/M&gt; Netfilter Xtables support (required for ip_tables)  [CONFIG_NETFILTER_XTABLES]
            &lt;*/M&gt; LOG target support                                  [CONFIG_NETFILTER_XT_TARGET_LOG]
          IP: Netfilter Configuration ---&gt;
            &lt;*/M&gt; IP tables support (required for filtering/masq/NAT) [CONFIG_IP_NF_IPTABLES]</literal></screen>

    <para>

      Inclua quaisquer protocolos de rastreamento de conexão que serão 
      usados, bem como quaisquer protocolos que você desejar usar para 
      corresponder ao suporte sob a seção "Configuração Central da 
      Netfilter".  As opções acima são suficientes para se executar o 
      <xref linkend="fw-persFw-ipt"/> abaixo.

    </para>

    <indexterm zone="iptables iptables-kernel">
      <primary sortas="d-iptables">iptables</primary>
    </indexterm>

  </sect2>

    <sect2 role="installation">
      <title>Instalação do iptables</title>

    <note>

      <para>

        A instalação abaixo não inclui a construção de algumas 
        bibliotecas de extensão especializadas que exigem os cabeçalhos 
        crus no código fonte do <application>Linux</application>.  Se 
        desejar construir as extensões adicionais (se não tiver certeza, 
        então provavelmente não deseja), [então] você pode olhar no 
        arquivo <filename>INSTALL</filename> para ver um exemplo do como 
        mudar o parâmetro <parameter>KERNEL_DIR=</parameter> para 
        apontar para o código fonte do <application>Linux</application>.  
        Observe que se atualizar a versão do kernel, [então] 
        possivelmente precisará também recompilar o 
        <application>iptables</application> e isso a equipe do BLFS não 
        testou usando os cabeçalhos crus do kernel.

      </para>

    </note>

    <para>

      Instale o <application>iptables</application> executando os 
      seguintes comandos:

    </para>

<screen><userinput>./configure --prefix=/usr      \
            --disable-nftables \
            --enable-libipq    &amp;&amp;
make</userinput></screen>

    <para>

      <!-- existe um script iptables-test.py que parece executar um 
      monte de testes.  Infelizmente, a taxa de sucesso é de somente 
      50%.  Precisa ser esclarecido como usar e quais pré-requisitos são 
      exigidos para executar a 100%.  Contatado Shekhar Sharma para isso 
      (dezembro de 2019); aguardando por uma resposta (thomas). -->

      Esse pacote não vem com uma suíte de teste.

    </para>

    <para>

      Agora, como o(a) usuário(a)
<systemitem class="username">root</systemitem>:

    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>

      <parameter>--disable-nftables</parameter>: Essa chave desabilita a 
      construção da compatibilidade do nftables.  <!--Omita essa chave 
      se você tiver instalado o <xref linkend="nftables"/>.-->

    </para>

    <para>

      <parameter>--enable-libipq</parameter>: Essa chave habilita a 
      construção da <filename class="libraryfile">libipq.so</filename> a 
      qual pode ser usada por alguns pacotes fora do BLFS.

    </para>

    <para>

      <option>--enable-nfsynproxy</option>: Essa chave habilita a 
      instalação da ferramenta de configuração do SYNPROXY 
      <application>nfsynproxy</application>.

    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configurando o iptables</title>

<!--
    <note>

      <para>

        Se você pretende usar o <xref linkend="firewalld"/> para 
        configurar suas regras de firewall, [então] você não deveria 
        usar as configurações de exemplo fornecidas aqui e nem deveria 
        habilitar
        <phrase revision="sysv">o script de inicialização.</phrase>
        <phrase revision="systemd">a unidade do systemd.</phrase>
      </para>

    </note>
-->

    <note>

      <para>

        Nas seguintes configurações de exemplo,
<emphasis role="strong">LAN1</emphasis> é usada para a interface interna 
        da LAN e <emphasis role="strong">WAN1</emphasis> é usada para a 
        interface externa conectada com a Internet.  Você precisará 
        substituir esses valores por nomes apropriados de interface para 
        o seu sistema.

      </para>

    </note>

    <sect3 id="fw-persFw-ipt" xreflabel="Criando um Firewall Pessoal Com o iptables">
      <title>Firewall Pessoal</title>

      <para>

        Um Firewall Pessoal é projetado para permitir que você acesse 
        todos os serviços oferecidos na Internet enquanto mantém o seu 
        computador seguro e os seus dados privados.

      </para>

      <para>

        Abaixo está uma versão ligeiramente modificada da recomendação 
        do Rusty Russell oriunda do
<ulink url="http://www.netfilter.org/documentation/HOWTO/packet-filtering-HOWTO.html">Linux 
        2.4 Packet Filtering HOWTO</ulink>.  Ela ainda é aplicável aos 
        kernels Linux 5.x.

      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Início do rc.iptables

# Insere módulos de rastreamento de conexão
# (não necessário se construído internamente ao kernel)
modprobe nf_conntrack
modprobe xt_LOG

# Habilita difusão echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Desabilita Pacotes Fonte Roteados
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Habilita a Proteção SYN Cookie do TCP
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Desabilita a Aceitação de Redireção de ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Não envia Mensagens de Redireção
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Descarta Pacotes Falsificados entrantes em uma interface, onde as 
# respostas resultariam na resposta indo para uma interface diferente.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Registra pacotes com endereços impossíveis.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# Seja verboso a respeito de endereços de IP dinâmicos (não necessário 
# no caso de IP estático)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Desabilita a Notificação Explícita de Congestão
# roteadores demais ainda são ignorantes
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Configura um estado conhecido
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Estas linhas estão aqui no caso das regras já estiverem no lugar e o 
# script for mesmo reexecutado em tempo real.  Nós queremos remover 
# todas as regras e cadeias preexistentes definidas por usuário(a) 
# antes de implementarmos novas regras.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permite conexões locais somente
iptables -A INPUT  -i lo -j ACCEPT

# Libera a saída gerada em qualquer interface para qualquer IP para 
# qualquer serviço (igual a -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permite respostas em conexões já estabelecidas e permite novas 
# conexões relacionadas às estabelecidas (por exemplo, modo de porta 
# ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Registra tudo o mais.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# Fim do $rc_base/rc.iptables</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Início do /etc/systemd/scripts/iptables

# Insere módulos de rastreamento de conexão (não necessário se 
# construído internamente ao kernel)
modprobe nf_conntrack
modprobe xt_LOG

# Habilita difusão echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Desabilita Pacotes Fonte Roteados
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Habilita a Proteção SYN Cookie do TCP
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Desabilita a Aceitação de Redireção de ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Não envia Mensagens de Redireção
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Descarta Pacotes Falsificados entrantes em uma interface, onde as 
# respostas resultariam na resposta indo para uma interface diferente.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Registra pacotes com endereços impossíveis.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# Seja verboso a respeito de endereços de IP dinâmicos (não necessário 
# no caso de IP estático)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Desabilita a Notificação Explícita de Congestão
# roteadores demais ainda são ignorantes
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Configura um estado conhecido
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Estas linhas estão aqui no caso das regras já estiverem no lugar e o 
# script for mesmo reexecutado em tempo real.  Nós queremos remover 
# todas as regras e cadeias preexistentes definidas por usuário(a) 
# antes de implementarmos novas regras.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permite conexões locais somente
iptables -A INPUT  -i lo -j ACCEPT

# Libera a saída gerada em qualquer interface para qualquer IP para 
# qualquer serviço (igual a -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permite respostas em conexões já estabelecidas e permite novas 
# conexões relacionadas às estabelecidas (por exemplo, modo de porta 
# ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Registra tudo o mais.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# Fim do /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>

        Esse script é bastante simples; ele descarta todo o tráfego 
        entrante no seu computador que não foi iniciado a partir do seu 
        computador; porém, considerando que você está simplesmente 
        surfando na Internet, é improvável que exceda os limites dele.

      </para>

      <para>

        Se você encontrar frequentemente certos atrasos ao acessar 
        servidores FTP, [então] dê uma olhada em
<xref linkend="fw-BB-4-ipt"/>.

      </para>

      <para>

        Mesmo se você tiver daemons ou serviços executando em seu 
        sistema, esses estarão inacessíveis em todos os lugares, exceto 
        a partir do seu próprio computador.  Se quiser permitir o acesso 
        a serviços na sua máquina, tais como o <command>ssh</command> ou 
        o <command>ping</command>, [então] dê uma olhada em
<xref linkend="fw-busybox-ipt"/>.

      </para>

    </sect3>

    <sect3 id="fw-masqRouter-ipt" xreflabel="Criando um Roteador de Mascaramento Com o iptables">
      <title>Roteador de Mascaramento</title>

      <para>

        Um Firewall de Rede de Comunicação tem duas interfaces, uma 
        conectada com uma intranet, neste exemplo
<emphasis role="strong">LAN1</emphasis> e uma conectada com a Internet, 
        aqui <emphasis role="strong">WAN1</emphasis>.  Para fornecer a 
        máxima segurança para o próprio firewall, tenha certeza de que 
        não existem servidores desnecessários executando nele, tais como 
        o <application>X11</application>.  Como um princípio geral, o 
        próprio firewall não deveria acessar qualquer serviço não 
        confiável (pense em um servidor remoto dando respostas que fazem 
        com que um daemon no seu sistema quebre; ou ainda pior, que 
        implementa um verme via um estouro do buffer).

      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Início do rc.iptables

echo
echo "Você está usando a configuração de exemplo para uma configuração de um firewall"
echo "oriunda do Beyond Linux From Scratch."
echo "Este exemplo está longe de ser completo; ele é entendido para ser"
echo "somente uma referência."
echo "A segurança do firewall é um problema complexo, que excede o escopo"
echo "das regras de configuração abaixo."
echo "Você pode encontrar informação adicional"
echo "acerca de firewalls no Capítulo 4 do livro BLFS."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insere módulos do iptables (não necessário se construído internamente 
# ao kernel).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Habilita difusão echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Desabilita Pacotes Fonte Roteados
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Habilita a Proteção SYN Cookie do TCP
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Desabilita a Aceitação de Redireção de ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Não envia Mensagens de Redireção
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Descarta Pacotes Falsificados entrantes em uma interface, onde as 
# respostas resultariam na resposta indo para uma interface diferente.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Registra pacotes com endereços impossíveis.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# Seja verboso a respeito de endereços de IP dinâmicos (não necessário 
# no caso de IP estático)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Desabilita a Notificação Explícita de Congestão
# roteadores demais ainda são ignorantes
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Configura um estado conhecido
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Estas linhas estão aqui no caso das regras já estiverem no lugar e o 
# script for mesmo reexecutado em tempo real.  Nós queremos remover 
# todas as regras e cadeias preexistentes definidas por usuário(a) 
# antes de implementarmos novas regras.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permite conexões locais
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Permite o encaminhamento se a iniciada na intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT

# Faz o mascaramento (não necessário se a intranet não estiver usando 
# endereços IP privados)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Registra tudo para depuração (última de todas as regras, porém antes 
# das regras de política)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Habilita o Encaminhamento de IP
echo 1 &gt; /proc/sys/net/ipv4/ip_forward</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Início do /etc/systemd/scripts/iptables

echo
echo "Você está usando a configuração de exemplo para uma configuração de um firewall"
echo "oriunda do Beyond Linux From Scratch."
echo "Este exemplo está longe de ser completo; ele é entendido para ser"
echo "somente uma referência."
echo "A segurança do firewall é um problema complexo, que excede o escopo"
echo "das regras de configuração abaixo."

echo "Você pode encontrar informação adicional"
echo "acerca de firewalls no Capítulo 4 do livro BLFS."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insere módulos do iptables (não necessário se construído internamente 
# ao kernel).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Habilita difusão echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Desabilita Pacotes Fonte Roteados
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Habilita a Proteção SYN Cookie do TCP
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Não envia Mensagens de Redireção
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Descarta Pacotes Falsificados entrantes em uma interface, onde as 
# respostas resultariam na resposta indo para uma interface diferente.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Registra pacotes com endereços impossíveis.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# Seja verboso a respeito de endereços de IP dinâmicos (não necessário 
# no caso de IP estático)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# Desabilita a Notificação Explícita de Congestão
# roteadores demais ainda são ignorantes
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Configura um estado conhecido
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP


# Estas linhas estão aqui no caso das regras já estiverem no lugar e o 
# script for mesmo reexecutado em tempo real.  Nós queremos remover 
# todas as regras e cadeias preexistentes definidas por usuário(a) 
# antes de implementarmos novas regras.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permite conexões locais
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Permite o encaminhamento se a iniciada na intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT


# Faz o mascaramento (não necessário se a intranet não estiver usando 
# endereços IP privados)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Registra tudo para depuração (última de todas as regras, porém antes 
# das regras de política)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Habilita o Encaminhamento de IP
echo 1 &gt; /proc/sys/net/ipv4/ip_forward

# As seções seguintes permitem pacotes de entrada para exemplos 
# específicos; descomente as linhas de exemplo e ajuste conforme 
# necessário

# Permite ping na interface externa
#iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
#iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT

# Rejeita pacotes idênticos com reconfiguração de TCP para evitar 
# atrasos com o FTP ou o IRC
#iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset

# Permite HTTP e HTTPS para 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 80 -j DNAT --to 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 443 -j DNAT --to 192.168.0.2
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 80 -j ACCEPT
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 443 -j ACCEPT

# Fim do /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>

        Com esse script sua intranet deveria estar razoavelmente segura 
        contra ataques externos.  Ninguém deveria estar apto(a) a 
        configurar uma conexão nova para qualquer serviço interno e, se 
        estiver mascarada, torna a sua intranet invisível para a 
        Internet.  Além disso, o seu firewall deveria estar 
        relativamente a salvo, pois não existem serviços executando que 
        um cracker pudesse atacar.

      </para>

    </sect3>

    <sect3 id="fw-busybox-ipt" xreflabel="Creating a BusyBox With iptables">
      <title>BusyBox</title>

      <para>
        This scenario isn't too different from the <xref
        linkend="fw-masqRouter-ipt"/>, but additionally offers some
        services to your intranet. Examples of this can be when
        you want to administer your firewall from another host on
        your intranet or use it as a proxy or a name server.
      </para>

      <note>
        <para>
          Outlining specifically how to protect a server that
          offers services on the Internet goes far beyond the scope of
          this document. See the references in <xref linkend="fw-extra-info"/>
          for more information.
        </para>
      </note>

      <para>
        Be cautious. Every service you have enabled makes your
        setup more complex and your firewall less secure. You are
        exposed to the risks of misconfigured services or running
        a service with an exploitable bug. A firewall should generally
        not run any extra services.  See the introduction to the
        <xref linkend="fw-masqRouter-ipt"/> for some more details.
      </para>

      <para>
        If you want to add services such as internal Samba or
        name servers that do not need to access the Internet themselves,
        the additional statements are quite simple and should still be
        acceptable from a security standpoint. Just add the following lines
        into the script <emphasis>before</emphasis> the logging rules.
      </para>

<screen><literal>iptables -A INPUT  -i ! WAN1  -j ACCEPT
iptables -A OUTPUT -o ! WAN1  -j ACCEPT</literal></screen>

      <para>
        If daemons, such as squid, have to access the Internet
        themselves, you could open OUTPUT generally and restrict
        INPUT.
      </para>

<screen><literal>iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -j ACCEPT</literal></screen>

      <para>
        However, it is generally not advisable to leave OUTPUT
        unrestricted. You lose any control over trojans who would like
        to "call home", and a bit of redundancy in case you've
        (mis-)configured a service so that it broadcasts its existence
        to the world.
      </para>

      <para>
        To accomplish this, you should restrict INPUT and OUTPUT
        on all ports except those that it's absolutely necessary to have
        open. Which ports you have to open depends on your needs: mostly
        you will find them by looking for failed accesses in your log
        files.
      </para>

      <itemizedlist spacing="compact" role='iptables'>
        <title>Have a Look at the Following Examples:</title>
        <listitem>
          <para>
            Squid is caching the web:
          </para>

<screen><literal>iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT  -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED \
  -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Your caching name server (e.g., named) does its lookups via UDP:
          </para>

<screen><literal>iptables -A OUTPUT -p udp --dport 53 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            You want to be able to ping your computer to ensure it's still
            alive:
          </para>

<screen><literal>iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para id='fw-BB-4-ipt' xreflabel="BusyBox with iptables example number 4">
            If you are frequently accessing FTP servers or enjoy chatting, you
            might notice delays because some implementations of these daemons
            query an identd daemon on your system to obtain usernames. Although
            there's really little harm in this, having an identd running is not
            recommended because many security experts feel the service gives
            out too much additional information.
          </para>

          <para>
            To avoid these delays you could reject the requests with a
            'tcp-reset' response:
          </para>

<screen><literal>iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset</literal></screen>

        </listitem>
        <listitem>
          <para>
            To log and drop invalid packets (packets
            that came in after netfilter's timeout or some types of
            network scans) insert these rules at the top of the chain:
          </para>

<screen><literal>iptables -I INPUT 0 -p tcp -m conntrack --ctstate INVALID \
  -j LOG --log-prefix "FIREWALL:INVALID "
iptables -I INPUT 1 -p tcp -m conntrack --ctstate INVALID -j DROP</literal></screen>

        </listitem>
        <listitem>
          <para>
            Anything coming from the outside should not have a
            private address, this is a common attack called IP-spoofing:
          </para>

<screen><literal>iptables -A INPUT -i WAN1 -s 10.0.0.0/8     -j DROP
iptables -A INPUT -i WAN1 -s 172.16.0.0/12  -j DROP
iptables -A INPUT -i WAN1 -s 192.168.0.0/16 -j DROP</literal></screen>

          <para>
            There are other addresses that you may also want to drop:
            0.0.0.0/8, 127.0.0.0/8, 224.0.0.0/3 (multicast and
            experimental), 169.254.0.0/16 (Link Local Networks), and
            192.0.2.0/24 (IANA defined test network).
          </para>
        </listitem>
        <listitem>
          <para>
            If your firewall is a DHCP client, you need to allow those packets:
          </para>

<screen><literal>iptables -A INPUT  -i WAN1 -p udp -s 0.0.0.0 --sport 67 \
   -d 255.255.255.255 --dport 68 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            To simplify debugging and be fair to anyone who'd like
            to access a service you have disabled, purposely or by mistake,
            you could REJECT those packets that are dropped.
          </para>

          <para>
            Obviously this must be done directly after logging as the very
            last lines before the packets are dropped by policy:
          </para>

<screen><literal>iptables -A INPUT -j REJECT</literal></screen>

        </listitem>
      </itemizedlist>

      <para>
        These are only examples to show you some of the capabilities
        of the firewall code in Linux. Have a look at the man page of iptables.
        There you will find much more information. The port numbers needed for
        this can be found in <filename>/etc/services</filename>, in case you
        didn't find them by trial and error in your log file.
      </para>

    </sect3>

    <sect3  id="iptables-init">
      <title><phrase revision="sysv">Boot Script</phrase>
             <phrase revision="systemd">Systemd Unit</phrase></title>

      <para revision="sysv">
        To set up the iptables firewall at boot, install the
        <filename>/etc/rc.d/init.d/iptables</filename> init script included
        in the <xref linkend="bootscripts"/> package.
      </para>

      <para revision="systemd">
        To set up the iptables firewall at boot, install the
        <filename>iptables.service</filename> unit included in the
        <xref linkend="systemd-units"/> package.
      </para>

      <indexterm zone="iptables iptables-init">
        <primary sortas="f-iptables">iptables</primary>
      </indexterm>

<screen role="root"><userinput>make install-iptables</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          ip6tables,
          ip6tables-apply,
          ip6tables-legacy,
          ip6tables-legacy-restore,
          ip6tables-legacy-save,
          ip6tables-restore,
          ip6tables-save,
          iptables,
          iptables-apply,
          iptables-legacy,
          iptables-legacy-restore,
          iptables-legacy-apply,
          iptables-restore,
          iptables-save,
          iptables-xml,
          nfsynproxy (optional),
          and xtables-multi
        </seg>
        <seg>
          libip4tc.so,
          libip6tc.so,
          libipq.so,
          libiptc.so,
          and libxtables.so
        </seg>
        <seg>
          /lib/xtables and
          /usr/include/libiptc
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="iptables-prog">
        <term><command>iptables</command></term>
        <listitem>
          <para>
            is used to set up, maintain, and inspect the tables of
            IP packet filter rules in the Linux kernel
          </para>
          <indexterm zone="iptables iptables-prog">
            <primary sortas="b-iptables">iptables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-apply">
        <term><command>iptables-apply</command></term>
        <listitem>
          <para>
            is a safer way to update iptables remotely
          </para>
          <indexterm zone="iptables iptables-apply">
            <primary sortas="b-iptables-apply">iptables-apply</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy">
        <term><command>iptables-legacy</command></term>
        <listitem>
          <para>
            is used to interact with iptables using the legacy command set
          </para>
          <indexterm zone="iptables iptables-legacy">
            <primary sortas="b-iptables-legacy">iptables-legacy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-restore">
        <term><command>iptables-legacy-restore</command></term>
        <listitem>
          <para>
            is used to restore a set of legacy iptables rules
          </para>
          <indexterm zone="iptables iptables-legacy-restore">
            <primary sortas="b-iptables-legacy-restore">iptables-legacy-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-save">
        <term><command>iptables-legacy-save</command></term>
        <listitem>
          <para>
            is used to save a set of legacy iptables rules
          </para>
          <indexterm zone="iptables iptables-legacy-save">
            <primary sortas="b-iptables-legacy-save">iptables-legacy-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-restore">
        <term><command>iptables-restore</command></term>
        <listitem>
          <para>
            is used to restore IP Tables from data specified on
            STDIN. Use I/O redirection provided by your
            shell to read from a file
          </para>
          <indexterm zone="iptables iptables-restore">
            <primary sortas="b-iptables-restore">iptables-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-save">
        <term><command>iptables-save</command></term>
        <listitem>
          <para>
            is used to dump the contents of an IP Table in easily
            parseable format to STDOUT. Use I/O-redirection
            provided by your shell to write to a file
          </para>
          <indexterm zone="iptables iptables-save">
            <primary sortas="b-iptables-save">iptables-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-xml">
        <term><command>iptables-xml</command></term>
        <listitem>
          <para>
            is used to convert the output of
            <command>iptables-save</command> to an XML format. Using the
            <filename>iptables.xslt</filename> stylesheet converts the XML
            back to the format of <command>iptables-restore</command>
          </para>
          <indexterm zone="iptables iptables-xml">
            <primary sortas="b-iptables-xml">iptables-xml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ip6tables">
        <term><command>ip6tables*</command></term>
        <listitem>
          <para>
            are a set of commands for IPV6 that parallel the iptables
            commands above
          </para>
          <indexterm zone="iptables ip6tables">
            <primary sortas="b-ip6tables">ip6tables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nfsynproxy">
        <term><command>nfsynproxy</command></term>
        <listitem>
          <para>
            (optional) configuration tool. SYNPROXY target makes handling of
            large SYN floods possible without the large performance penalties
            imposed by the connection tracking in such cases
          </para>
          <indexterm zone="iptables nfsynproxy">
            <primary sortas="b-nfsynproxy">nfsynproxy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xtables-multi">
        <term><command>xtables-multi</command></term>
        <listitem>
          <para>
            is a binary that behaves according to the name it is called by
          </para>
          <indexterm zone="iptables xtables-multi">
            <primary sortas="b-xtables-multi">xtables-multi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
