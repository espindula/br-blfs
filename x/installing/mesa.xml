<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mesa-download-http "https://mesa.freedesktop.org/archive/mesa-&mesa-version;.tar.xz">
  <!ENTITY mesa-download-ftp  "ftp://ftp.freedesktop.org/pub/mesa/mesa-&mesa-version;.tar.xz">
  <!ENTITY mesa-md5sum        "fdb35ae46968ce517702037710db6a3f">
  <!ENTITY mesa-size          "17 MB">
  <!ENTITY mesa-buildsize     "369 MB (com os documentos, adicionar 203 MB para os testes)">
  <!ENTITY mesa-time          "2,2 UPC (Usando paralelismo=4; com os documentos, adicionar 0,6 UPC para os
testes)">
]>

<sect1 id="mesa" xreflabel="Mesa-&mesa-version;">
  <?dbhtml filename="mesa.html"?>


  <title>Mesa-&mesa-version;</title>

  <indexterm zone="mesa">
    <primary sortas="a-Mesa">Mesa</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao <quote>Mesa</quote></title>

    <para>
      &quot;<application>Mesa</application>&quot; é uma biblioteca gráfica
&quot;3D&quot; compatível com &quot;OpenGL&quot;.
    </para>

    <note>
      <para>
        &quot;<application>Mesa</application>&quot; é atualizada relativamente
muitas vezes. Você possivelmente queira usar a versão &mesa-major-minor;.x
do &quot;Mesa&quot; mais recente disponível.
      </para>
    </note>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&mesa-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&mesa-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &mesa-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &mesa-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &mesa-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &mesa-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Transferências Adicionais</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Remendo recomendado: <ulink
url="&patch-root;/mesa-&mesa-version;-add_xdemos-1.patch"/> (instala dois
(02) aplicativos de demonstração para testagem da &quot;Mesa&quot; - não
necessário se você instalar o pacote &quot;<ulink
url="https://archive.mesa3d.org/demos/">mesa-demos</ulink>&quot;)
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do &quot;Mesa&quot;</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="xorg7-lib"/>, <xref linkend="libdrm"/> e <xref
linkend="Mako"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas</bridgehead>
    <para role="recommended">

      <xref role="first" linkend="libva"/> (para fornecer suporte
&quot;VA-API&quot; para alguns controladores &quot;gallium&quot;; observe
que existe uma dependência circular. Você precisa construir a
&quot;<application>libva</application>&quot; primeiro sem suporte
&quot;EGL&quot; e &quot;GLX&quot;, instalar esse pacote, e reconstruir a
&quot;<application>libva</application>&quot;), <xref linkend="libvdpau"/>
(para construir os controladores &quot;VDPAU&quot;), <xref linkend="llvm"/>
(exigido para os controladores &quot;Gallium3D&quot;, &quot;nouveau&quot; e
&quot;radeonsi&quot;; e para o &quot;swrast&quot;, o rasterizador de
logiciário que às vezes é chamado de &quot;llvmpipe&quot;. Veja-se <ulink
role="nodep" url="https://docs.mesa3d.org/systems.html"/> para mais
informações) e <xref linkend="wayland-protocols"/> (exigido para o
&quot;<xref role="nodep" linkend='plasma5-build'/>&quot;, &quot;GNOME&quot;,
e recomendado para o &quot;<xref role="nodep" linkend='gtk3'/>&quot;)
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <!-- for libsensors according to Meson -->
<xref linkend="libgcrypt"/>, <xref linkend="libunwind"/>, <xref
linkend="lm_sensors"/> , <xref linkend="nettle"/>, <xref
linkend="valgrind"/>, <ulink
url="https://archive.mesa3d.org/demos/">mesa-demos</ulink> (fornece mais que
trezentos (300) demonstrativos extra para testar
<application>Mesa</application>; isso inclui os mesmos aplicativos
adicionados pelo remendo acima), <ulink
url="https://omxil.sourceforge.net/">Camada de Integração Bellagio
OpenMAX</ulink> (para plataformas móveis), <ulink
url="https://github.com/KhronosGroup/glslang">glslang</ulink> (para os
controladores &quot;vulkan&quot;), <ulink
url="https://github.com/tizonia/tizonia-openmax-il/wiki/Tizonia-OpenMAX-IL/">libtizonia</ulink>
e <ulink url="https://www.vulkan.org/">libvulkan</ulink>
    </para>

    <!--
    <note>

      <para>
        The instructions below assume that
        <application>LLVM</application> with the r600/amdgpu and host backends
        and run-time type information (RTTI - needed for nouveau) are installed.
        You will need to modify the instructions if you
        choose not to install all of these. For an explanation of Gallium3D see
        <ulink url="https://en.wikipedia.org/wiki/Gallium3D"/>.
      </para>
    </note>
-->
<para condition="html" role="usernotes">Observações de Usuário(a): <ulink url="&blfs-wiki;/mesalib"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação do <quote>Mesa</quote></title>

    <para>
      Se você baixou o remendo &quot;xdemos&quot; (necessário se testar a
instalação do &quot;Xorg&quot; de acordo com as instruções do BLFS), [então]
aplique-o executando o seguinte comando:
    </para>

<!-- Note that freedreno, vc4, and virgl all need special support from
        libdrm - renodr
        For me, libdrm does not mention virgl, but mesa accepts it. AFAICS
        freedreno is for qualcom hardware, libdrm will build for it on suitable
        systems. VC4 is for the Broadcom VC4 used in the raspberry pi - ken -->
<!--
    <note>

      <para>
        The measurements above, and the Contents below, are for a full build.
        Many people will not wish to install drivers they cannot use, so the
        following paragraphs explain how to limit the drivers, and give an
        example which can be be reduced or amended as necessary.
      </para>
    </note>

    <para>
      Now, select the drivers you wish to install. For the X86 architecture, the
      available gallium drivers are auto (<emphasis>in 21.2.1 this does not select
      crocus </emphasis>), <emphasis>or alternatively a choice from</emphasis>
      crocus, i915, iris, nouveau, r300, r600, radeonsi, svga, swrast, and virgl.
      The latter can provide acceleration in <xref linkend="qemu"/> if that has
      been linked against
      <ulink url="https://gitlab.freedesktop.org/virgl/virglrenderer/~/releases/">virglrenderer</ulink>
      (you will need a freedesktop.org account to get to that page, you can
      download the 0.9.1 release without an account from
     <ulink url="https://gitlab.freedesktop.org/virgl/virglrenderer/-/archive/0.9.1/virglrenderer-0.9.1.tar.bz2">virglrenderer-0.9.1</ulink>).-->
<!-- If you wish to build all available gallium drivers,
      use 'auto'. FIXME : does not build crocus in 21.2.1 -->
<!-- crocus was added to the default x86/x86_64 drivers for meson in the
      master branch on 2021-08-31, at some point it will appear in a stable release
    </para>

-->
<!--
    <para>

      The (non-gallium) DRI drivers available in X86 are auto, <emphasis>or
      alternatively a choice from</emphasis> i915, i965, nouveau, r100, r200,
      and swrast. Use 'auto' to build all available DRI drivers, or use an
      empty string (DRI_DRIVERS="") if you wish to only build gallium drivers.
    </para>

    <para>
      The platforms ("window systems") available for X86 linux are x11, wayland,
     drm, and surfaceless. By not specifying anything, the meson
      build-system will build for all these platforms if you have the
      dependencies, identical to if you had specified '-Dplatforms=auto'.
    </para>

    <para>
      Modify the commands below for your desired drivers.  The drivers listed
      below will cover most modern video cards and virtual machines.  For help in
      selecting drivers see <ulink url="https://docs.mesa3d.org/systems.html"/>.
-->
<!-- these two don't seem to be mentioned in that mesa link -->
<!--
      For intel drivers, specify crocus for i965 gen 4 through to haswell, iris
      for broadwell and later.
    </para>


    <note>
      <para>
        Although the nouveau drivers can be built for both gallium and dri, the
        i915 driver can only be built for one or the other.
      </para>
    </note>

<screen><userinput>GALLIUM_DRV="crocus,i915,iris,nouveau,r600,radeonsi,svga,swrast,virgl"
DRI_DRIVERS="i965,nouveau"</userinput></screen>
-->
<screen><userinput>patch -Np1 -i ../mesa-&mesa-version;-add_xdemos-1.patch</userinput></screen>

   




      

      


    <para>
      Instale o &quot;<application>Mesa</application>&quot; executando os
seguintes comandos:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd   build &amp;&amp;

meson setup                   \
      --prefix=$XORG_PREFIX   \
      --buildtype=release     \
      -Dplatforms=x11,wayland \
      -Dgallium-drivers=auto  \
      -Dvulkan-drivers=""     \
      -Dvalgrind=disabled     \
      -Dlibunwind=disabled    \
      ..                      &amp;&amp;

ninja</userinput></screen>

    <para>
      Para testar os resultados, emita: &quot;<command>meson configure
-Dbuild-tests=true &amp;&amp; ninja test</command>&quot;.
    </para>


    <!-- All 88 tests passed for me for 22.3.3 [pierre]
-->
<para>
      Agora, como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

    <para>
      Se desejado, [então] instale a documentação opcional executando os seguintes
comandos como o(a) usuário(a) &quot;<systemitem
class="username">root</systemitem>&quot;:
    </para>

<screen role="root"
        remap="doc"><userinput>install -v -dm755 /usr/share/doc/mesa-&mesa-version; &amp;&amp;
cp -rfv ../docs/* /usr/share/doc/mesa-&mesa-version;</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <parameter>--buildtype=release</parameter>: Essa chave garante uma
construção totalmente otimizada e desabilita asserções de depuração que
desacelerarão severamente as bibliotecas em certos casos de uso. Sem essa
chave, os tamanhos de construção podem atingir a faixa de 2 GB.
    </para>

    <para>
      <parameter>-Dgallium-drivers="..."</parameter>: Esse parâmetro controla
quais controladores &quot;Gallium3D&quot; deveriam ser construídos.
    </para>


    <!--
    <para>

      <parameter>-Dosmesa=true</parameter>: This switch enables building
      the <filename class="libraryfile">libOSMesa</filename> library and
      provides Gallium3D support in it. It requires the swrast gallium driver.
    </para>
-->
<para>
      <parameter>-Dplatforms="..."</parameter>: Esse parâmetro controla quais
sistemas de janelas serão suportados. As plataformas Linux disponíveis são
&quot;x11&quot; e &quot;wayland&quot;.
    </para>

    <para>
      <parameter>-Dvulkan-drivers=""</parameter>: Essa chave permite escolher
quais controladores &quot;Vulkan&quot; serão construídos. O padrão é
&quot;auto&quot;, mas isso exige a dependência opcional
&quot;<filename>glslang</filename>&quot;. Portanto é melhor passar uma lista
vazia, para a finalidade de eliminar a necessidade dessa dependência. De
qualquer forma, nada no BLFS usa &quot;Vulkan&quot;.
    </para>

    <para>
      <parameter>-Dvalgrind=disabled</parameter>: Esse parâmetro desabilita o uso
do &quot;Valgrind&quot; durante o processo de construção. Remova esse
parâmetro se você tiver o &quot;Valgrind&quot; instalado e desejar verificar
vazamentos de memória.
    </para>

    <para>
      <parameter>-Dlibunwind=disabled</parameter>: Esse parâmetro desabilita o uso
da &quot;libunwind&quot;.
    </para>

    <para>
      <command>meson configure -Dbuild-tests=true</command>: Esse comando
reconfigurará a construção para configurar
&quot;<option>-Dbuild-tests=true</option>&quot;, mas manterá as outras
opções especificadas no comando &quot;<command>meson setup</command>&quot;
sem mudanças. Ele permite que o &quot;<command>ninja test</command>&quot;
construa e execute testes unitários.
    </para>

    <para>
      <option>-Degl-native-platform="..."</option>: Esse parâmetro controla qual
suporte da Biblioteca de Gráficos Incorporados será construído. As opções de
Linux disponíveis são &quot;auto&quot; (padrão), &quot;x11&quot;,
&quot;wayland&quot;, &quot;surfaceless&quot; e &quot;drm&quot;.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <!-- in /usr/lib -->
<segtitle>Controladores Instalados</segtitle>
      <!-- in /usr/lib/<subdir>
 -->
<segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          glxgears e glxinfo
        </seg>
        <seg>
          <!--          libXvMCnouveau.so,
          libXvMCr600.so,-->
libEGL.so, libGL.so, libGLESv1_CM.so, libGLESv2.so, libgbm.so, libglapi.so e
libxatracker.so
        </seg>
        <seg>
          

          <!-- Begin gallium DRI drivers : this is the full set -->
<!--          d3dadapter9.so (optional),   For Windows games. This is DirectX's
                                          Direct3D -->
<!-- End DRI Drivers -->
<!-- Begin VDPAU drivers -->
<!-- End VDPAU drivers -->
crocus_dri.so, i915_dri.so, iris_dri.so, kms_swrast_dri.so, nouveau_dri.so,
nouveau_drv_video.so, r300_dri.so, r600_dri.so, r600_drv_video.so,
radeonsi_dri.so, radeonsi_drv_video.so, swrast_dri.so, virtio_gpu_dri.so,
virtio_gpu_drv_video.so, vmwgfx_dri.so, libvdpau_nouveau.so,
libvdpau_r300.so libvdpau_r600.so e libvdpau_radeonsi.so
libvdpau_virtio_gpu.so (Muitos desses controladores são rigidamente
lincados).
        </seg>
        <seg>
          
          <!-- $XORG_PREFIX/include/GL is installed by xorg-protos -->
$XORG_PREFIX/{include/{EGL,GLES,GLES2,GLES3,KHR},
$XORG_PREFIX/lib/{dri,vdpau}}, $XORG_PREFIX/share/drirc.d (contém soluções
alternativas para vários aplicativos, principalmente navegadores e jogos) e
/usr/share/doc/mesa-&mesa-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="glxgears">
        <term><command>glxgears</command></term>
        <listitem>
          <para>
            é uma demonstração &quot;GL&quot; útil para solucionar problemas gráficos
          </para>
          <indexterm zone="mesa glxgears">
            <primary sortas="b-glxgears">glxgears</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="glxinfo">
        <term><command>glxinfo</command></term>
        <listitem>
          <para>
            é um aplicativo de diagnóstico que exibe informações relativas ao hardware
gráfico e bibliotecas &quot;GL&quot; instaladas
          </para>
          <indexterm zone="mesa glxinfo">
            <primary sortas="b-glxinfo">glxinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libEGL">
        <term><filename class="libraryfile">libEGL.so</filename></term>
        <listitem>
          <para>
            fornece uma interface gráfica de plataforma nativa conforme definido pela
especificação &quot;EGL-1.4&quot;
          </para>
          <indexterm zone="mesa libEGL">
            <primary sortas="c-libGL">libEGL.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgbm">
        <term><filename class="libraryfile">libgbm.so</filename></term>
        <listitem>
          <para>
            é a biblioteca &quot;Graphics Buffer Manager&quot; do
&quot;<application>Mesa</application>&quot;
          </para>
          <indexterm zone="mesa libgbm">
            <primary sortas="c-libgbm">libgbm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLESv1_CM">
        <term><filename class="libraryfile">libGLESv1_CM.so</filename></term>
        <listitem>
          <para>
            é a biblioteca &quot;OpenGL ES 1.1&quot; do
&quot;<application>Mesa</application>&quot;
          </para>
          <indexterm zone="mesa libGLESv1_CM">
            <primary sortas="c-libGLESv1_CM">libGLESv1_CM.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLES2">
        <term><filename class="libraryfile">libGLES2.so</filename></term>
        <listitem>
          <para>
            é a biblioteca &quot;OpenGL ES 2.0&quot; do
&quot;<application>Mesa</application>&quot;
          </para>
          <indexterm zone="mesa libGLES2">
            <primary sortas="c-libGLES2">libGLES2.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGL">
        <term><filename class="libraryfile">libGL.so</filename></term>
        <listitem>
          <para>
            é a principal biblioteca &quot;OpenGL&quot; do
&quot;<application>Mesa</application>&quot;
          </para>
          <indexterm zone="mesa libGL">
            <primary sortas="c-libGL">libGL.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
