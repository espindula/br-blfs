<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libmusicbrainz-download-http "http://ftp.musicbrainz.org/pub/musicbrainz/historical/libmusicbrainz-&libmusicbrainz-version;.tar.gz">
  <!ENTITY libmusicbrainz-download-ftp  "ftp://ftp.musicbrainz.org/pub/musicbrainz/historical/libmusicbrainz-&libmusicbrainz-version;.tar.gz">
  <!ENTITY libmusicbrainz-md5sum        "d5e19bb77edd6ea798ce206bd05ccc5f">
  <!ENTITY libmusicbrainz-size          "524Ko">
  <!ENTITY libmusicbrainz-buildsize     "12Mo">
  <!ENTITY libmusicbrainz-time          "0,4UPC">
]>

<sect1 id="libmusicbrainz" xreflabel="libmusicbrainz-&libmusicbrainz-version;">
  <?dbhtml filename="libmusicbrainz.html"?>


  <title>libmusicbrainz-&libmusicbrainz-version;</title>

  <indexterm zone="libmusicbrainz">
    <primary sortas="a-libmusicbrainz">libmusicbrainz</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução a libmusicbrainz</title>

    <para>
      The <application>libmusicbrainz</application> package contains a library
which allows you to access the data held on the MusicBrainz server.  This is
useful for adding MusicBrainz lookup capabilities to other applications.
    </para>

    <para>
      MusicBrainz is a community music metadatabase that attempts to create a
comprehensive music information site. You can use the MusicBrainz data
either by browsing the web site, or you can access the data from a client
program &mdash; for example, a CD player program can use MusicBrainz to
identify CDs and provide information about the CD, about the artist or other
related information.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&libmusicbrainz-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&libmusicbrainz-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5: &libmusicbrainz-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &libmusicbrainz-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &libmusicbrainz-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &libmusicbrainz-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Transferências Adicionais</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Remendo exigido: <ulink
url="&patch-root;/libmusicbrainz-&libmusicbrainz-version;-missing-includes-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências de libmusicbrainz</bridgehead>

    <bridgehead renderas="sect4">Optional to Build the Python Bindings</bridgehead>
    <para role="optional">
      <xref linkend="python2"/>
    </para>

    <para condition="html" role="usernotes">Observações de Usuário(a): <ulink url="&blfs-wiki;/libmusicbrainz"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Instalação de libmusicbrainz</title>

    <para>
      Instale <application>libmusicbrainz</application> executando os seguintes
comandos:
    </para>

<screen><userinput>patch -Np1 -i ../libmusicbrainz-&libmusicbrainz-version;-missing-includes-1.patch &amp;&amp;

CXXFLAGS="${CXXFLAGS:--O2 -g} -std=c++98" \
./configure --prefix=/usr --disable-static &amp;&amp;
make</userinput></screen>

    <para>
      If <application>Python</application> is installed, build the bindings with
the following commands:
    </para>

<screen><userinput>(cd python &amp;&amp; python2 setup.py build)</userinput></screen>

    <para>
      This package does not come with a stand-alone test suite (to test you must
have <application>Python</application> installed and perform the test after
the package is installed).
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
install -v -m644 -D docs/mb_howto.txt \
    /usr/share/doc/libmusicbrainz-&libmusicbrainz-version;/mb_howto.txt</userinput></screen>

    <para>
      To test the Python bindings, issue the following: <command>(cd python
&amp;&amp; python2 setup.py test)</command>.
    </para>

    <para>
      If you built the Python bindings, issue the following commands as the
<systemitem class="username">root</systemitem> user to install them:
    </para>

<screen role="root"><userinput>(cd python &amp;&amp; python2 setup.py install)</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/static-libraries.xml"/>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Biblioteca Instalada</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>None</seg>
        <seg>libmusicbrainz.so</seg>
        <seg>/usr/include/musicbrainz and
/usr/share/doc/libmusicbrainz-&libmusicbrainz-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="libmusicbrainz-lib">
        <term><filename class="libraryfile">libmusicbrainz.so</filename></term>
        <listitem>
          <para>
            contains API functions to access the MusicBrainz database, both for looking
up data and also for submitting new data
          </para>
          <indexterm zone="libmusicbrainz libmusicbrainz-lib">
            <primary sortas="c-libmusicbrainz">libmusicbrainz.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
