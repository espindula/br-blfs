<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libplacebo-download-http "https://github.com/haasn/libplacebo/archive/refs/tags/v&libplacebo-version;/libplacebo-&libplacebo-version;.tar.gz">
  <!ENTITY libplacebo-download-ftp  "">
  <!ENTITY libplacebo-md5sum        "4f5b743ec43c684e6da0d56efed3891c">
  <!ENTITY libplacebo-size          "824 KB">
  <!ENTITY libplacebo-buildsize     "34 MB">
  <!ENTITY libplacebo-time          "0.1 SBU (With tests, both using parallelism=4">
]>

<sect1 id="libplacebo" xreflabel="libplacebo-&libplacebo-version;">
  <?dbhtml filename="libplacebo.html"?>

  <title>libplacebo-&libplacebo-version;</title>

  <indexterm zone="libplacebo">
    <primary sortas="a-libplacebo">libplacebo</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libplacebo</title>

    <para>
      The <application>libplacebo</application> package contains a library for
processing image and video primitives and shaders. It also includes a high
quality rendering pipeline that supports OpenGL and Vulkan.
    </para>

    &lfs121_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&libplacebo-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&libplacebo-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &libplacebo-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &libplacebo-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &libplacebo-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &libplacebo-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libplacebo Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="ffmpeg"/> and <xref linkend="glad"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="glslang"/> and <xref linkend="vulkan-loader"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="lcms2"/> <xref linkend="libunwind"/>, <ulink
url="https://github.com/quietvoid/dovi_tool/">dovi_tool</ulink>, <ulink
url="https://github.com/Immediate-Mode-UI/Nuklear">Nuklear</ulink>, and
<ulink url="https://github.com/Cyan4973/xxHash">xxHash</ulink>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of libplacebo</title>

    <para>
      Install <application>libplacebo</application> by running the following
commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..            \
      --prefix=/usr       \
      --buildtype=release \
      -Dtests=true        \
      -Ddemos=false       &amp;&amp;
ninja</userinput></screen>

    <para>
      To test the results, issue: <command>ninja test</command>.  One test,
opengl_surfaceless.c, is known to fail.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <parameter>-Ddemos=false</parameter>: This switch disables building the demo
programs because building <application>plplay</application> is currently
broken.
    </para>

    <para>
      <parameter>-Dtests=true</parameter>: This switch enables building the code
necessary to run the tests.
    </para>
  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          None
        </seg>
        <seg>
          libplacebo.so
        </seg>
        <seg>
          /usr/include/libplacebo
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="libplacebo-lib">
        <term><filename class="libraryfile">libplacebo.so</filename></term>
        <listitem>
          <para>
            processes image and video primitives and shaders and provides a high quality
rendering pipeline for OpenGL and Vulkan
          </para>
          <indexterm zone="libplacebo libplacebo-lib">
            <primary sortas="c-libplacebo">libplacebo.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
</sect1>
