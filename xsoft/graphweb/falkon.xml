<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY falkon-download-http "&kf5apps-download-http;/falkon-&kf5apps-version;.tar.xz">
  <!ENTITY falkon-download-ftp  "">
  <!ENTITY falkon-md5sum        "4223a2bba71412b805bd7223d9000242">
  <!ENTITY falkon-size          "2,4 MB">
  <!ENTITY falkon-buildsize     "129 MB">
  <!ENTITY falkon-time          "1,2 UPC (Usando paralelismo=4)">
]>

<sect1 id="falkon" xreflabel="falkon-&kf5apps-version;">
  <?dbhtml filename="falkon.html"?>


  <title>Falkon-&kf5apps-version;</title>

  <indexterm zone="falkon">
    <primary sortas="a-falkon">falkon</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao falkon</title>

    <para>
      <application>Falkon</application> é um navegador da web do KDE que usa o
mecanismo de renderização QtWebEngine. Anteriormente era conhecido como
<application>QupZilla</application>. O objetivo dele é o de ser um navegador
leve da web, disponível em todas as principais plataformas.
    </para>

    <para>
      Embora o <application>falkon</application> agora faça parte do KDE, ele pode
ser instalado sem o KDE (com a perda da funcionalidade do
<application>kwallet</application>).
    </para>

    <warning>
      <para>
        Falkon depende do QtWebEngine. Isso usa uma cópia bifurcada do chromium e,
portanto, é vulnerável a muitos problemas encontrados lá. Os(As)
desenvolvedores(as) do Qt tem sempre preferido fazer lançamentos ao mesmo
tempo que o resto do Qt (em vez de adicionar correções emergenciais). Agora
que eles(as) desejam migrar para o Qt6, os lançamentos 5.15.3 e posteriores
do Qt-5.15 estão inicialmente disponíveis somente para clientes
pagantes. QtWebEngine é uma exceção por causa da licença LGPL dele, mas
levar os fontes git (com o submódulo bifurcado do chromium) a um ponto em
que eles serão construídos com sucesso em um sistema BLFS atual pode exigir
muito esforço. Esteja ciente de que futuras correções de vulnerabilidades
podem demorar muito, a ponto de você desejar considerar usar um navegador
diferente.
      </para>
    </warning>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&falkon-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&falkon-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &falkon-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &falkon-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &falkon-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &falkon-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do falkon</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="extra-cmake-modules"/>, <xref linkend="kf5-frameworks"/>
(para karchive) e <xref linkend="qtwebengine"/>
    </para>

    <note>
      <para>
        Estritamente falando, somente o karchive é exigido para construir o falkon,
mas vários outros pacotes no KF5 podem ser usados se estiverem
presentes. Para construir somente o karchive, baixe esse pacote a partir do
diretório especificado em <xref linkend="kf5-frameworks"/> e use as
instruções de construção naquela página, mudando $KF5_PREFIX para /usr.
      </para>
    </note>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="gnome-keyring"/>, <ulink
url="https://pypi.org/project/PySide2/">PySide2</ulink> e <ulink
url="https://pypi.org/project/shiboken2/">Shiboken2</ulink>
    </para>

    <para condition="html" role="usernotes">
      Observações de Usuário(a): <ulink url="&blfs-wiki;/falkon"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação do falkon</title>

    <para>
      Instale o <application>falkon</application> executando os seguintes
comandos:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

cmake -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release  \
      .. &amp;&amp;

make</userinput></screen>

    <para>
      Para testar os resultados, emita: <command>make test</command>. Todos os
testes deveriam passar. Se algum falhar, os resultados completos estarão em
<filename>Testing/Temporary/LastTest.log</filename>.
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

    <para>
      Se você instalou o <application>Pyside2</application>, você irá querer
examinar <command>hellopython.py</command> que está no diretório <filename
class="directory">scripts/</filename> e, talvez, copiá-lo para o teu
diretório inicial.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <para>
      <option>-DBUILD_TESTING=OFF</option>: Isso economizará um pouco de tempo e
espaço não construindo os aplicativos de teste; use isso se você não desejar
executar o teste.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Biblioteca Instalada</segtitle>
      <segtitle>Diretório Instalado</segtitle>

      <seglistitem>
        <seg>
          falkon
        </seg>
        <seg>
          libFalkonPrivate.so.3
        </seg>
        <seg>
          /usr/share/falkon
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="falkon-prog">
        <term><command>falkon</command></term>
        <listitem>
          <para>
            é um navegador da web que usa qtwebengine
          </para>
          <indexterm zone="falkon falkon-prog">
            <primary sortas="b-falkon">falkon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libFalkonPrivate.so.3">
        <term><filename class="libraryfile">libFalkonPrivate.so.3</filename></term>
        <listitem>
          <para>
            contém funções usadas pelo falkon
          </para>
          <indexterm zone="falkon libFalkonPrivate.so.3">
            <primary sortas="c-libFalkonPrivate.so.3">libFalkonPrivate.so.3</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>

</sect1>
