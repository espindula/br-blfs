<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY firefox-download-http "&mozilla-http;/firefox/releases/&firefox-version;esr/source/firefox-&firefox-version;esr.source.tar.xz">
  <!ENTITY firefox-download-ftp  "">
  <!ENTITY firefox-md5sum        "&firefox-md5;">
  <!ENTITY firefox-size          "457 MB">
  <!-- NB with stylo, much of the build uses rust, and therefore cargo files.
    But the extra cached cargo files, if any, seem to be minimal -->
  <!ENTITY firefox-buildsize     "7,0 GB (197 MB instalado) sem testes">
  <!-- editors: with ff63 and rust-1.29, ./mach build -j4 is probably the
   most practical way to get a timing on a machine with more cores, if taking
   cores offline is not practical. If in doubt, round up -->
  <!ENTITY firefox-time          "20 UPC usando -j4, sem testes">
]>

<sect1 id="firefox" xreflabel="Firefox-&firefox-version;">
  <!-- indicate this is the ESR variant,
  The point was that the 102.0 stable release differed slightly.
  <title>
Firefox-&firefox-version;</title>-->
<?dbhtml filename="firefox.html" ?>



  <title>Firefox-&firefox-version;esr</title>

  <indexterm zone="firefox">
    <primary sortas="a-Firefox">Firefox</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao Firefox</title>

    <para>
      <application>Firefox</application> é um navegador autônomo baseado na base
de código <application>Mozilla</application>.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&firefox-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&firefox-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &firefox-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &firefox-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &firefox-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &firefox-time;
        </para>
      </listitem>
    </itemizedlist>



    <!--<bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch:
          <ulink url="&patch-root;/firefox-&firefox-version;esr-gcc12_fix-1.patch"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Recommended patch:
          <ulink url="&patch-root;/firefox-&firefox-version;esr-disable_rust_test-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>-->
<note>
      <para>
        O nome do diretório é firefox-&firefox-version;
      </para>

      <para>
        Extrair o tarball reconfigurará as permissões do diretório atual para 0755,
se você tiver permissão para fazer isso. Se você fizer isso em um diretório
onde o bit sticky esteja configurado, como o <filename
class="directory">/tmp</filename>, ela terminará com mensagens de erro:
      </para>

<literallayout>tar: .: Cannot utime: Operation not permitted
tar: .: Cannot change mode to rwxr-xr-t: Operation not permitted
tar: Exiting with failure status due to previous errors
</literallayout>

      <para>
        Isso termina com situação diferente de zero, mas <emphasis>NÃO</emphasis>
significa que existe um problema real. Não desempacote como o(a) usuário(a)
<systemitem class="username">root</systemitem> em um diretório onde o bit
sticky esteja configurado - isso irá desconfigurá-lo.
      </para>

      <para>
        Tal como acontece com outros pacotes grandes que usam C++ (ou rust), os
tempos de UPC para construir isso variam mais amplamente que você poderia
esperar. Os tempos de construção aumentarão significativamente se tua
máquina tiver que trocar.
      </para>

      <para>
        Embora o(a) desenvolvedor(a) prefira usar
<application>PulseAudio</application>, no momento
<application>Alsa</application> ainda pode ser usado. Ambos possivelmente
precisem de configuração de tempo de execução para que o som funcione.
      </para>
    </note>

    <bridgehead renderas="sect3">Dependências do Firefox</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="autoconf213"/>, <xref linkend="cbindgen"/>, <xref
linkend="dbus-glib"/>, <xref linkend="gtk3"/>, <xref linkend="libnotify"/>,
<xref linkend="llvm"/> (com clang, usado para bindgen mesmo se usar gcc),
<xref linkend="nodejs"/>, <xref linkend="pulseaudio"/> (ou <xref
linkend="alsa-lib"/> se você editar o mozconfig; agora obsoletado pelo
Mozilla); em quaisquer casos, por favor, leia as Informações de
Configuração, <xref linkend="python3"/> (reconstruído depois de instalar o
<xref linkend="sqlite"/>), <xref linkend="startup-notification"/>, <xref
linkend="unzip"/>, <xref linkend="yasm"/> e <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas</bridgehead>
    <para role="recommended">
      <xref linkend="icu"/>, <xref linkend="libevent"/>, <xref linkend="libvpx"/>,
<xref linkend="libwebp"/>, <xref linkend="nasm"/>, <xref linkend="nss"/>
    </para>

    <note>
      <para>
        Se você não instalar as dependências recomendadas, então cópias internas
desses pacotes serão usadas. Elas podem ter sido testadas para funcionar,
mas podem estar desatualizadas ou conter falhas de segurança.
      </para>
    </note>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="curl"/>, <xref linkend="doxygen"/>, <xref role="runtime"
linkend="ffmpeg"/> (tempo de execução, para reproduzir arquivos mov, mp3 ou
mp4), <xref linkend="liboauth"/>, <xref linkend="valgrind"/>, <xref
linkend="wget"/>, <xref linkend="wireless_tools"/>, <ulink
url="https://github.com/libproxy/libproxy">libproxy</ulink>
    </para>

    <para condition="html" role="usernotes">
      Observações de Usuário(a): <ulink url="&blfs-wiki;/firefox"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Instalação do Firefox</title>

    <para>
      A configuração do <application>Firefox</application> é realizada criando-se
um arquivo <filename>mozconfig</filename> contendo as opções desejadas de
configuração. Um <filename>mozconfig</filename> padrão é criado abaixo. Para
ver a lista completa de opções de configuração disponíveis (e uma descrição
abreviada de algumas delas), emita <command>./mach configure &amp;&amp;
./configure --help | less</command>. Você também possivelmente revise o
arquivo inteiro e descomente quaisquer outras opções desejadas. Crie o
arquivo emitindo o seguinte comando:
    </para>

<screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
<literal># Se você tiver uma máquina multi Elementos de Processamento, todos os Elementos de Processamento serão usados por padrão.

# Se você tiver instalado (ou instalará) o "wireless-tools" e desejar
# usar serviços de geolocalização da web, comente esta linha
ac_add_options --disable-necko-wifi

# Chaves de API para APIs de geolocalização - necko-wifi (acima) é exigido para MLS.
# Descomente a linha seguinte se desejar usar o Serviço de Localização do Mozilla
#ac_add_options --with-mozilla-api-keyfile=$PWD/mozilla-key

# Descomente a linha seguinte se desejar usar a API de geolocalização do Google
# (necessária para uso com mapas salvos com o Google Maps)
#ac_add_options --with-google-location-service-api-keyfile=$PWD/google-key

# notificação de inicialização é necessária desde o Firefox-78

# Descomente a seguinte opção se você não tiver instalado o PulseAudio
# e quiser usar o alsa
#ac_add_options --enable-audio-backends=alsa

# Comente as seguintes opções se você não tiver instalado
# as dependências recomendadas:
ac_add_options --with-system-icu
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-webp

# Ao contrário do Thunderbird, embora usar o vinculador Gold possa
# economizar quatro megabytes no arquivo instalado, isso não torna
# a construção mais rápida.

# libdavid (decodificador av1) exige nasm. Descomente isto se o nasm
# não tiver sido instalado. Não descomente se você tiver o
# ffmpeg-5 instalado.
#ac_add_options --disable-av1

# Você não pode distribuir o binário se fizer isto
ac_add_options --enable-official-branding

# A remoção agora está habilitada por padrão. Descomente estas linhas
# se você precisar executar um depurador:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# Desabilitar os símbolos de depuração torna a construção muito menor e um pouco
# mais rápida. Comente isto se você precisar executar um depurador. Observação: Isto é
# exigido para compilação em i686.
ac_add_options --disable-debug-symbols

# Foi informado que o elf-hack causa instalações falhas (depois de construções bem-sucedidas)
# em algumas máquinas. Supõe-se que melhore o tempo de inicialização e reduza a libxul.so em
# alguns MB - comente isto se você souber que tua máquina não é afetada.
ac_add_options --disable-elf-hack

# Os(As) editores(as) do BLFS recomendam não mudar nada abaixo desta linha:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
# enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# O nível padrão de otimização novamente produz uma construção funcional com o gcc.
ac_add_options --enable-optimize

ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

# Usar bibliotecas wasm em sandbox foi movido para todas as construções, em vez de
# apenas construções de automação do Mozilla. Exige pacotes extras llvm e foi
# informado que retarda seriamente a construção. Desative-o.
ac_add_options --without-wasm-sandboxed-libraries

# A opção seguinte desabilita o Informe de Telemetria. Com o Add-on Fiasco,
# constatou-se que a Mozilla estava coletando dados de usuário(a), incluindo senhas salvas
# e dados de formulários da web, sem o consentimento dos(as) usuários(as). Constatou-se, também,
# que a Mozilla estava enviando atualizações para sistemas sem o conhecimento ou permissão do(a)
# usuário(a). Como resultado disso, use o seguinte comando para desabilitar permanentemente
# os informes de telemetria no Firefox.
unset MOZ_TELEMETRY_REPORTING

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir</literal>
EOF</userinput></screen>

    <para>
      Compile o <application>Firefox</application> emitindo os seguintes comandos:
    </para>

    <para>
      Uma mudança em cbindgen-0.24.2 faz com que um símbolo seja agora gerado pelo
cbindgen, mas ele já foi definido em um cabeçalho. Este sed evita que a
compilação falhe:
    </para>

<!-- Not needed with clang. Upstream bug at
     https://bugzilla.mozilla.org/show_bug.cgi?id=1729459

    <para>

      If building on a 32 bit machine, the following sed works around
      an issue with an incompatible <quote>double</quote> type in one
      header file:
    </para>

<screen><userinput>case "$(uname -m)" in
    i?86) sed -e '/typedef[ ]*double/s/double/long double/' \
              -i modules/fdlibm/src/math_private.h ;;
esac</userinput></screen>
-->
<screen><userinput>sed -i '/ROOT_CLIP_CHAIN/d' gfx/webrender_bindings/webrender_ffi.h</userinput></screen>


    <para>
      Se as APIs de geolocalização forem necessárias:
    </para>

    <note>
      <para>
        
        <!-- Taken from Arch Linux - an immensely helpful link - Thanks -->
<!-- BLFS Devs, register an account at Google with your
        @linuxfromscratch.org email address, and I'll make you an administrator
        for the 'Google APIs for LFS' project (where the API and OAuth keys
        were created for use in the book).-->
As chaves de API do Google e Mozilla abaixo são específicas para o LFS. Se
usar essas instruções para outra distribuição ou se pretender distribuir
cópias binárias do software usando essas instruções, por favor, obtenha as
tuas próprias chaves seguindo as instruções localizadas em <ulink
url="https://www.chromium.org/developers/how-tos/api-keys"/> e <ulink
url="https://location.services.mozilla.com/api"/> respectivamente.
        
      </para>
    </note>

<screen><userinput>echo "AIzaSyDxKL42zsPjbke5O8_rPVpVrLrJ8aeE9rQ" > google-key
echo "613364a7-9418-4c86-bcee-57e32fd70c23" > mozilla-key</userinput></screen>

    <note>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozshm.xml"/>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozmach.xml"/>

    </note>
    
    <!-- Fixed in 102.8
    <para>

      First remove an obsolete flag in python code, that has been removed
      in python-3.11:
    </para>

<screen><userinput>grep -rl \"rU\" | xargs sed -i 's/"rU"/"r"/'</userinput></screen>

    <para>
      Then fix an issue with regular expressions in python-3.11:
    </para>

<screen><userinput>sed -e 's/?s)\./?s:.)/'               \
    -e '/?m)/{s/?m)/?m:/;s/\$"/$)"/}' \
    -e '/?s)%/{s/?s)/?s:/;s/?"/?)"/}' \
    -i xpcom/idl-parser/xpidl/xpidl.py</userinput></screen>
-->
<para>
      Agora invoque o conjunto de comandos sequenciais Python
<command>mach</command> para compilar o pacote.
    </para>

<screen><userinput>export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none &amp;&amp;
export MOZBUILD_STATE_PATH=${PWD}/mozbuild          &amp;&amp;
./mach configure                                    &amp;&amp;
./mach build</userinput></screen>

    <para>
      O <filename>mozconfig</filename> acima desabilita os testes porque eles usam
muito mais tempo e espaço em disco sem nenhum benefício óbvio. Se você,
mesmo assim, os tiver ativado, poderá executar os testes executando
<command>./mach gtest</command>. Isso exigirá uma conexão de rede de
intercomunicação e será executado a partir de uma sessão do Xorg - existe
uma caixa de diálogo pop-up quando ele falha ao se conectar ao ALSA (isso
não cria um teste com falha). Um ou dois testes falharão. Para ver os
detalhes da(s) falha(s), você precisará registrar a saída gerada a partir
desse comando, de forma que consiga revisá-la(s).
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none ./mach install</userinput></screen>

    <para>
      Esvazie as variáveis de ambiente que foram configuradas acima:
    </para>

<screen><userinput>unset MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE MOZBUILD_STATE_PATH</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>



    <!--<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/SIOCGSTAMP.xml"/>
-->
<para>
      <command>export MOZBUILD_STATE_PATH=${PWD}/mozbuild</command>: A construção
agora deve te informar que pretende criar <filename
class="directory">~/.mozbuild</filename> e oferecer a você uma opção para
pressionar &lt;ENTER&gt; para aceitar isso ou Ctrl-C para cancelar e
reiniciar a construção depois de especificar o diretório. Na prática, a
mensagem possivelmente não apareça até depois do &lt;ENTER&gt; ser
pressionado, ou seja, a construção para.
    </para>

    <para>
      Esse diretório é usado para um identificador de telemetria (provavelmente
aleatório). Criar isso no diretório de construção, e deletá-lo depois da
instalação, evita que seja usado. Se você deseja participar da telemetria,
exporte MOZBUILD_STATE_PATH para apontar para o diretório padrão dele e
remova a entrada do <filename>mozconfig</filename>.
    </para>

    <para>
      <command>MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none</command>: Use o
Python do sistema para criar um ambiente virtual para o
<command>mach</command> sem baixar nenhuma roda Python nem usar os módulos
Python do sistema. Isso evita incompatibilidades de versão entre os módulos
do sistema e os incluídos.
    </para>

    <para>
      <command>./mach configure</command>: Isso valida as dependências fornecidas
e o <filename>mozconfig</filename>.
    </para>

    <para>
      <option>./mach build --verbose</option>: Use essa alternativa se você
precisar de detalhes a respeito de quais arquivos estão sendo compilados,
juntamente com quaisquer sinalizadores C ou C++ sendo usados. Mas não
adicione '--verbose' ao comando de instalação, pois não é aceito lá.
    </para>

    <para>
      <option>./mach build -jN</option>: A construção deveria, por padrão, usar
todos os Elementos de Processamento de CPU online. Se usar todos os
Elementos de Processamento fizer com que a construção use a área de troca
porque você tem memória insuficiente, usar menos Elementos de Processamento
poderá ser mais rápido.
    </para>

    <para>
      <option><envar>CC=gcc CXX=g++</envar></option>: o BLFS costumava preferir
usar gcc e g++ em vez dos padrões do(a) desenvolvedor(a) dos aplicativos
<application>clang</application>. Com o lançamento do gcc-12, a construção
demora mais tempo com gcc e g++, principalmente por causa de avisos extras,
e é maior. Configure essas variáveis de ambiente <emphasis>antes de você
executar o conjunto de comandos sequenciais de configuração</emphasis> se
desejar continuar a usar gcc, g++. Construir com GCC no i?86 atualmente está
quebrado.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configurando o Firefox</title>

    <para>
      Se você usa um ambiente de área de trabalho, como
<application>Gnome</application> ou <application>KDE</application>, você
possivelmente queira criar um arquivo <filename>firefox.desktop</filename>,
de forma que o <application>Firefox</application> apareça nos menus do
painel. Como o(a) usuário(a) &root;:
    </para>

<screen role="root"><userinput>mkdir -pv /usr/share/applications &amp;&amp;
mkdir -pv /usr/share/pixmaps      &amp;&amp;

MIMETYPE="text/xml;text/mml;text/html;"                            &amp;&amp;
MIMETYPE+="application/xhtml+xml;application/vnd.mozilla.xul+xml;" &amp;&amp;
MIMETYPE+="x-scheme-handler/http;x-scheme-handler/https"           &amp;&amp;

cat &gt; /usr/share/applications/firefox.desktop &lt;&lt; EOF &amp;&amp;
<literal>[Desktop Entry]
Encoding=UTF-8
Name=Navegador da Web Firefox
Comment=Navegue a World Wide Web
GenericName=Navegador da Web
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=$MIMETYPE
StartupNotify=true</literal>
EOF

unset MIMETYPE &amp;&amp;

ln -sfv /usr/lib/firefox/browser/chrome/icons/default/default128.png \
        /usr/share/pixmaps/firefox.png</userinput></screen>

    <sect3><title>Informação de Configuração</title>

      <para>
        As configurações de aplicativo para o Firefox são acessíveis digitando-se
<command>about:config</command> na barra de endereço.
      </para>

      <para>
        Ocasionalmente, conseguir som que funcione no
<application>firefox</application> pode ser um problema. Embora o(a)
desenvolvedor(a) prefira o pulseaudio, no geral, usar
<application>Alsa</application> possivelmente seja mais fácil.
      </para>

      <para>
        Se você habilitou o <application>Alsa</application> para som, você
possivelmente precise alterar uma variável para obter som funcional. Se
executar o <command>firefox</command> a partir de um terminal e tentar
reproduzir algo com som, você poderá encontrar mensagens de erro como:
      </para>

      <para>
         <literal>Sandbox: seccomp sandbox violation: pid 3941, tid 4030, syscall 16,
args 48 2147767296 139909894784796 0 0 0.</literal>
      </para>

      <para>
        Isso foi em x86_64, em i686 o número da chamada de sistema é 54. Para
permitir esse chamada de sistema, em <command>about:config</command> mude
<command>security.sandbox.content.syscall_whitelist</command> para 16 (ou 54
se usar i686).
      </para>

      <para>
        Se usar <command>pulseaudio</command> em um ambiente de área de trabalho,
ele já poderá ter sido iniciado por esse Ambiente. Mas se não tiver, embora
o Firefox-57 conseguisse iniciá-lo, o Firefox-58 não consegue. Se executar o
<command>firefox</command> a partir de um terminal e esse problema estiver
presente, ao tentar reproduzir o som, você encontrará mensagens de erro
avisando <literal>Can't get cubeb context!</literal>
      </para>

    <para>
      A correção para isso é fechar o firefox, iniciar o pulseaudio para verificar
se ele inicia (se não, leiam-se as informações em Configuração em <xref
linkend="pulseaudio"/>) e reiniciar o firefox para verificar se está
funcionando. Se agora funcionar, adicione o seguinte ao teu
<filename>~/.xinitrc</filename>: <phrase revision="sysv">
<literal>pulseaudio --verbose --log-target=syslog&amp;</literal></phrase>
<phrase revision="systemd"> <literal>pulseaudio --verbose
--log-target=journald&amp;</literal></phrase> (infelizmente, em alguns
sistemas, isso não funciona).
      </para>

      <para>
        Você possivelmente deseje usar vários perfis no Firefox. Para fazer isso,
invoque o Firefox como <command>firefox --ProfileManager</command>. Você
também pode verificar qual perfil está em uso no momento a partir de
<command>about:profiles</command>.
      </para>

      <para>
        Embora o WebRender (usando a GPU para composição) não seja usado por padrão,
agora parece funcionar bem em hardware compatível (GPUs ATI, Nvidia e Intel
com Mesa-18 ou posterior). Para uma explicação, por favor, veja-se <ulink
url="https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/">hacks.mozilla.org</ulink>.
A única desvantagem parece ser que, em uma máquina com RAM limitada, ele
poderá usar mais RAM.
     </para>

    <para>
      Para verificar se o WebRender está sendo usado, consulte about:support. Na
seção Gráficos, a Composição ou mostrará 'Básico' (ou seja, não em uso) ou
'WebRender'. Para habilitá-lo, acesse about:config e mude gfx.webrender.all
para True. Você precisará reiniciar o Firefox.
    </para>

    <para>
      Possivelmente seja útil mencionar os processos provenientes do Firefox que
podem aparecer no <command>top</command> - assim como o próprio firefox,
possivelmente existam vários processos de Conteúdo da Web e agora um
processo RDD (Remote Data Decoder) que aparece quando reproduzindo vídeos da
web codificados com av1 (libdav1d). Se o WebRender tiver sido habilitado, um
Processo de GPU também aparecerá quando o Firefox tiver que repintar (por
exemplo, rolar, abrir uma nova guia ou reproduzir um vídeo).
    </para>

    </sect3>
  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretório Instalado</segtitle>

      <seglistitem>
        <seg>
          firefox
        </seg>
        <seg>
          Numerosas bibliotecas, componentes de navegador, plug-ins, extensões e
módulos auxiliares instalados em /usr/lib/firefox
        </seg>
        <seg>
          /usr/lib/firefox
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="firefox-prog">
        <term><command>firefox</command></term>
        <listitem>
          <para>
            é um navegador <application>GTK+-3</application> da Internet que usa o
mecanismo de renderização Mozilla Gecko
          </para>
          <indexterm zone="firefox firefox-prog">
            <primary sortas="b-firefox">firefox</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
