<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mutter-download-http "&gnome-download-http;/mutter/&gnome-44;/mutter-&mutter-version;.tar.xz">
  <!ENTITY mutter-download-ftp  "&gnome-download-ftp;/mutter/&gnome-44;/mutter-&mutter-version;.tar.xz">
  <!ENTITY mutter-md5sum        "c9a692911a8ff849c6bbfb44eca7a92f">
  <!ENTITY mutter-size          "2,7 MB">
  <!ENTITY mutter-buildsize     "99 MB (with tests)">
  <!ENTITY mutter-time          "0.8 SBU (Using parallelism=4; add 1.4 SBU for tests)">
]>

<sect1 id="mutter" xreflabel="Mutter-&mutter-version;">
  <?dbhtml filename="mutter.html"?>


  <title>Mutter-&mutter-version;</title>

  <indexterm zone="mutter">
    <primary sortas="a-Mutter">Mutter</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introdução ao Mutter</title>

    <para>
      <application>Mutter</application> é o gerenciador de janelas para o
<application>GNOME</application>. Ele não é invocado diretamente, mas a
partir da <application>Sessão GNOME</application> (em uma máquina com um
controlador de vídeo acelerado por hardware).
    </para>

    &lfs120_checked;

    <bridgehead renderas="sect3">Informação do Pacote</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Transferência (HTTP): <ulink url="&mutter-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Transferência (FTP): <ulink url="&mutter-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Soma de verificação MD5 da transferência: &mutter-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Tamanho da transferência: &mutter-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Espaço em disco estimado exigido: &mutter-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Tempo de construção estimado: &mutter-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependências do Mutter</bridgehead>

    <bridgehead renderas="sect4">Exigidas</bridgehead>
    <para role="required">
      <xref linkend="gnome-settings-daemon"/>, <xref linkend="graphene"/>, <xref
linkend="libxcvt"/>, <xref linkend="libxkbcommon"/> e <xref
linkend="pipewire"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas</bridgehead>
    <para role="recommended">
      <xref linkend="desktop-file-utils"/>, <xref
linkend="gobject-introspection"/>, and <xref
linkend="startup-notification"/>
    </para>

    <bridgehead renderas="sect4">Recomendadas (exigidas para construir o compositor Wayland)</bridgehead>
    <para role="recommended">
      <xref linkend="libinput"/>, <xref linkend="wayland"/>, <xref
linkend="wayland-protocols"/>, and <xref linkend="xwayland"/>.
    </para>

    <bridgehead renderas="sect4"
                revision="sysv">Recomendadas (tempo de execução)</bridgehead>
    <para role="recommended" revision="sysv">
      <xref linkend="blocaled" role="runtime"/>
    </para>

    <bridgehead renderas="sect4">Opcionais</bridgehead>
    <para role="optional">
      <xref linkend="python-dbusmock"/> (required for tests), <xref
linkend="sysprof"/>, <xref linkend="xorg-server"/> (for X11 sessions)
    </para>

    

  <!-- NOTE: Mutter compiles shipped Cogl and Clutter for it's own
    internal use. This is because upstream have decided that Cogl and
    Clutter should be only used by Mutter in the future, so the development
    of Cogl and Clutter is now performed in the Mutter repository.  The
    "standalone" Cogl and Clutter are considered obsolete now and we have
    archived them.  -->
</sect2>

  <sect2 role="installation">
    <title>Instalação do Mutter</title>

    <para>
      Instale o <application>Mutter</application> executando os seguintes
comandos:
    </para>

<!--
    <para>

      To test the results, issue:
      <command>dbus-run-session ninja test</command>. The tests
      require an active X session to run correctly. It is not necessary to
      run a  separate D-bus session if not in a GNOME session, but it
      provides a clean environment in any case. One test,
      <filename>native-headless</filename>, is known to fail.
    </para>
    -->
<!-- there are no added problems in sysv, AFAICT. Running the tests is
    not easy whatever the init system. But using the instructions below in
    a gnome session on sysv works (no test failure)...
    <para revision='sysv'>

       This package does not come with a test suite that runs properly in the
       SystemV environment.
    </para>
    -->
<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup --prefix=/usr              \
            --buildtype=release        \
            -Dtests=false              \
            -Dprofiler=false           \
            ..                         &amp;&amp;
ninja</userinput></screen>


    

    <para>
      The test suite requires an external program called
<command>xvfb-run</command>.  If you wish to run the tests, you should
download and install it before running <command>meson</command>.  You can
obtain it from <ulink
url="&sources-anduin-http;/mutter/xvfb-run">xvfb-run</ulink>, and install it
with executable permissions in <filename
class="directory">/usr/bin</filename>.  <command>xvfb-run</command> needs
<command>Xvfb</command> at runtime, and <command>Xvfb</command> can be
installed from either <xref linkend='xorg-server'/> or <xref
linkend='xwayland'/>.  You should also replace
<parameter>-Dtests=false</parameter> in the <command>meson</command>
command, with <parameter>-Dtests=true -Dclutter_tests=false</parameter>.
The test suite requires the mutter schema to be installed on the system, so
it is better to run the tests after installing the package.
    </para>

    <para>
      Você também pode testar funções básicas do <application>Mutter</application>
seguindo <xref linkend='mutter-starting'/>, depois de instalá-lo.
    </para>

    <para>
      Agora, como o(a) usuário(a) <systemitem class="username">root</systemitem>:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

    <para>
      Se você deseja executar os testes, remova a referência ao
<application>Zenity</application>, que não faz parte do BLFS, de um teste:
    </para>

<screen role='test'><userinput>sed 's/zenity --[a-z]*/gtk4-demo/' -i ../src/tests/x11-test.sh</userinput></screen>

    <para>
      Agora execute a suíte de teste:
    </para>

    
<screen role='test'><!-- Without "HOME=" one test can fail with certain monitor
         configuration in $HOME/.config/monitors.xml. -->
<userinput>HOME= ninja test</userinput></screen>

    <para>
      <!-- https://gitlab.gnome.org/GNOME/mutter/-/issues/2848 -->
<!-- This needs a pipewire daemon running.  As at Aug 2023
           the method to run a pipewire daemon is not in BLFS
           (but in editor notes), so claim this a known failure.  -->
The tests require an active X or wayland session.  Two tests named
<filename>cogl-test-framebuffer-get-bits-gl3</filename> and
<filename>native-unit</filename> are known to fail.  A few other tests may
fail depending on the configuration.  Don't make any mouse or keyboard input
while the test suite is running or some tests may fail.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Explicações do Comando</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <parameter>-Dtests=false</parameter>: Impede a construção dos testes e
remove um requisito difícil em <command>xvfb-run</command>.
    </para>

    <para>
      <parameter>-Dprofiler=false</parameter>: Allow building this package without
<application>Sysprof</application>.  Remove this option if you've installed
<application>Sysprof</application> and want to analysis the rendering
performance of <application>Mutter</application>.
    </para>

    <para>
      <option>-Dtests=true -Dclutter_tests=false</option>: Building all the tests
but the tests for the shipped <application>Clutter</application> library.
The <application>Clutter</application> tests are known to fail with
<option>--buildtype=release</option>.
    </para>

  </sect2>

  <sect2 role="starting" id="mutter-starting">
    <title>Iniciando o Mutter</title>

    

    <!-- Mutter as a Wayland compositor works with recent mutter releases.
         IIRC mutter can also be used as a X window manager: just replace
         "twm" with "mutter &dash;&dash;x11" in xinitrc. But I've not tested
         such a configuration recently (I don't build Xorg Server or xinit
         these days.  -->
<para>
      <application>Mutter</application> normalmente é usado como um componente do
<application>gnome-shell</application>, mas também pode ser usado como um
compositor autônomo Wayland. Para executar <application>Mutter</application>
como um compositor Wayland, em um console virtual, emita:
    </para>

    <screen role='nodump'><userinput>mutter --wayland -- vte-2.91</userinput></screen>

    <para>
      Substitua <command>vte-2.91</command> pela linha de comando do primeiro
aplicativo que você deseja na sessão do Wayland. Observe que assim que esse
aplicativo sair, a sessão do Wayland será terminada.
    </para>

    <para>
      <application>Mutter</application> também pode funcionar como um compositor
aninhado em outra sessão do Wayland. Em um emulador de terminal, emita:
    </para>

    <screen role='nodump'><userinput>MUTTER_DEBUG_DUMMY_MODE_SPECS=1920x1080 mutter --wayland --nested -- vte-2.91</userinput></screen>

    <para>
      Substitua <replaceable>1920x1080</replaceable> pelo tamanho que você quiser
para a sessão aninhada do Wayland.
    </para>
  </sect2>

  <sect2 role="content">
    <title>Conteúdo</title>

    <segmentedlist>
      <segtitle>Aplicativos Instalados</segtitle>
      <segtitle>Bibliotecas Instaladas</segtitle>
      <segtitle>Diretórios Instalados</segtitle>

      <seglistitem>
        <seg>
          mutter
        </seg>
        <seg>
          libmutter-12.so and libmutter-test-12.so (optional)
        </seg>
        <seg>
          /usr/{lib,include,libexec/installed-tests,share/{,installed-tests}}/mutter-12
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="mutter-prog">
        <term><command>mutter</command></term>
        <listitem>
          <para>
            é um gerenciador de janelas de composição <application>GTK+</application>
baseado em <application>Clutter</application>
          </para>
          <indexterm zone="mutter mutter-prog">
            <primary sortas="b-mutter">mutter</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmutter">
        <term><filename class="libraryfile">libmutter-12.so</filename></term>
        <listitem>
          <para>
            contém as funções da API do <application>Mutter</application>
          </para>
          <indexterm zone="mutter libmutter">
            <primary sortas="c-libmutter">libmutter-12.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmutter-test">
        <term><filename class="libraryfile">libmutter-test-12.so</filename></term>
        <listitem>
          <para>
            contains the <application>Mutter</application> test suite API functions;
this library is only installed if the test suite of this package is enabled
and it is needed by <application>gnome-shell</application> test suite
          </para>
          <indexterm zone="mutter libmutter-test">
            <primary sortas="c-libmutter-test">libmutter-test-12.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
